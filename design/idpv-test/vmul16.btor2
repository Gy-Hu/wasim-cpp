; BTOR description generated by Yosys 0.37+34 (git sha1 80511ced7, clang 14.0.0-1ubuntu1.1 -fPIC -Os) for module float_mult16.
1 sort bitvec 16
2 input 1 floatB ; float_mult16.v:4.22-4.28
3 input 1 floatA ; float_mult16.v:4.14-4.20
4 sort bitvec 10
5 const 4 0000000000
6 sort bitvec 22
7 sort bitvec 1
8 const 7 1
9 slice 4 3 9 0
10 sort bitvec 11
11 concat 10 8 9
12 uext 6 11 11
13 slice 4 2 9 0
14 concat 10 8 13
15 uext 6 14 11
16 mul 6 12 15 $mul$float_mult16.v:23$9 ; float_mult16.v:23.14-23.35
17 sort bitvec 12
18 slice 17 16 11 0
19 concat 6 18 5
20 slice 7 16 12 12
21 ite 6 20 16 19 $procmux$81 ; float_mult16.v:52.16-52.36|float_mult16.v:52.12-55.6
22 sort bitvec 9
23 const 22 000000000
24 sort bitvec 13
25 slice 24 16 12 0
26 concat 6 25 23
27 slice 7 16 13 13
28 ite 6 27 26 21 $procmux$144 ; float_mult16.v:49.16-49.36|float_mult16.v:49.12-55.6
29 sort bitvec 8
30 const 29 00000000
31 sort bitvec 14
32 slice 31 16 13 0
33 concat 6 32 30
34 slice 7 16 14 14
35 ite 6 34 33 28 $procmux$201 ; float_mult16.v:46.16-46.36|float_mult16.v:46.12-55.6
36 sort bitvec 7
37 const 36 0000000
38 sort bitvec 15
39 slice 38 16 14 0
40 concat 6 39 37
41 slice 7 16 15 15
42 ite 6 41 40 35 $procmux$252 ; float_mult16.v:43.16-43.36|float_mult16.v:43.12-55.6
43 sort bitvec 6
44 const 43 000000
45 slice 1 16 15 0
46 concat 6 45 44
47 slice 7 16 16 16
48 ite 6 47 46 42 $procmux$297 ; float_mult16.v:40.16-40.36|float_mult16.v:40.12-55.6
49 sort bitvec 5
50 const 49 00000
51 sort bitvec 17
52 slice 51 16 16 0
53 concat 6 52 50
54 slice 7 16 17 17
55 ite 6 54 53 48 $procmux$336 ; float_mult16.v:37.16-37.36|float_mult16.v:37.12-55.6
56 sort bitvec 4
57 const 56 0000
58 sort bitvec 18
59 slice 58 16 17 0
60 concat 6 59 57
61 slice 7 16 18 18
62 ite 6 61 60 55 $procmux$369 ; float_mult16.v:34.16-34.36|float_mult16.v:34.12-55.6
63 sort bitvec 3
64 const 63 000
65 sort bitvec 19
66 slice 65 16 18 0
67 concat 6 66 64
68 slice 7 16 19 19
69 ite 6 68 67 62 $procmux$396 ; float_mult16.v:31.16-31.36|float_mult16.v:31.12-55.6
70 sort bitvec 2
71 const 70 00
72 sort bitvec 20
73 slice 72 16 19 0
74 concat 6 73 71
75 slice 7 16 20 20
76 ite 6 75 74 69 $procmux$417 ; float_mult16.v:28.16-28.36|float_mult16.v:28.12-55.6
77 const 7 0
78 sort bitvec 21
79 slice 78 16 20 0
80 concat 6 79 77
81 slice 7 16 21 21
82 ite 6 81 80 76 $procmux$432 ; float_mult16.v:25.7-25.27|float_mult16.v:25.3-55.6
83 sort bitvec 32
84 slice 49 3 14 10
85 uext 43 84 1
86 slice 49 2 14 10
87 uext 43 86 1
88 add 43 85 87 $add$float_mult16.v:19$6 ; float_mult16.v:19.14-19.43
89 const 49 01111
90 uext 43 89 1
91 sub 43 88 90 $sub$float_mult16.v:19$7 ; float_mult16.v:19.14-19.51
92 const 49 00010
93 uext 43 92 1
94 add 43 91 93 $add$float_mult16.v:19$8 ; float_mult16.v:19.14-19.58
95 sext 83 94 26
96 const 83 00000000000000000000000000001010
97 sub 83 95 96 $sub$float_mult16.v:54$39 ; float_mult16.v:54.15-54.28
98 slice 43 97 5 0
99 ite 43 20 94 98 $procmux$48 ; float_mult16.v:52.16-52.36|float_mult16.v:52.12-55.6
100 sext 83 94 26
101 const 83 00000000000000000000000000001001
102 sub 83 100 101 $sub$float_mult16.v:51$36 ; float_mult16.v:51.15-51.27
103 slice 43 102 5 0
104 ite 43 27 103 99 $procmux$114 ; float_mult16.v:49.16-49.36|float_mult16.v:49.12-55.6
105 sext 83 94 26
106 const 83 00000000000000000000000000001000
107 sub 83 105 106 $sub$float_mult16.v:48$33 ; float_mult16.v:48.15-48.27
108 slice 43 107 5 0
109 ite 43 34 108 104 $procmux$174 ; float_mult16.v:46.16-46.36|float_mult16.v:46.12-55.6
110 sext 83 94 26
111 const 83 00000000000000000000000000000111
112 sub 83 110 111 $sub$float_mult16.v:45$30 ; float_mult16.v:45.15-45.27
113 slice 43 112 5 0
114 ite 43 41 113 109 $procmux$228 ; float_mult16.v:43.16-43.36|float_mult16.v:43.12-55.6
115 sext 83 94 26
116 const 83 00000000000000000000000000000110
117 sub 83 115 116 $sub$float_mult16.v:42$27 ; float_mult16.v:42.15-42.27
118 slice 43 117 5 0
119 ite 43 47 118 114 $procmux$276 ; float_mult16.v:40.16-40.36|float_mult16.v:40.12-55.6
120 sext 83 94 26
121 const 83 00000000000000000000000000000101
122 sub 83 120 121 $sub$float_mult16.v:39$24 ; float_mult16.v:39.15-39.27
123 slice 43 122 5 0
124 ite 43 54 123 119 $procmux$318 ; float_mult16.v:37.16-37.36|float_mult16.v:37.12-55.6
125 sext 83 94 26
126 const 83 00000000000000000000000000000100
127 sub 83 125 126 $sub$float_mult16.v:36$21 ; float_mult16.v:36.15-36.27
128 slice 43 127 5 0
129 ite 43 61 128 124 $procmux$354 ; float_mult16.v:34.16-34.36|float_mult16.v:34.12-55.6
130 sext 83 94 26
131 const 83 00000000000000000000000000000011
132 sub 83 130 131 $sub$float_mult16.v:33$18 ; float_mult16.v:33.15-33.27
133 slice 43 132 5 0
134 ite 43 68 133 129 $procmux$384 ; float_mult16.v:31.16-31.36|float_mult16.v:31.12-55.6
135 sext 83 94 26
136 const 83 00000000000000000000000000000010
137 sub 83 135 136 $sub$float_mult16.v:30$15 ; float_mult16.v:30.15-30.27
138 slice 43 137 5 0
139 ite 43 75 138 134 $procmux$408 ; float_mult16.v:28.16-28.36|float_mult16.v:28.12-55.6
140 sext 83 94 26
141 const 83 00000000000000000000000000000001
142 sub 83 140 141 $sub$float_mult16.v:27$12 ; float_mult16.v:27.15-27.27
143 slice 43 142 5 0
144 ite 43 81 143 139 $procmux$426 ; float_mult16.v:25.7-25.27|float_mult16.v:25.3-55.6
145 slice 7 3 15 15
146 slice 7 2 15 15
147 xor 7 145 146 $xor$float_mult16.v:18$5 ; float_mult16.v:18.10-18.33
148 slice 4 82 21 12
149 slice 49 144 4 0
150 concat 38 149 148
151 concat 1 147 150
152 const 1 0000000000000000
153 slice 7 144 5 5
154 ite 1 153 152 151 $procmux$42 ; float_mult16.v:58.6-58.23|float_mult16.v:58.3-63.6
155 input 1
156 redor 7 3
157 not 7 156 $eq$float_mult16.v:15$2 ; float_mult16.v:15.6-15.17
158 redor 7 2
159 not 7 158 $eq$float_mult16.v:15$3 ; float_mult16.v:15.21-15.32
160 or 7 157 159 $logic_or$float_mult16.v:15$4 ; float_mult16.v:15.6-15.32
161 ite 1 160 155 154 $procmux$45 ; float_mult16.v:15.6-15.32|float_mult16.v:15.2-64.5
162 ite 1 160 152 161 $procmux$438 ; float_mult16.v:15.6-15.32|float_mult16.v:15.2-64.5
163 output 162 product ; float_mult16.v:5.19-5.26
164 state 6 $auto$clk2fflogic.cc:88:sample_data$\fraction#sampled$542
165 const 6 0000000000000000000000
166 state 6 $auto$clk2fflogic.cc:88:sample_data$$procmux$441_Y#sampled$548
167 init 6 166 165
168 state 7 $auto$clk2fflogic.cc:62:sample_control$$auto$rtlil.cc:2461:Not$545#sampled$546
169 init 7 168 77
170 ite 6 168 166 164 $auto$clk2fflogic.cc:110:mux$550
171 not 7 160 $auto$clk2fflogic.cc:58:sample_control$544
172 ite 6 171 82 170 $auto$clk2fflogic.cc:110:mux$552
173 uext 6 172 0 fraction ; float_mult16.v:11.12-11.20
174 state 10 $auto$clk2fflogic.cc:88:sample_data$\fractionB#sampled$530
175 const 10 00000000000
176 state 10 $auto$clk2fflogic.cc:88:sample_data$$procmux$444_Y#sampled$536
177 init 10 176 175
178 state 7 $auto$clk2fflogic.cc:62:sample_control$$auto$rtlil.cc:2461:Not$533#sampled$534
179 init 7 178 77
180 ite 10 178 176 174 $auto$clk2fflogic.cc:110:mux$538
181 not 7 160 $auto$clk2fflogic.cc:58:sample_control$532
182 ite 10 181 14 180 $auto$clk2fflogic.cc:110:mux$540
183 uext 10 182 0 fractionB ; float_mult16.v:10.23-10.32
184 state 10 $auto$clk2fflogic.cc:88:sample_data$\fractionA#sampled$518
185 state 10 $auto$clk2fflogic.cc:88:sample_data$$procmux$447_Y#sampled$524
186 init 10 185 175
187 state 7 $auto$clk2fflogic.cc:62:sample_control$$auto$rtlil.cc:2461:Not$521#sampled$522
188 init 7 187 77
189 ite 10 187 185 184 $auto$clk2fflogic.cc:110:mux$526
190 not 7 160 $auto$clk2fflogic.cc:58:sample_control$520
191 ite 10 190 11 189 $auto$clk2fflogic.cc:110:mux$528
192 uext 10 191 0 fractionA ; float_mult16.v:10.12-10.21
193 state 4 $auto$clk2fflogic.cc:88:sample_data$\mantissa#sampled$506
194 state 4 $auto$clk2fflogic.cc:88:sample_data$$procmux$450_Y#sampled$512
195 init 4 194 5
196 state 7 $auto$clk2fflogic.cc:62:sample_control$$auto$rtlil.cc:2461:Not$509#sampled$510
197 init 7 196 77
198 ite 4 196 194 193 $auto$clk2fflogic.cc:110:mux$514
199 slice 4 82 21 12
200 not 7 160 $auto$clk2fflogic.cc:58:sample_control$508
201 ite 4 200 199 198 $auto$clk2fflogic.cc:110:mux$516
202 uext 4 201 0 mantissa ; float_mult16.v:9.11-9.19
203 state 43 $auto$clk2fflogic.cc:88:sample_data$\exponent#sampled$494
204 state 43 $auto$clk2fflogic.cc:88:sample_data$$procmux$453_Y#sampled$500
205 init 43 204 44
206 state 7 $auto$clk2fflogic.cc:62:sample_control$$auto$rtlil.cc:2461:Not$497#sampled$498
207 init 7 206 77
208 ite 43 206 204 203 $auto$clk2fflogic.cc:110:mux$502
209 not 7 160 $auto$clk2fflogic.cc:58:sample_control$496
210 ite 43 209 144 208 $auto$clk2fflogic.cc:110:mux$504
211 uext 43 210 0 exponent ; float_mult16.v:8.18-8.26
212 state 7 $auto$clk2fflogic.cc:88:sample_data$\sign#sampled$482
213 state 7 $auto$clk2fflogic.cc:88:sample_data$$procmux$456_Y#sampled$488
214 init 7 213 77
215 state 7 $auto$clk2fflogic.cc:62:sample_control$$auto$rtlil.cc:2461:Not$485#sampled$486
216 init 7 215 77
217 ite 7 215 213 212 $auto$clk2fflogic.cc:110:mux$490
218 not 7 160 $auto$clk2fflogic.cc:58:sample_control$484
219 ite 7 218 147 217 $auto$clk2fflogic.cc:110:mux$492
220 uext 7 219 0 sign ; float_mult16.v:7.5-7.9
221 next 6 164 172 $auto$clk2fflogic.cc:95:sample_data$543
222 next 6 166 82 $auto$clk2fflogic.cc:95:sample_data$549
223 next 7 168 171 $auto$clk2fflogic.cc:67:sample_control$547
224 next 10 174 182 $auto$clk2fflogic.cc:95:sample_data$531
225 next 10 176 14 $auto$clk2fflogic.cc:95:sample_data$537
226 next 7 178 181 $auto$clk2fflogic.cc:67:sample_control$535
227 next 10 184 191 $auto$clk2fflogic.cc:95:sample_data$519
228 next 10 185 11 $auto$clk2fflogic.cc:95:sample_data$525
229 next 7 187 190 $auto$clk2fflogic.cc:67:sample_control$523
230 next 4 193 201 $auto$clk2fflogic.cc:95:sample_data$507
231 next 4 194 199 $auto$clk2fflogic.cc:95:sample_data$513
232 next 7 196 200 $auto$clk2fflogic.cc:67:sample_control$511
233 next 43 203 210 $auto$clk2fflogic.cc:95:sample_data$495
234 next 43 204 144 $auto$clk2fflogic.cc:95:sample_data$501
235 next 7 206 209 $auto$clk2fflogic.cc:67:sample_control$499
236 next 7 212 219 $auto$clk2fflogic.cc:95:sample_data$483
237 next 7 213 147 $auto$clk2fflogic.cc:95:sample_data$489
238 next 7 215 218 $auto$clk2fflogic.cc:67:sample_control$487
; end of yosys output
