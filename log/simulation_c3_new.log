GET INVAR: ILA_r3_randinit
GET INVAR: ILA_r2_randinit
GET INVAR: ILA_r1_randinit
GET INVAR: ILA_r0_randinit
GET INVAR: __ILA_I_inst
GET INVAR: __VLG_I_dummy_read_rf
GET INVAR: __VLG_I_inst
GET INVAR: __VLG_I_inst_valid
GET INVAR: __VLG_I_stallex
GET INVAR: __VLG_I_stallwb
GET INVAR: ____auxvar0__recorder_init__
GET INVAR: ____auxvar1__recorder_init__
GET INVAR: ____auxvar2__recorder_init__
GET INVAR: ____auxvar3__recorder_init__
GET INVAR: clk
GET INVAR: dummy_reset
GET INVAR: rst
GET SV: RTL_id_ex_valid
GET SV: RTL_ex_wb_valid
GET SV: RTL_ex_wb_rd
GET SV: RTL_ex_wb_reg_wen
GET SV: RTL_id_ex_rd
GET SV: RTL_id_ex_reg_wen
GET SV: RTL_if_id_valid
GET SV: RTL_registers[0]
GET SV: RTL_registers[1]
GET SV: RTL_registers[2]
GET SV: RTL_registers[3]
GET SV: RTL_scoreboard[0]
GET SV: RTL_scoreboard[1]
GET SV: RTL_scoreboard[2]
GET SV: RTL_scoreboard[3]
GET SV: ILA_r0
GET SV: ILA_r1
GET SV: ILA_r2
GET SV: ILA_r3
GET SV: ILA___COUNTER_start__n3
GET SV: RTL_ex_wb_val
GET SV: RTL_if_id_inst
GET SV: RTL_id_ex_operand1
GET SV: RTL_id_ex_operand2
GET SV: RTL_id_ex_op
clk
____auxvar3__recorder_init__
rst
ILA_r1_randinit
input105
dummy_reset
ILA_r0_randinit
__VLG_I_inst
__VLG_I_stallex
__ILA_I_inst
__VLG_I_stallwb
ILA_r2_randinit
__VLG_I_dummy_read_rf
__VLG_I_inst_valid
____auxvar0__recorder_init__
ILA_r3_randinit
____auxvar1__recorder_init__
____auxvar2__recorder_init__


 state var: 

RTL_id_ex_op
ILA___COUNTER_start__n3
__auxvar2__recorder_sn_vhold
RTL_id_ex_operand1
__auxvar1__recorder_sn_vhold
stage_tracker_id_ex_iuv
__auxvar2__recorder_sn_condmet
RTL_if_id_inst
__auxvar1__recorder_sn_condmet
stage_tracker_ex_wb_iuv
RTL_registers[3]
__auxvar0__recorder
RTL_ex_wb_val
RTL_scoreboard[0]
__auxvar3__recorder_sn_condmet
__START__
RTL_registers[0]
RTL_if_id_valid
__auxvar3__recorder_sn_vhold
RTL_scoreboard[1]
RTL_scoreboard[2]
RTL_id_ex_reg_wen
__auxvar0__recorder_sn_vhold
RTL_id_ex_rd
RTL_ex_wb_rd
RTL_id_ex_operand2
RTL_registers[2]
stage_tracker_if_id_iuv
RTL_ex_wb_valid
__auxvar2__recorder
__2ndENDED__
RTL_id_ex_valid
__CYCLE_CNT__
stage_tracker_wb_iuv
RTL_scoreboard[3]
__STARTED__
__ENDED__
__RESETED__
__auxvar0__recorder_sn_condmet
__auxvar3__recorder
ILA_r0
RTL_registers[1]
ILA_r1
ILA_r2
ILA_r3
RTL_ex_wb_reg_wen
__auxvar1__recorder
#b1
#b1
step: start
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __ILA_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | reg0                
| RTL_if_id_valid     | v0                  
| RTL_scoreboard[1]   | s1                  
| RTL_scoreboard[2]   | s2                  
| RTL_id_ex_reg_wen   | w1                  
| RTL_ex_wb_valid     | v2                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_op        | op                  
| RTL_id_ex_valid     | v1                  
| RTL_id_ex_operand1  | oper1               
| __VLG_I_inst_valid  | inst_v              
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[1]    | reg1                
| RTL_id_ex_operand2  | oper2               
| RTL_registers[2]    | reg2                
| RTL_registers[3]    | reg3                
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[0]   | s0                  
| RTL_scoreboard[3]   | s3                  
| __VLG_I_inst        | inst                
| RTL_if_id_inst      | inst_id             
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
step: start --> id
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
>> [[] ptr: 0]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 1 ] ptr: 1]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not reachable.
=============================
Finish!
Get #state: 6
number of state start-id: 1-> 6
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | reg2                
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | reg1                
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | s1                  
| RTL_scoreboard[2]   | s2                  
| RTL_if_id_valid     | inst_v              
| RTL_scoreboard[3]   | s3                  
| RTL_id_ex_op        | op                  
| RTL_registers[3]    | reg3                
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | reg0                
| RTL_scoreboard[0]   | s0                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_id_ex_operand1  | oper1               
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_reg_wen   | w1                  
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (bvand #b10 s1)     
| RTL_scoreboard[2]   | (bvand #b10 s2)     
| RTL_if_id_valid     | inst_v              
| RTL_scoreboard[3]   | (bvand #b10 s3)     
| RTL_id_ex_op        | op                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (bvand #b10 s0)     
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | oper1               
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (concat #b0 ((_ extract 1 1) s1))
| RTL_scoreboard[2]   | (concat #b0 ((_ extract 1 1) s2))
| RTL_if_id_valid     | v1                  
| RTL_scoreboard[3]   | (concat #b0 ((_ extract 1 1) s3))
| RTL_id_ex_op        | op                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (concat #b0 ((_ extract 1 1) s0))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | oper1               
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | reg2                
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | reg1                
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)))
| RTL_if_id_valid     | v0                  
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_registers[3]    | reg3                
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | reg0                
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)))
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_if_id_valid     | v0                  
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))
| RTL_if_id_valid     | v1                  
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
number of state start-id in total: 1 --> 6
step: id --> id
ret_term2:(bvnot (bvand RTL_if_id_valid (bvnot (bvand RTL_id_ex_valid (bvnot (bvand (bvnot __VLG_I_stallex) (bvnot (bvand __VLG_I_stallwb RTL_ex_wb_valid))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state id-id: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_scoreboard[3]   | s3                  
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | reg0                
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_scoreboard[0]   | s0                  
| RTL_id_ex_operand1  | oper1               
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[3]    | reg3                
| RTL_id_ex_op        | op                  
| RTL_id_ex_rd        | rd1                 
| RTL_if_id_inst      | inst                
| RTL_registers[1]    | reg1                
| RTL_scoreboard[2]   | s2                  
| RTL_if_id_valid     | inst_v              
| RTL_scoreboard[1]   | s1                  
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | reg2                
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot v1) (bvnot inst_v)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot (bvand (bvnot (bvand (bvand inst_v (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst)) #b1 #b0))) $e2)) (bvnot (bvand (bvnot ((_ extract 1 1) s1)) (bvnot $e2)))))) (bvand (concat $e3 (bvnot v2)) (concat $e3 ((_ extract 0 0) s1))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot (bvand (bvnot (bvand (bvand inst_v (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst)) #b1 #b0))) $e2)) (bvnot (bvand (bvnot ((_ extract 1 1) s2)) (bvnot $e2)))))) (bvand (concat $e3 (bvnot v2)) (concat $e3 ((_ extract 0 0) s2))))))
| RTL_if_id_valid     | inst_v              
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot (bvand (bvnot (bvand (bvand inst_v (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst)) #b1 #b0))) $e2)) (bvnot (bvand (bvnot ((_ extract 1 1) s3)) (bvnot $e2)))))) (bvand (concat $e3 (bvnot v2)) (concat $e3 ((_ extract 0 0) s3))))))
| RTL_id_ex_op        | op                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot (bvand (bvnot (bvand (bvand inst_v (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) $e2)) (bvnot (bvand (bvnot ((_ extract 1 1) s0)) (bvnot $e2)))))) (bvand (concat $e3 (bvnot v2)) (concat $e3 ((_ extract 0 0) s0))))))
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | oper1               
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state id-id: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_scoreboard[3]   | (bvand #b10 s3)     
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_scoreboard[0]   | (bvand #b10 s0)     
| RTL_id_ex_operand1  | oper1               
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_op        | op                  
| RTL_id_ex_rd        | rd1                 
| RTL_if_id_inst      | inst                
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[2]   | (bvand #b10 s2)     
| RTL_if_id_valid     | inst_v              
| RTL_scoreboard[1]   | (bvand #b10 s1)     
| RTL_id_ex_reg_wen   | w1                  
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (concat #b0 ((_ extract 1 1) s1))
| RTL_scoreboard[2]   | (concat #b0 ((_ extract 1 1) s2))
| RTL_if_id_valid     | v1                  
| RTL_scoreboard[3]   | (concat #b0 ((_ extract 1 1) s3))
| RTL_id_ex_op        | op                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (concat #b0 ((_ extract 1 1) s0))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | oper1               
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15)))))))) (ite (= inst BTOR_28@__ILA_I_instX15) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_28@__ILA_I_instX15)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_28@dummy_resetX15)))))))))
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))))))@0
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))))))
A4: (bvand v1 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))@0
A4: (bvand v1 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))
A5: (bvnot BTOR_28@dummy_resetX15)@0
A5: (bvnot BTOR_28@dummy_resetX15)
A6: ts.asmpt @1
A6: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_28@__VLG_I_stallwbX15))) (let (($e7 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_28@__VLG_I_stallwbX15)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_28@dummy_resetX15) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_28@dummy_resetX15) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_28@dummy_resetX15) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_28@dummy_resetX15) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_28@dummy_resetX16))))))))))))))))))
number of state id-id: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | rd1                 
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (concat #b0 ((_ extract 1 1) s1))
| RTL_scoreboard[2]   | (concat #b0 ((_ extract 1 1) s2))
| RTL_if_id_valid     | v1                  
| RTL_scoreboard[3]   | (concat #b0 ((_ extract 1 1) s3))
| RTL_id_ex_op        | op                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (concat #b0 ((_ extract 1 1) s0))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | oper1               
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state id-id: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | reg0                
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[3]    | reg3                
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_if_id_inst      | inst                
| RTL_registers[1]    | reg1                
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)))
| RTL_if_id_valid     | v0                  
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | reg2                
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s1) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s2) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_if_id_valid     | v0                  
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s3) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s0) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state id-id: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v1                  
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_if_id_inst      | inst                
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_if_id_valid     | v0                  
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state id-id: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_if_id_inst      | inst                
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))
| RTL_if_id_valid     | v1                  
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_if_id_inst      | inst                
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s1) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s2) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_if_id_valid     | v1                  
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s3) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s0) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
number of state id-id in total: 6 --> 9
step: id --> ex
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | #b1                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3))))))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot v1) (bvnot inst_v)))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 ((_ extract 1 0) inst))) (let (($e7 ((_ extract 5 4) inst))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (and (not (= #b11 $e5)) (not (= #b01 $e5))))) (let (($e13 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b00 $e6)) #b1 #b0))))))) (let (($e14 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b01 $e6)) #b1 #b0))))))) (let (($e15 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b10 $e6)) #b1 #b0))))))) (let (($e16 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b11 $e6)) #b1 #b0))))))) (ite (= #b00 (ite $e8 (bvand (concat $e16 ((_ extract 0 0) s3)) (concat $e16 (bvnot v2))) (ite $e9 (bvand (concat $e15 ((_ extract 0 0) s2)) (concat $e15 (bvnot v2))) (ite $e10 (bvand (concat $e14 ((_ extract 0 0) s1)) (concat $e14 (bvnot v2))) (ite $e11 (bvand (concat $e13 ((_ extract 0 0) s0)) (concat $e13 (bvnot v2))) #b00))))) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e10 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e11 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 (and (not (= #b01 $e5)) (not (= #b10 $e5)) (not (= #b11 $e5))))) (let (($e7 ((_ extract 1 0) inst))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b00 $e7) (not $e6)) #b1 #b0))))))) (let (($e14 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b01 $e7) (not $e6)) #b1 #b0))))))) (let (($e15 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b10 $e7) (not $e6)) #b1 #b0))))))) (let (($e16 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b11 $e7) (not $e6)) #b1 #b0))))))) (ite (= #b00 (ite $e9 (bvand (concat $e16 ((_ extract 0 0) s3)) (concat $e16 (bvnot v2))) (ite $e10 (bvand (concat $e15 ((_ extract 0 0) s2)) (concat $e15 (bvnot v2))) (ite $e11 (bvand (concat $e14 ((_ extract 0 0) s1)) (concat $e14 (bvnot v2))) (ite $e12 (bvand (concat $e13 ((_ extract 0 0) s0)) (concat $e13 (bvnot v2))) #b00))))) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e10 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e11 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e12 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand (bvnot v1) inst_v))) (bvand (bvnot (bvand inst_v (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e3)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e3)))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | #b1                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | #b1                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (and (= #b00 $e10) (not $e9)))) (let (($e28 (and (= #b01 $e10) (not $e9)))) (let (($e29 (and (= #b10 $e10) (not $e9)))) (let (($e30 (and (= #b11 $e10) (not $e9)))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (ite (= #b00 (ite $e32 (bvand (concat (ite $e30 #b1 #b0) (bvnot v2)) (concat (ite $e30 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e33 (bvand (concat (ite $e29 #b1 #b0) (bvnot v2)) (concat (ite $e29 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e34 (bvand (concat (ite $e28 #b1 #b0) (bvnot v2)) (concat (ite $e28 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e35 (bvand (concat (ite $e27 #b1 #b0) (bvnot v2)) (concat (ite $e27 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e34 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (and (= #b00 $e10) (not $e9)))) (let (($e28 (and (= #b01 $e10) (not $e9)))) (let (($e29 (and (= #b10 $e10) (not $e9)))) (let (($e30 (and (= #b11 $e10) (not $e9)))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (ite (= #b00 (ite $e32 (bvand (concat (ite $e30 #b1 #b0) (bvnot v2)) (concat (ite $e30 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e33 (bvand (concat (ite $e29 #b1 #b0) (bvnot v2)) (concat (ite $e29 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e34 (bvand (concat (ite $e28 #b1 #b0) (bvnot v2)) (concat (ite $e28 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e35 (bvand (concat (ite $e27 #b1 #b0) (bvnot v2)) (concat (ite $e27 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e34 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | #b1                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)) (ite $e38 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)) (ite $e38 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
number of state id-ex in total: 9 --> 10
step: ex --> ex
ret_term2:(bvnot (bvand RTL_id_ex_valid (bvand (bvnot __VLG_I_stallex) (bvnot (bvand __VLG_I_stallwb RTL_ex_wb_valid)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand (bvnot v1) inst_v))) (bvand (bvnot (bvand inst_v (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e3)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e3)))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 ((_ extract 1 0) inst))) (let (($e7 ((_ extract 5 4) inst))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (and (not (= #b11 $e5)) (not (= #b01 $e5))))) (let (($e13 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b00 $e6)) #b1 #b0))))))) (let (($e14 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b01 $e6)) #b1 #b0))))))) (let (($e15 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b10 $e6)) #b1 #b0))))))) (let (($e16 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b11 $e6)) #b1 #b0))))))) (ite (= #b00 (ite $e8 (bvand (concat $e16 ((_ extract 0 0) s3)) (concat $e16 (bvnot v2))) (ite $e9 (bvand (concat $e15 ((_ extract 0 0) s2)) (concat $e15 (bvnot v2))) (ite $e10 (bvand (concat $e14 ((_ extract 0 0) s1)) (concat $e14 (bvnot v2))) (ite $e11 (bvand (concat $e13 ((_ extract 0 0) s0)) (concat $e13 (bvnot v2))) #b00))))) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e10 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e11 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3))))))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot v1) (bvnot inst_v)))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 (and (not (= #b01 $e5)) (not (= #b10 $e5)) (not (= #b11 $e5))))) (let (($e7 ((_ extract 1 0) inst))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b00 $e7) (not $e6)) #b1 #b0))))))) (let (($e14 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b01 $e7) (not $e6)) #b1 #b0))))))) (let (($e15 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b10 $e7) (not $e6)) #b1 #b0))))))) (let (($e16 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b11 $e7) (not $e6)) #b1 #b0))))))) (ite (= #b00 (ite $e9 (bvand (concat $e16 ((_ extract 0 0) s3)) (concat $e16 (bvnot v2))) (ite $e10 (bvand (concat $e15 ((_ extract 0 0) s2)) (concat $e15 (bvnot v2))) (ite $e11 (bvand (concat $e14 ((_ extract 0 0) s1)) (concat $e14 (bvnot v2))) (ite $e12 (bvand (concat $e13 ((_ extract 0 0) s0)) (concat $e13 (bvnot v2))) #b00))))) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e10 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e11 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e12 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 ((_ extract 1 0) inst))) (let (($e7 ((_ extract 5 4) inst))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (and (not (= #b11 $e5)) (not (= #b01 $e5))))) (let (($e13 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b00 $e6)) #b1 #b0))))))) (let (($e14 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b01 $e6)) #b1 #b0))))))) (let (($e15 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b10 $e6)) #b1 #b0))))))) (let (($e16 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (not $e12) (= #b11 $e6)) #b1 #b0))))))) (ite (= #b00 (ite $e8 (bvand (concat $e16 ((_ extract 0 0) s3)) (concat $e16 (bvnot v2))) (ite $e9 (bvand (concat $e15 ((_ extract 0 0) s2)) (concat $e15 (bvnot v2))) (ite $e10 (bvand (concat $e14 ((_ extract 0 0) s1)) (concat $e14 (bvnot v2))) (ite $e11 (bvand (concat $e13 ((_ extract 0 0) s0)) (concat $e13 (bvnot v2))) #b00))))) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e10 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e11 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 (and (not (= #b01 $e5)) (not (= #b10 $e5)) (not (= #b11 $e5))))) (let (($e7 ((_ extract 1 0) inst))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b00 $e7) (not $e6)) #b1 #b0))))))) (let (($e14 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b01 $e7) (not $e6)) #b1 #b0))))))) (let (($e15 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b10 $e7) (not $e6)) #b1 #b0))))))) (let (($e16 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (and (= #b11 $e7) (not $e6)) #b1 #b0))))))) (ite (= #b00 (ite $e9 (bvand (concat $e16 ((_ extract 0 0) s3)) (concat $e16 (bvnot v2))) (ite $e10 (bvand (concat $e15 ((_ extract 0 0) s2)) (concat $e15 (bvnot v2))) (ite $e11 (bvand (concat $e14 ((_ extract 0 0) s1)) (concat $e14 (bvnot v2))) (ite $e12 (bvand (concat $e13 ((_ extract 0 0) s0)) (concat $e13 (bvnot v2))) #b00))))) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e10 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e11 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e12 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand (bvnot v1) inst_v))) (let (($e5 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e5)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e4))))))))) (bvnot $e5)))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e3)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e3)))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (and (= #b00 $e10) (not $e9)))) (let (($e28 (and (= #b01 $e10) (not $e9)))) (let (($e29 (and (= #b10 $e10) (not $e9)))) (let (($e30 (and (= #b11 $e10) (not $e9)))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (ite (= #b00 (ite $e32 (bvand (concat (ite $e30 #b1 #b0) (bvnot v2)) (concat (ite $e30 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e33 (bvand (concat (ite $e29 #b1 #b0) (bvnot v2)) (concat (ite $e29 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e34 (bvand (concat (ite $e28 #b1 #b0) (bvnot v2)) (concat (ite $e28 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e35 (bvand (concat (ite $e27 #b1 #b0) (bvnot v2)) (concat (ite $e27 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e34 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (and (= #b00 $e10) (not $e9)))) (let (($e28 (and (= #b01 $e10) (not $e9)))) (let (($e29 (and (= #b10 $e10) (not $e9)))) (let (($e30 (and (= #b11 $e10) (not $e9)))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (ite (= #b00 (ite $e32 (bvand (concat (ite $e30 #b1 #b0) (bvnot v2)) (concat (ite $e30 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e33 (bvand (concat (ite $e29 #b1 #b0) (bvnot v2)) (concat (ite $e29 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e34 (bvand (concat (ite $e28 #b1 #b0) (bvnot v2)) (concat (ite $e28 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e35 (bvand (concat (ite $e27 #b1 #b0) (bvnot v2)) (concat (ite $e27 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e34 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (and (= #b00 $e10) (not $e9)))) (let (($e28 (and (= #b01 $e10) (not $e9)))) (let (($e29 (and (= #b10 $e10) (not $e9)))) (let (($e30 (and (= #b11 $e10) (not $e9)))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (ite (= #b00 (ite $e32 (bvand (concat (ite $e30 #b1 #b0) (bvnot v2)) (concat (ite $e30 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e33 (bvand (concat (ite $e29 #b1 #b0) (bvnot v2)) (concat (ite $e29 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e34 (bvand (concat (ite $e28 #b1 #b0) (bvnot v2)) (concat (ite $e28 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e35 (bvand (concat (ite $e27 #b1 #b0) (bvnot v2)) (concat (ite $e27 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e34 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (and (= #b00 $e10) (not $e9)))) (let (($e28 (and (= #b01 $e10) (not $e9)))) (let (($e29 (and (= #b10 $e10) (not $e9)))) (let (($e30 (and (= #b11 $e10) (not $e9)))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (ite (= #b00 (ite $e32 (bvand (concat (ite $e30 #b1 #b0) (bvnot v2)) (concat (ite $e30 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e33 (bvand (concat (ite $e29 #b1 #b0) (bvnot v2)) (concat (ite $e29 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e34 (bvand (concat (ite $e28 #b1 #b0) (bvnot v2)) (concat (ite $e28 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e35 (bvand (concat (ite $e27 #b1 #b0) (bvnot v2)) (concat (ite $e27 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e34 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 (bvand RTL_if_id_valid (bvnot v0)))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))))) (bvnot $e4))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))))) (bvnot $e4))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)) (ite $e38 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)) (ite $e38 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)) (ite $e38 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)) (ite $e38 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))))) (bvnot $e4))))))))
number of state ex-ex in total: 10 --> 19
step: ex --> wb
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 1 0) inst))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b00 $e10) #b1 #b0))))))) (let (($e22 (bvand (concat $e21 (bvnot v2)) (concat $e21 ((_ extract 0 0) s0))))) (let (($e23 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b01 $e10) #b1 #b0))))))) (let (($e24 (bvand (concat $e23 (bvnot v2)) (concat $e23 ((_ extract 0 0) s1))))) (let (($e25 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b10 $e10) #b1 #b0))))))) (let (($e26 (bvand (concat $e25 (bvnot v2)) (concat $e25 ((_ extract 0 0) s2))))) (let (($e27 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b11 $e10) #b1 #b0))))))) (let (($e28 (bvand (concat $e27 (bvnot v2)) (concat $e27 ((_ extract 0 0) s3))))) (bvadd (ite (= #b00 (ite $e17 $e28 (ite $e18 $e26 (ite $e19 $e24 (ite $e20 $e22 #b00))))) (ite $e17 $e8 (ite $e18 $e6 (ite $e19 $e7 (ite $e20 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e12 $e28 (ite $e13 $e26 (ite $e14 $e24 (ite $e15 $e22 #b00))))) (ite $e12 $e8 (ite $e13 $e6 (ite $e14 $e7 (ite $e15 $e9 #b00000000)))) $e5))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand (bvnot v1) inst_v))) (let (($e4 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e3)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e3)))))) (let (($e5 (bvand (bvnot v1) (bvnot inst_v)))) (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e4))))))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot $e5))) (bvnot (bvand (bvnot w2) $e5))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand (bvnot v1) inst_v))) (let (($e5 (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e4)))))) (let (($e6 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e7 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e8 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e7) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e8)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e5))))) (bvnot $e8))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot $e5) (bvnot $e6))) (bvnot (bvand (bvnot w2) $e6)))) $e7)))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (bvand #b10 s1))) (let (($e11 (bvand #b10 s2))) (let (($e12 (bvand #b10 s3))) (let (($e13 (bvand #b10 s0))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e4 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e3) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e4))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))) $e3)))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | v1                  
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 ((_ extract 3 2) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000))))) (let (($e34 (concat (ite (and (= #b00 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e35 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e38 (ite $e29 $e37 (ite $e30 $e36 (ite $e31 $e35 (ite $e32 $e34 #b00)))))) (let (($e39 (ite $e24 $e37 (ite $e25 $e36 (ite $e26 $e35 (ite $e27 $e34 #b00)))))) (bvadd (ite (= #b00 $e38) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e38) ex_val $e33)) (ite (= #b00 $e39) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e33))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (and (= #b00 $e10) (not $e9)))) (let (($e32 (and (= #b01 $e10) (not $e9)))) (let (($e33 (and (= #b10 $e10) (not $e9)))) (let (($e34 (and (= #b11 $e10) (not $e9)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e46 (bvand (concat (ite $e31 #b1 #b0) (bvnot v2)) (concat (ite $e31 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e47 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e48 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e49 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e49 (ite $e37 $e48 (ite $e38 $e47 (ite $e39 $e46 #b00))))) (ite $e36 $e29 (ite $e37 $e27 (ite $e38 $e28 (ite $e39 $e30 #b00000000)))) $e45) (ite (= #b00 (ite $e41 $e49 (ite $e42 $e48 (ite $e43 $e47 (ite $e44 $e46 #b00))))) (ite $e41 $e29 (ite $e42 $e27 (ite $e43 $e28 (ite $e44 $e30 #b00000000)))) $e45)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))) $e5)))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat (ite (and (= #b00 $e10) (not $e9)) #b1 #b0) v1))) (let (($e43 (concat (ite (and (= #b01 $e10) (not $e9)) #b1 #b0) v1))) (let (($e44 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e45 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (bvadd (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e29 (ite $e38 $e27 (ite $e39 $e28 (ite $e40 $e30 #b00000000)))) $e41) (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e29 (ite $e33 $e27 (ite $e34 $e28 (ite $e35 $e30 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e32 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e33 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e34 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e46 (ite $e36 $e33 (ite $e37 $e32 (ite $e38 $e31 (ite $e39 $e34 #b00)))))) (let (($e47 (ite $e41 $e33 (ite $e42 $e32 (ite $e43 $e31 (ite $e44 $e34 #b00)))))) (bvadd (ite (= #b00 $e46) (ite $e36 $e29 (ite $e37 $e27 (ite $e38 $e28 (ite $e39 $e30 #b00000000)))) (ite (= #b01 $e46) $e18 $e45)) (ite (= #b00 $e47) (ite $e41 $e29 (ite $e42 $e27 (ite $e43 $e28 (ite $e44 $e30 #b00000000)))) (ite (= #b01 $e47) $e18 $e45))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e8 (ite $e12 $e6 (ite $e13 $e7 (ite $e14 $e9 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)))) (let (($e50 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)))) (let (($e51 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)))) (let (($e52 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)))) (bvadd (ite (= #b00 (ite $e35 $e52 (ite $e36 $e51 (ite $e37 $e50 (ite $e38 $e49 #b00))))) (ite $e35 $e48 (ite $e36 $e47 (ite $e37 $e46 (ite $e38 $e45 #b00000000)))) $e44) (ite (= #b00 (ite $e40 $e52 (ite $e41 $e51 (ite $e42 $e50 (ite $e43 $e49 #b00))))) (ite $e40 $e48 (ite $e41 $e47 (ite $e42 $e46 (ite $e43 $e45 #b00000000)))) $e44))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
number of state ex-wb in total: 19 --> 19
step: wb --> wb
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11)))))))) (ite (= inst BTOR_12@__ILA_I_instX11) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_12@__ILA_I_instX11)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_12@dummy_resetX11)))))))))
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11))))))))@0
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11))))))))
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11)))))@0
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11)))))
A5: (bvnot (bvand v2 (bvnot BTOR_12@__VLG_I_stallwbX11)))@0
A5: (bvnot (bvand v2 (bvnot BTOR_12@__VLG_I_stallwbX11)))
A6: (bvnot BTOR_12@dummy_resetX11)@0
A6: (bvnot BTOR_12@dummy_resetX11)
A7: ts.asmpt @1
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_12@__VLG_I_stallwbX11))) (let (($e7 (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_12@__VLG_I_stallwbX11)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_12@dummy_resetX11) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_12@dummy_resetX11) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_12@dummy_resetX11) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_12@dummy_resetX11) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_12@dummy_resetX12))))))))))))))))))
A8: ts.asmpt @0
A8: (let (($e1 (bvand w2 v2))) (let (($e2 (bvand v1 (bvand w1 (bvnot v0))))) (bvand (ite (and (= ((_ extract 1 1) s0) (bvand (ite (= #b00 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s0) (bvand $e1 (ite (= #b00 rd2) #b1 #b0))) (= ((_ extract 1 1) s1) (bvand (ite (= #b01 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s1) (bvand $e1 (ite (= #b01 rd2) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand (ite (= #b10 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s2) (bvand $e1 (ite (= #b10 rd2) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand (ite (= #b11 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s3) (bvand $e1 (ite (= #b11 rd2) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_872@dummy_resetX29)))))
A9: (bvand (bvnot (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_872@__VLG_I_stallexX29) (bvnot (bvand v2 BTOR_872@__VLG_I_stallwbX29)))))))) (bvand (bvnot BTOR_872@rstX17) (bvnot BTOR_872@dummy_resetX29)))@0
A9: (bvand (bvnot (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_872@__VLG_I_stallexX29) (bvnot (bvand v2 BTOR_872@__VLG_I_stallwbX29)))))))) (bvand (bvnot BTOR_872@rstX17) (bvnot BTOR_872@dummy_resetX29)))
A10: ts.asmpt @0
A10: (let (($e1 (bvand w2 v2))) (let (($e2 (bvand v1 (bvand w1 (bvnot v0))))) (bvand (ite (and (= ((_ extract 1 1) s0) (bvand (ite (= #b00 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s0) (bvand $e1 (ite (= #b00 rd2) #b1 #b0))) (= ((_ extract 1 1) s1) (bvand (ite (= #b01 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s1) (bvand $e1 (ite (= #b01 rd2) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand (ite (= #b10 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s2) (bvand $e1 (ite (= #b10 rd2) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand (ite (= #b11 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s3) (bvand $e1 (ite (= #b11 rd2) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_2024@dummy_resetX149)))))
A11: (bvand (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_2024@__VLG_I_stallexX149) (bvnot (bvand v2 BTOR_2024@__VLG_I_stallwbX149))))))) (bvand (bvnot BTOR_2024@rstX110) (bvnot BTOR_2024@dummy_resetX149)))@0
A11: (bvand (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_2024@__VLG_I_stallexX149) (bvnot (bvand v2 BTOR_2024@__VLG_I_stallwbX149))))))) (bvand (bvnot BTOR_2024@rstX110) (bvnot BTOR_2024@dummy_resetX149)))
A12: ts.asmpt @1
A12: (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 (bvand w1 (bvnot v0)))) (let (($e5 (bvand v1 $e4))) (let (($e6 ((_ extract 7 6) inst))) (let (($e7 (and (not (= #b01 $e6)) (not (= #b10 $e6)) (not (= #b11 $e6))))) (let (($e8 (bvand inst_v (bvnot (ite $e7 #b1 #b0))))) (let (($e9 ((_ extract 1 0) inst))) (let (($e10 (bvand v2 BTOR_2024@__VLG_I_stallwbX149))) (let (($e11 (bvand (bvnot BTOR_2024@__VLG_I_stallexX149) (bvnot $e10)))) (let (($e12 (bvand v1 (bvnot $e11)))) (let (($e13 (bvand inst_v (bvnot $e12)))) (let (($e14 (bvand v2 (bvnot BTOR_2024@__VLG_I_stallwbX149)))) (let (($e15 (bvand w2 $e14))) (let (($e16 (bvand v1 $e11))) (let (($e17 (ite (= #b1 (bvand (bvnot BTOR_2024@dummy_resetX149) $e13)) $e9 rd1))) (let (($e18 (ite (= #b1 (bvand (bvnot BTOR_2024@dummy_resetX149) $e16)) rd1 rd2))) (let (($e19 (bvand (bvnot BTOR_2024@dummy_resetX149) (bvnot (bvand (bvnot $e10) (bvnot $e16)))))) (let (($e20 (bvand (bvnot BTOR_2024@dummy_resetX149) (bvnot (bvand (bvnot inst_v) (bvnot $e12)))))) (let (($e21 (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@ILA_r0_randinitX149 ILA_r0))) (let (($e22 (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@ILA_r1_randinitX149 ILA_r1))) (let (($e23 (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@ILA_r2_randinitX149 ILA_r2))) (let (($e24 (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@ILA_r3_randinitX149 ILA_r3))) (let (($e25 (bvand (bvand (bvnot (bvand (ite $e7 #b1 #b0) $e13)) (bvnot (bvand (bvnot $e4) (bvnot $e13)))) $e20))) (let (($e26 (bvand $e19 (bvand (bvnot (bvand (bvnot $e4) $e16)) (bvnot (bvand (bvnot w2) (bvnot $e16))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_2024@rstX110 (bvnot (bvand BTOR_2024@__VLG_I_inst_validX150 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_2024@__VLG_I_inst_validX149 (bvnot (bvand inst_v $e12)))) (bvnot (bvand $e12 (bvand inst_v (bvnot BTOR_2024@dummy_resetX149)))))) (bvand $e20 (bvnot (bvand (bvnot BTOR_2024@__VLG_I_stallexX150) (bvnot (bvand $e19 BTOR_2024@__VLG_I_stallwbX150))))))))))) (bvnot (bvand BTOR_2024@rstX110 (bvnot (ite (= BTOR_2024@__VLG_I_instX150 BTOR_2024@__ILA_I_instX150) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b00 $e9) #b1 #b0))) $e13)) (bvnot (bvand (bvnot $e13) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e16))))))) (bvand $e25 (ite (= #b00 $e17) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5)) $e16)) (bvnot (bvand (bvnot $e16) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e14))))))) (bvand $e26 (ite (= #b00 $e18) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b01 $e9) #b1 #b0))) $e13)) (bvnot (bvand (bvnot $e13) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e16))))))) (bvand $e25 (ite (= #b01 $e17) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5)) $e16)) (bvnot (bvand (bvnot $e16) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e14))))))) (bvand $e26 (ite (= #b01 $e18) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b10 $e9) #b1 #b0))) $e13)) (bvnot (bvand (bvnot $e13) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e16))))))) (bvand $e25 (ite (= #b10 $e17) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5)) $e16)) (bvnot (bvand (bvnot $e16) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e14))))))) (bvand $e26 (ite (= #b10 $e18) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b11 $e9) #b1 #b0))) $e13)) (bvnot (bvand (bvnot $e13) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e16))))))) (bvand $e25 (ite (= #b11 $e17) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2024@dummy_resetX149) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5)) $e16)) (bvnot (bvand (bvnot $e16) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e14))))))) (bvand $e26 (ite (= #b11 $e18) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_2024@rstX110 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_2024@__ILA_I_instX150)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_2024@rstX110))) BTOR_2024@dummy_resetX150))) (bvnot (bvand BTOR_2024@rstX110 (bvnot (bvand (bvnot (bvand BTOR_2024@rstX110 (bvnot (ite (= (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@____auxvar0__recorder_init__X149 __auxvar0__recorder) $e21) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2024@rstX110) (bvnot (ite (= (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e15)) ex_val reg0) $e21) #b1 #b0))))))))) (bvnot (bvand BTOR_2024@rstX110 (bvnot (bvand (bvnot (bvand BTOR_2024@rstX110 (bvnot (ite (= $e22 (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@____auxvar1__recorder_init__X149 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2024@rstX110) (bvnot (ite (= (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e15)) ex_val reg1) $e22) #b1 #b0))))))))) (bvnot (bvand BTOR_2024@rstX110 (bvnot (bvand (bvnot (bvand BTOR_2024@rstX110 (bvnot (ite (= (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@____auxvar2__recorder_init__X149 __auxvar2__recorder) $e23) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2024@rstX110) (bvnot (ite (= (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e15)) ex_val reg2) $e23) #b1 #b0))))))))) (bvnot (bvand BTOR_2024@rstX110 (bvnot (bvand (bvnot (bvand BTOR_2024@rstX110 (bvnot (ite (= (ite (= #b1 BTOR_2024@rstX110) BTOR_2024@____auxvar3__recorder_init__X149 __auxvar3__recorder) $e24) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2024@rstX110) (bvnot (ite (= (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e15)) ex_val reg3) $e24) #b1 #b0)))))))))))))))))))))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 1 0) inst))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand v1 (ite (= #b00 $e2) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand v1 (ite (= #b01 $e2) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand v1 (ite (= #b10 $e2) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand v1 (ite (= #b11 $e2) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand $e1 (ite (= #b11 rd1) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_8702@dummy_resetX208)))))
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot (bvand v1 BTOR_8702@__VLG_I_stallwbX208))))))))@0
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot (bvand v1 BTOR_8702@__VLG_I_stallwbX208))))))))
A15: (bvnot (bvand v1 (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot (bvand v1 BTOR_8702@__VLG_I_stallwbX208)))))@0
A15: (bvnot (bvand v1 (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot (bvand v1 BTOR_8702@__VLG_I_stallwbX208)))))
A16: (bvand v1 (bvnot BTOR_8702@__VLG_I_stallwbX208))@0
A16: (bvand v1 (bvnot BTOR_8702@__VLG_I_stallwbX208))
A17: (bvand (bvnot BTOR_8702@dummy_resetX208) (bvnot (bvand v1 (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot (bvand v1 BTOR_8702@__VLG_I_stallwbX208))))))@0
A17: (bvand (bvnot BTOR_8702@dummy_resetX208) (bvnot (bvand v1 (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot (bvand v1 BTOR_8702@__VLG_I_stallwbX208))))))
A18: ts.asmpt @1
A18: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (= #b00 rd1))) (let (($e6 (bvand w2 v2))) (let (($e7 (= #b00 rd2))) (let (($e8 (= #b01 rd1))) (let (($e9 (= #b01 rd2))) (let (($e10 (= #b10 rd1))) (let (($e11 (= #b10 rd2))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 ((_ extract 1 0) inst))) (let (($e14 (bvand v1 BTOR_8702@__VLG_I_stallwbX208))) (let (($e15 (bvand (bvnot BTOR_8702@__VLG_I_stallexX208) (bvnot $e14)))) (let (($e16 (bvand v1 (bvnot $e15)))) (let (($e17 (bvand RTL_if_id_valid (bvnot $e16)))) (let (($e18 (bvand v1 $e15))) (let (($e19 (bvand v1 (bvnot BTOR_8702@__VLG_I_stallwbX208)))) (let (($e20 (bvand w1 $e19))) (let (($e21 (ite (= #b1 (bvand (bvnot BTOR_8702@dummy_resetX208) $e17)) $e4 $e13))) (let (($e22 (ite (= #b1 (bvand (bvnot BTOR_8702@dummy_resetX208) $e18)) $e13 rd1))) (let (($e23 (bvand (bvnot BTOR_8702@dummy_resetX208) (bvnot (bvand (bvnot $e14) (bvnot $e18)))))) (let (($e24 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e17)) (bvand (bvnot BTOR_8702@dummy_resetX208) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e16))))))) (let (($e25 (bvand $e23 (bvnot (bvand (bvnot w1) (bvnot $e18)))))) (let (($e26 (bvand $e18 (bvand $e23 (bvnot BTOR_8702@__VLG_I_stallwbX209))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (ite (= #b00 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b00 $e22) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b00 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b01 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (ite (= #b01 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b01 $e22) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b10 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (ite (= #b10 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b10 $e22) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b11 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_8702@dummy_resetX208) (bvand (bvnot (bvand (bvnot (ite (= #b11 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b11 $e22) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_8702@dummy_resetX209))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e5 #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite $e7 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e8 (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e9 (not $e7)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e10 (not $e8) (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e11 (not $e9) (not $e7)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e10) (not $e8) (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and (= #b11 rd2) (not $e11) (not $e9) (not $e7)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))
A19: ts.asmpt @0
A19: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e2) #b1 #b0) $e3)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e2) #b1 #b0) $e3)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_27904@dummy_resetX524))))))
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_27904@__VLG_I_stallexX524)) (bvand (bvnot BTOR_27904@rstX396) (bvnot BTOR_27904@dummy_resetX524)))@0
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_27904@__VLG_I_stallexX524)) (bvand (bvnot BTOR_27904@rstX396) (bvnot BTOR_27904@dummy_resetX524)))
A21: ts.asmpt @1
A21: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 (ite (= #b1 (bvand $e5 (ite (and $e11 (not $e9) (not $e6)) #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2)))) (let (($e16 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1)))) (let (($e17 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)) #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3)))) (let (($e18 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0)))) (let (($e19 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e20 (bvand (ite $e2 #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (let (($e21 (bvand (bvnot $e19) (bvnot $e20)))) (let (($e22 (bvand (bvnot $e19) (bvnot BTOR_27904@__VLG_I_stallexX524)))) (let (($e23 (bvand (bvnot $e19) BTOR_27904@__VLG_I_stallexX524))) (let (($e24 (bvand RTL_if_id_valid (bvnot $e23)))) (let (($e25 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@____auxvar0__recorder_init__X524 __auxvar0__recorder))) (let (($e26 (bvand (bvnot BTOR_27904@dummy_resetX524) $e22))) (let (($e27 (ite (= #b1 (bvand (bvnot BTOR_27904@dummy_resetX524) $e24)) $e4 $e14))) (let (($e28 (ite (= #b1 $e26) $e14 rd1))) (let (($e29 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@____auxvar2__recorder_init__X524 __auxvar2__recorder))) (let (($e30 (bvand (bvnot BTOR_27904@dummy_resetX524) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e23)))))) (let (($e31 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@____auxvar3__recorder_init__X524 __auxvar3__recorder))) (let (($e32 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@ILA_r0_randinitX524 ILA_r0))) (let (($e33 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@ILA_r1_randinitX524 ILA_r1))) (let (($e34 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@ILA_r2_randinitX524 ILA_r2))) (let (($e35 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@ILA_r3_randinitX524 ILA_r3))) (let (($e36 (ite (= #b1 BTOR_27904@rstX396) BTOR_27904@____auxvar1__recorder_init__X524 __auxvar1__recorder))) (let (($e37 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e24)) (bvnot (bvand $e20 (bvnot $e24)))) $e30))) (let (($e38 (bvand $e26 (bvand (bvnot (bvand $e20 $e22)) (bvnot (bvand (bvnot w1) (bvnot $e22))))))) (let (($e39 (bvand (bvnot __STARTED__) (bvnot BTOR_27904@rstX396)))) (let (($e40 (bvand (bvand (bvnot BTOR_27904@rstX396) $e22) (bvand $e26 (bvnot BTOR_27904@__VLG_I_stallwbX525))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_27904@rstX396 (bvnot (bvand BTOR_27904@__VLG_I_inst_validX525 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_27904@__VLG_I_inst_validX524 (bvnot (bvand RTL_if_id_valid $e23)))) (bvnot (bvand $e23 (bvand RTL_if_id_valid (bvnot BTOR_27904@dummy_resetX524)))))) (bvand $e30 (bvnot (bvand (bvnot BTOR_27904@__VLG_I_stallexX525) (bvnot (bvand $e26 BTOR_27904@__VLG_I_stallwbX525))))))))))) (bvnot (bvand BTOR_27904@rstX396 (bvnot (ite (= BTOR_27904@__VLG_I_instX525 BTOR_27904@__ILA_I_instX525) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b00 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b00 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b01 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b01 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b10 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b10 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b11 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_27904@dummy_resetX524) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b11 $e28) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_27904@rstX396 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_27904@__ILA_I_instX525)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_27904@rstX396))) BTOR_27904@dummy_resetX525))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_27904@rstX396))) (bvnot $e39)) $e40) (bvnot (ite (= $e18 $e25) #b1 #b0))))) (bvnot (bvand (bvand $e40 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_27904@rstX396))) (bvnot $e39))) (bvnot (ite (= $e16 $e36) #b1 #b0))))) (bvnot (bvand (bvand $e40 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_27904@rstX396))) (bvnot $e39))) (bvnot (ite (= $e15 $e29) #b1 #b0))))) (bvnot (bvand (bvand $e40 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_27904@rstX396))) (bvnot $e39))) (bvnot (ite (= $e17 $e31) #b1 #b0))))) (bvnot (bvand BTOR_27904@rstX396 (bvnot (bvand (bvnot (bvand BTOR_27904@rstX396 (bvnot (ite (= $e25 $e32) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_27904@rstX396) (bvnot (ite (= $e18 $e32) #b1 #b0))))))))) (bvnot (bvand BTOR_27904@rstX396 (bvnot (bvand (bvnot (bvand BTOR_27904@rstX396 (bvnot (ite (= $e33 $e36) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_27904@rstX396) (bvnot (ite (= $e16 $e33) #b1 #b0))))))))) (bvnot (bvand BTOR_27904@rstX396 (bvnot (bvand (bvnot (bvand BTOR_27904@rstX396 (bvnot (ite (= $e29 $e34) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_27904@rstX396) (bvnot (ite (= $e15 $e34) #b1 #b0))))))))) (bvnot (bvand BTOR_27904@rstX396 (bvnot (bvand (bvnot (bvand BTOR_27904@rstX396 (bvnot (ite (= $e31 $e35) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_27904@rstX396) (bvnot (ite (= $e17 $e35) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 1 0) inst))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b00 $e10) #b1 #b0))))))) (let (($e22 (bvand (concat $e21 (bvnot v2)) (concat $e21 ((_ extract 0 0) s0))))) (let (($e23 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b01 $e10) #b1 #b0))))))) (let (($e24 (bvand (concat $e23 (bvnot v2)) (concat $e23 ((_ extract 0 0) s1))))) (let (($e25 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b10 $e10) #b1 #b0))))))) (let (($e26 (bvand (concat $e25 (bvnot v2)) (concat $e25 ((_ extract 0 0) s2))))) (let (($e27 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b11 $e10) #b1 #b0))))))) (let (($e28 (bvand (concat $e27 (bvnot v2)) (concat $e27 ((_ extract 0 0) s3))))) (bvadd (ite (= #b00 (ite $e17 $e28 (ite $e18 $e26 (ite $e19 $e24 (ite $e20 $e22 #b00))))) (ite $e17 $e8 (ite $e18 $e6 (ite $e19 $e7 (ite $e20 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e12 $e28 (ite $e13 $e26 (ite $e14 $e24 (ite $e15 $e22 #b00))))) (ite $e12 $e8 (ite $e13 $e6 (ite $e14 $e7 (ite $e15 $e9 #b00000000)))) $e5))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (bvand (bvnot v1) inst_v))) (let (($e3 (bvand (bvnot v1) (bvnot inst_v)))) (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e3) (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0) $e2)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e2))))) (bvnot $e3))) (bvnot (bvand (bvnot w2) $e3)))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand (bvnot v1) inst_v))) (let (($e4 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e3)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e3)))))) (let (($e5 (bvand (bvnot v1) (bvnot inst_v)))) (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e4))))))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot $e5))) (bvnot (bvand (bvnot w2) $e5))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand (bvnot v1) inst_v))) (let (($e5 (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e4)))))) (let (($e6 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e7 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e8 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e7) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e8)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e5))))) (bvnot $e8))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot $e5) (bvnot $e6))) (bvnot (bvand (bvnot w2) $e6)))) $e7)))))))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11)))))))) (ite (= inst BTOR_12@__ILA_I_instX11) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_12@__ILA_I_instX11)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_12@dummy_resetX11)))))))))
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11))))))))@0
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11))))))))
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11)))))@0
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot (bvand v2 BTOR_12@__VLG_I_stallwbX11)))))
A5: (bvnot (bvand v2 (bvnot BTOR_12@__VLG_I_stallwbX11)))@0
A5: (bvnot (bvand v2 (bvnot BTOR_12@__VLG_I_stallwbX11)))
A6: (bvnot BTOR_12@dummy_resetX11)@0
A6: (bvnot BTOR_12@dummy_resetX11)
A7: ts.asmpt @1
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_12@__VLG_I_stallwbX11))) (let (($e7 (bvand (bvnot BTOR_12@__VLG_I_stallexX11) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_12@__VLG_I_stallwbX11)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_12@dummy_resetX11) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_12@dummy_resetX11) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_12@dummy_resetX11) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_12@dummy_resetX11) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_12@dummy_resetX11) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_12@dummy_resetX12))))))))))))))))))
A8: ts.asmpt @0
A8: (let (($e1 (bvand w2 v2))) (let (($e2 (bvand v1 (bvand w1 (bvnot v0))))) (bvand (ite (and (= ((_ extract 1 1) s0) (bvand (ite (= #b00 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s0) (bvand $e1 (ite (= #b00 rd2) #b1 #b0))) (= ((_ extract 1 1) s1) (bvand (ite (= #b01 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s1) (bvand $e1 (ite (= #b01 rd2) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand (ite (= #b10 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s2) (bvand $e1 (ite (= #b10 rd2) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand (ite (= #b11 rd1) #b1 #b0) $e2)) (= ((_ extract 0 0) s3) (bvand $e1 (ite (= #b11 rd2) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_888@dummy_resetX46)))))
A9: (bvnot (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot (bvand v2 BTOR_888@__VLG_I_stallwbX46))))))))@0
A9: (bvnot (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot (bvand v2 BTOR_888@__VLG_I_stallwbX46))))))))
A10: (bvnot (bvand v1 (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot (bvand v2 BTOR_888@__VLG_I_stallwbX46)))))@0
A10: (bvnot (bvand v1 (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot (bvand v2 BTOR_888@__VLG_I_stallwbX46)))))
A11: (bvand v2 (bvnot BTOR_888@__VLG_I_stallwbX46))@0
A11: (bvand v2 (bvnot BTOR_888@__VLG_I_stallwbX46))
A12: (bvand (bvnot BTOR_888@dummy_resetX46) (bvnot (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot (bvand v2 BTOR_888@__VLG_I_stallwbX46)))))))))@0
A12: (bvand (bvnot BTOR_888@dummy_resetX46) (bvnot (bvand inst_v (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot (bvand v2 BTOR_888@__VLG_I_stallwbX46)))))))))
A13: ts.asmpt @1
A13: (let (($e1 (bvand w1 (bvnot v0)))) (let (($e2 (bvand v1 $e1))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))))) (let (($e5 (bvand inst_v (bvnot (ite $e4 #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst))) (let (($e7 (bvand v2 BTOR_888@__VLG_I_stallwbX46))) (let (($e8 (bvand (bvnot BTOR_888@__VLG_I_stallexX46) (bvnot $e7)))) (let (($e9 (bvand v1 (bvnot $e8)))) (let (($e10 (bvand inst_v (bvnot $e9)))) (let (($e11 (bvand v1 $e8))) (let (($e12 (bvand v2 (bvnot BTOR_888@__VLG_I_stallwbX46)))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_888@dummy_resetX46) $e10)) $e6 rd1))) (let (($e14 (ite (= #b1 (bvand (bvnot BTOR_888@dummy_resetX46) $e11)) rd1 rd2))) (let (($e15 (bvand (bvand (bvnot (bvand (ite $e4 #b1 #b0) $e10)) (bvnot (bvand (bvnot $e1) (bvnot $e10)))) (bvand (bvnot BTOR_888@dummy_resetX46) (bvnot (bvand (bvnot inst_v) (bvnot $e9))))))) (let (($e16 (bvand (bvand (bvnot BTOR_888@dummy_resetX46) (bvnot (bvand (bvnot $e7) (bvnot $e11)))) (bvand (bvnot (bvand (bvnot $e1) $e11)) (bvnot (bvand (bvnot w2) (bvnot $e11))))))) (bvand (ite (and (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e2)) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e12))))))) (bvand $e16 (ite (= #b00 $e14) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand $e5 (ite (= #b00 $e6) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand $e5 (ite (= #b01 $e6) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e2)) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e12))))))) (bvand $e16 (ite (= #b01 $e14) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand $e5 (ite (= #b10 $e6) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e2)) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e12))))))) (bvand $e16 (ite (= #b10 $e14) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand $e5 (ite (= #b11 $e6) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_888@dummy_resetX46) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e2)) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e12))))))) (bvand $e16 (ite (= #b11 $e14) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_888@dummy_resetX47)))))))))))))))))))
A14: ts.asmpt @0
A14: (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand inst_v (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) inst))) (let (($e5 (bvand (bvnot v1) inst_v))) (let (($e6 (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e5)) (bvnot (bvand (bvnot ((_ extract 1 1) s1)) (bvnot $e5)))))) (let (($e7 (bvand (concat $e6 (bvnot v2)) (concat $e6 ((_ extract 0 0) s1))))) (let (($e8 (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e5)) (bvnot (bvand (bvnot ((_ extract 1 1) s2)) (bvnot $e5)))))) (let (($e9 (bvand (concat $e8 (bvnot v2)) (concat $e8 ((_ extract 0 0) s2))))) (let (($e10 (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e5)) (bvnot (bvand (bvnot ((_ extract 1 1) s3)) (bvnot $e5)))))) (let (($e11 (bvand (concat $e10 (bvnot v2)) (concat $e10 ((_ extract 0 0) s3))))) (let (($e12 (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e5)) (bvnot (bvand (bvnot ((_ extract 1 1) s0)) (bvnot $e5)))))) (let (($e13 (bvand (concat $e12 (bvnot v2)) (concat $e12 ((_ extract 0 0) s0))))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e5)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e5)))) (bvnot (bvand (bvnot v1) (bvnot inst_v)))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (ite (= ((_ extract 1 1) $e13) (bvand (ite (= #b00 rd1) #b1 #b0) $e14)) #b1 #b0) (bvnot ((_ extract 0 0) $e13))) (ite (= ((_ extract 1 1) $e7) (bvand (ite (= #b01 rd1) #b1 #b0) $e14)) #b1 #b0)) (bvnot ((_ extract 0 0) $e7))) (ite (= ((_ extract 1 1) $e9) (bvand (ite (= #b10 rd1) #b1 #b0) $e14)) #b1 #b0)) (bvnot ((_ extract 0 0) $e9))) (ite (= ((_ extract 1 1) $e11) (bvand (ite (= #b11 rd1) #b1 #b0) $e14)) #b1 #b0)) (bvnot ((_ extract 0 0) $e11))) (bvnot (bvand __RESETED__ BTOR_2236@dummy_resetX152)))))))))))))))))
A15: (bvand (bvand inst_v (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_2236@__VLG_I_stallexX152))) (bvand (bvnot BTOR_2236@rstX113) (bvnot BTOR_2236@dummy_resetX152)))@0
A15: (bvand (bvand inst_v (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_2236@__VLG_I_stallexX152))) (bvand (bvnot BTOR_2236@rstX113) (bvnot BTOR_2236@dummy_resetX152)))
A16: ts.asmpt @1
A16: (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst))) (let (($e6 (and (not (= #b01 $e5)) (not (= #b10 $e5)) (not (= #b11 $e5))))) (let (($e7 (bvand inst_v (bvnot (ite $e6 #b1 #b0))))) (let (($e8 ((_ extract 1 0) inst))) (let (($e9 (bvand $e7 (ite (= #b00 $e8) #b1 #b0)))) (let (($e10 (bvand $e7 (ite (= #b01 $e8) #b1 #b0)))) (let (($e11 (bvand $e7 (ite (= #b10 $e8) #b1 #b0)))) (let (($e12 (bvand $e7 (ite (= #b11 $e8) #b1 #b0)))) (let (($e13 (bvand (bvnot v1) inst_v))) (let (($e14 (bvand (bvnot (bvand (ite $e6 #b1 #b0) $e13)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e13)))))) (let (($e15 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e16 (bvand (bvnot (bvand (bvnot $e10) $e13)) (bvnot (bvand (bvnot ((_ extract 1 1) s1)) (bvnot $e13)))))) (let (($e17 (bvand (concat $e16 (bvnot v2)) (concat $e16 ((_ extract 0 0) s1))))) (let (($e18 (bvand (bvnot (bvand (bvnot $e11) $e13)) (bvnot (bvand (bvnot ((_ extract 1 1) s2)) (bvnot $e13)))))) (let (($e19 (bvand (concat $e18 (bvnot v2)) (concat $e18 ((_ extract 0 0) s2))))) (let (($e20 (bvand (bvnot (bvand (bvnot $e12) $e13)) (bvnot (bvand (bvnot ((_ extract 1 1) s3)) (bvnot $e13)))))) (let (($e21 (bvand (concat $e20 (bvnot v2)) (concat $e20 ((_ extract 0 0) s3))))) (let (($e22 (bvand (bvnot (bvand (bvnot $e9) $e13)) (bvnot (bvand (bvnot ((_ extract 1 1) s0)) (bvnot $e13)))))) (let (($e23 (bvand (concat $e22 (bvnot v2)) (concat $e22 ((_ extract 0 0) s0))))) (let (($e24 (bvand $e14 (bvnot $e15)))) (let (($e25 (bvand (bvnot $e15) BTOR_2236@__VLG_I_stallexX152))) (let (($e26 (bvand inst_v (bvnot $e25)))) (let (($e27 (bvand (bvnot $e15) (bvnot BTOR_2236@__VLG_I_stallexX152)))) (let (($e28 (bvand (bvnot BTOR_2236@dummy_resetX152) $e27))) (let (($e29 (ite (= #b1 (bvand (bvnot BTOR_2236@dummy_resetX152) $e26)) $e8 rd1))) (let (($e30 (ite (= #b1 $e28) rd1 rd2))) (let (($e31 (bvand (bvnot BTOR_2236@dummy_resetX152) (bvnot (bvand (bvnot inst_v) (bvnot $e25)))))) (let (($e32 (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@ILA_r0_randinitX152 ILA_r0))) (let (($e33 (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@ILA_r1_randinitX152 ILA_r1))) (let (($e34 (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@ILA_r2_randinitX152 ILA_r2))) (let (($e35 (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@ILA_r3_randinitX152 ILA_r3))) (let (($e36 (bvand (bvand (bvnot (bvand (ite $e6 #b1 #b0) $e26)) (bvnot (bvand (bvnot $e14) (bvnot $e26)))) $e31))) (let (($e37 (bvand $e28 (bvand (bvnot (bvand (bvnot $e14) $e27)) (bvnot (bvand (bvnot w2) (bvnot $e27))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_2236@rstX113 (bvnot (bvand BTOR_2236@__VLG_I_inst_validX153 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_2236@__VLG_I_inst_validX152 (bvnot (bvand inst_v $e25)))) (bvnot (bvand $e25 (bvand inst_v (bvnot BTOR_2236@dummy_resetX152)))))) (bvand $e31 (bvnot (bvand (bvnot BTOR_2236@__VLG_I_stallexX153) (bvnot (bvand $e28 BTOR_2236@__VLG_I_stallwbX153))))))))))) (bvnot (bvand BTOR_2236@rstX113 (bvnot (ite (= BTOR_2236@__VLG_I_instX153 BTOR_2236@__ILA_I_instX153) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot $e9) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 1 1) $e23) (bvnot $e27))))))) (bvand $e36 (ite (= #b00 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e24)) $e27)) (bvnot (bvand (bvnot ((_ extract 0 0) $e23)) (bvnot $e27))))) (bvand $e37 (ite (= #b00 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot $e10) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 1 1) $e17) (bvnot $e27))))))) (bvand $e36 (ite (= #b01 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e24)) $e27)) (bvnot (bvand (bvnot ((_ extract 0 0) $e17)) (bvnot $e27))))) (bvand $e37 (ite (= #b01 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot $e11) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 1 1) $e19) (bvnot $e27))))))) (bvand $e36 (ite (= #b10 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e24)) $e27)) (bvnot (bvand (bvnot ((_ extract 0 0) $e19)) (bvnot $e27))))) (bvand $e37 (ite (= #b10 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot $e12) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 1 1) $e21) (bvnot $e27))))))) (bvand $e36 (ite (= #b11 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2236@dummy_resetX152) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e24)) $e27)) (bvnot (bvand (bvnot ((_ extract 0 0) $e21)) (bvnot $e27))))) (bvand $e37 (ite (= #b11 $e30) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_2236@rstX113 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_2236@__ILA_I_instX153)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_2236@rstX113))) BTOR_2236@dummy_resetX153))) (bvnot (bvand BTOR_2236@rstX113 (bvnot (bvand (bvnot (bvand BTOR_2236@rstX113 (bvnot (ite (= (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@____auxvar0__recorder_init__X152 __auxvar0__recorder) $e32) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2236@rstX113) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) $e32) #b1 #b0))))))))) (bvnot (bvand BTOR_2236@rstX113 (bvnot (bvand (bvnot (bvand BTOR_2236@rstX113 (bvnot (ite (= $e33 (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@____auxvar1__recorder_init__X152 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2236@rstX113) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) $e33) #b1 #b0))))))))) (bvnot (bvand BTOR_2236@rstX113 (bvnot (bvand (bvnot (bvand BTOR_2236@rstX113 (bvnot (ite (= (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@____auxvar2__recorder_init__X152 __auxvar2__recorder) $e34) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2236@rstX113) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) $e34) #b1 #b0))))))))) (bvnot (bvand BTOR_2236@rstX113 (bvnot (bvand (bvnot (bvand BTOR_2236@rstX113 (bvnot (ite (= (ite (= #b1 BTOR_2236@rstX113) BTOR_2236@____auxvar3__recorder_init__X152 __auxvar3__recorder) $e35) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2236@rstX113) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) $e35) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))))
A17: ts.asmpt @0
A17: (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 1 0) inst))) (let (($e4 (bvand (bvnot v1) inst_v))) (let (($e5 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e4)))))) (let (($e6 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e7 (bvand inst_v (bvand (bvnot (bvand inst_v (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e5))))))) (let (($e8 (bvand (bvnot $e6) (bvand (bvnot (bvand (bvnot $e5) (bvnot $e6))) (bvnot (bvand (bvnot w2) $e6)))))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 rd1) #b1 #b0) $e8)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e3) #b1 #b0) $e7)) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 rd1) #b1 #b0) $e8)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e3) #b1 #b0) $e7)) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 rd1) #b1 #b0) $e8)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e3) #b1 #b0) $e7)) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 rd1) #b1 #b0) $e8))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_9170@dummy_resetX244)))))))))))
A18: (bvnot (bvand RTL_if_id_valid (bvnot (bvand inst_v (bvnot (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_9170@__VLG_I_stallwbX244))))))))@0
A18: (bvnot (bvand RTL_if_id_valid (bvnot (bvand inst_v (bvnot (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_9170@__VLG_I_stallwbX244))))))))
A19: (bvnot (bvand inst_v (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_9170@__VLG_I_stallwbX244)))))@0
A19: (bvnot (bvand inst_v (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_9170@__VLG_I_stallwbX244)))))
A20: (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) (bvnot BTOR_9170@__VLG_I_stallwbX244))@0
A20: (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) (bvnot BTOR_9170@__VLG_I_stallwbX244))
A21: (bvand (bvnot BTOR_9170@dummy_resetX244) (bvnot (bvand inst_v (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_9170@__VLG_I_stallwbX244))))))@0
A21: (bvand (bvnot BTOR_9170@dummy_resetX244) (bvnot (bvand inst_v (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot (bvand (bvnot (bvand (bvnot v1) (bvnot inst_v))) BTOR_9170@__VLG_I_stallwbX244))))))
A22: ts.asmpt @1
A22: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (= #b00 rd1))) (let (($e6 (bvand w2 v2))) (let (($e7 (= #b00 rd2))) (let (($e8 (= #b01 rd1))) (let (($e9 (= #b01 rd2))) (let (($e10 (= #b10 rd1))) (let (($e11 (= #b10 rd2))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 ((_ extract 7 6) inst))) (let (($e14 (and (not (= #b01 $e13)) (not (= #b10 $e13)) (not (= #b11 $e13))))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 (bvand (bvnot v1) inst_v))) (let (($e17 (bvand (bvnot (bvand (ite $e14 #b1 #b0) $e16)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e16)))))) (let (($e18 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e19 (bvand (bvnot (bvand (bvnot $e17) (bvnot $e18))) (bvnot (bvand (bvnot w2) $e18))))) (let (($e20 (bvand (bvnot (bvand inst_v (ite $e14 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e17)))))) (let (($e21 (bvand inst_v $e20))) (let (($e22 (bvand (bvnot $e18) BTOR_9170@__VLG_I_stallwbX244))) (let (($e23 (bvand (bvnot BTOR_9170@__VLG_I_stallexX244) (bvnot $e22)))) (let (($e24 (bvand inst_v (bvnot $e23)))) (let (($e25 (bvand RTL_if_id_valid (bvnot $e24)))) (let (($e26 (bvand inst_v $e23))) (let (($e27 (bvand (bvnot $e18) (bvnot BTOR_9170@__VLG_I_stallwbX244)))) (let (($e28 (bvand $e19 $e27))) (let (($e29 (ite (= #b1 (bvand (bvnot BTOR_9170@dummy_resetX244) $e25)) $e4 $e15))) (let (($e30 (ite (= #b1 (bvand (bvnot BTOR_9170@dummy_resetX244) $e26)) $e15 rd1))) (let (($e31 (bvand (bvnot BTOR_9170@dummy_resetX244) (bvnot (bvand (bvnot $e22) (bvnot $e26)))))) (let (($e32 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e25)) (bvnot (bvand (bvnot $e20) (bvnot $e25)))) (bvand (bvnot BTOR_9170@dummy_resetX244) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e24))))))) (let (($e33 (bvand $e31 (bvand (bvnot (bvand (bvnot $e20) $e26)) (bvnot (bvand (bvnot $e19) (bvnot $e26))))))) (let (($e34 (bvand $e26 (bvand $e31 (bvnot BTOR_9170@__VLG_I_stallwbX245))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e15) #b1 #b0) $e21)) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e27))))))) (bvand $e33 (ite (= #b00 $e30) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e25)) (bvnot (bvand (bvnot $e25) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e26))))))) (bvand $e32 (ite (= #b00 $e29) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e25)) (bvnot (bvand (bvnot $e25) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e26))))))) (bvand $e32 (ite (= #b01 $e29) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e15) #b1 #b0) $e21)) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e27))))))) (bvand $e33 (ite (= #b01 $e30) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e25)) (bvnot (bvand (bvnot $e25) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e26))))))) (bvand $e32 (ite (= #b10 $e29) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e15) #b1 #b0) $e21)) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e27))))))) (bvand $e33 (ite (= #b10 $e30) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e25)) (bvnot (bvand (bvnot $e25) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e26))))))) (bvand $e32 (ite (= #b11 $e29) #b1 #b0))) (= (bvand (bvnot BTOR_9170@dummy_resetX244) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e15) #b1 #b0) $e21)) $e26)) (bvnot (bvand (bvnot $e26) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e27))))))) (bvand $e33 (ite (= #b11 $e30) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_9170@dummy_resetX245))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e34) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e5 #b1 #b0) $e28)) $e12 (ite (= #b1 (bvand $e6 (ite $e7 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e34) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e8 (not $e5)) #b1 #b0) $e28)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e9 (not $e7)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e34) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e10 (not $e8) (not $e5)) #b1 #b0) $e28)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e11 (not $e9) (not $e7)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e34) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e10) (not $e8) (not $e5)) #b1 #b0) $e28)) $e12 (ite (= #b1 (bvand $e6 (ite (and (= #b11 rd2) (not $e11) (not $e9) (not $e7)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))))))))))
A23: ts.asmpt @0
A23: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 1 0) inst))) (let (($e5 (bvand (bvnot v1) inst_v))) (let (($e6 (bvand RTL_if_id_valid (bvnot inst_v)))) (let (($e7 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e5)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e5))))))))) (bvnot $e6))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e4) #b1 #b0) $e7)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e4) #b1 #b0) $e7)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e4) #b1 #b0) $e7)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e4) #b1 #b0) $e7)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_28340@dummy_resetX530))))))))))
A24: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v))) (bvnot BTOR_28340@__VLG_I_stallexX530)) (bvand (bvnot BTOR_28340@rstX402) (bvnot BTOR_28340@dummy_resetX530)))@0
A24: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v))) (bvnot BTOR_28340@__VLG_I_stallexX530)) (bvand (bvnot BTOR_28340@rstX402) (bvnot BTOR_28340@dummy_resetX530)))
A25: ts.asmpt @1
A25: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (= #b00 rd1))) (let (($e6 (bvand w2 v2))) (let (($e7 (= #b00 rd2))) (let (($e8 (= #b01 rd1))) (let (($e9 (= #b01 rd2))) (let (($e10 (= #b10 rd1))) (let (($e11 (= #b10 rd2))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 ((_ extract 7 6) inst))) (let (($e14 (and (not (= #b01 $e13)) (not (= #b10 $e13)) (not (= #b11 $e13))))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 (bvand (bvnot v1) inst_v))) (let (($e17 (bvand (bvnot (bvand (ite $e14 #b1 #b0) $e16)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e16)))))) (let (($e18 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e19 (bvand (bvnot (bvand (bvnot $e17) (bvnot $e18))) (bvnot (bvand (bvnot w2) $e18))))) (let (($e20 (bvand (bvnot $e18) $e19))) (let (($e21 (ite (= #b1 (bvand (ite (and $e10 (not $e8) (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e11 (not $e9) (not $e7)) #b1 #b0))) ex_val reg2)))) (let (($e22 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e23 (ite (= #b1 (bvand (ite (and $e8 (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e9 (not $e7)) #b1 #b0))) ex_val reg1)))) (let (($e24 (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e10) (not $e8) (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and (= #b11 rd2) (not $e11) (not $e9) (not $e7)) #b1 #b0))) ex_val reg3)))) (let (($e25 (ite (= #b1 (bvand (ite $e5 #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite $e7 #b1 #b0))) ex_val reg0)))) (let (($e26 (bvand RTL_if_id_valid (bvnot inst_v)))) (let (($e27 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e26)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e14 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e17))))) (bvnot $e26)))))) (let (($e28 (bvand (bvnot $e22) $e27))) (let (($e29 (bvand (bvnot $e22) (bvnot BTOR_28340@__VLG_I_stallexX530)))) (let (($e30 (bvand (bvnot $e22) BTOR_28340@__VLG_I_stallexX530))) (let (($e31 (bvand RTL_if_id_valid (bvnot $e30)))) (let (($e32 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@____auxvar0__recorder_init__X530 __auxvar0__recorder))) (let (($e33 (bvand (bvnot BTOR_28340@dummy_resetX530) $e29))) (let (($e34 (ite (= #b1 (bvand (bvnot BTOR_28340@dummy_resetX530) $e31)) $e4 $e15))) (let (($e35 (ite (= #b1 $e33) $e15 rd1))) (let (($e36 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@____auxvar2__recorder_init__X530 __auxvar2__recorder))) (let (($e37 (bvand (bvnot BTOR_28340@dummy_resetX530) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e30)))))) (let (($e38 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@____auxvar3__recorder_init__X530 __auxvar3__recorder))) (let (($e39 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@ILA_r0_randinitX530 ILA_r0))) (let (($e40 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@ILA_r1_randinitX530 ILA_r1))) (let (($e41 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@ILA_r2_randinitX530 ILA_r2))) (let (($e42 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@ILA_r3_randinitX530 ILA_r3))) (let (($e43 (ite (= #b1 BTOR_28340@rstX402) BTOR_28340@____auxvar1__recorder_init__X530 __auxvar1__recorder))) (let (($e44 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e31)) (bvnot (bvand (bvnot $e27) (bvnot $e31)))) $e37))) (let (($e45 (bvand $e33 (bvand (bvnot (bvand (bvnot $e27) $e29)) (bvnot (bvand (bvnot $e19) (bvnot $e29))))))) (let (($e46 (bvand (bvnot __STARTED__) (bvnot BTOR_28340@rstX402)))) (let (($e47 (bvand (bvand (bvnot BTOR_28340@rstX402) $e29) (bvand $e33 (bvnot BTOR_28340@__VLG_I_stallwbX531))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_28340@rstX402 (bvnot (bvand BTOR_28340@__VLG_I_inst_validX531 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_28340@__VLG_I_inst_validX530 (bvnot (bvand RTL_if_id_valid $e30)))) (bvnot (bvand $e30 (bvand RTL_if_id_valid (bvnot BTOR_28340@dummy_resetX530)))))) (bvand $e37 (bvnot (bvand (bvnot BTOR_28340@__VLG_I_stallexX531) (bvnot (bvand $e33 BTOR_28340@__VLG_I_stallwbX531))))))))))) (bvnot (bvand BTOR_28340@rstX402 (bvnot (ite (= BTOR_28340@__VLG_I_instX531 BTOR_28340@__ILA_I_instX531) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e31)) (bvnot (bvand (bvnot $e31) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e29))))))) (bvand $e44 (ite (= #b00 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e15) #b1 #b0) $e28)) $e29)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e29))))) (bvand $e45 (ite (= #b00 $e35) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e31)) (bvnot (bvand (bvnot $e31) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e29))))))) (bvand $e44 (ite (= #b01 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e15) #b1 #b0) $e28)) $e29)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e29))))) (bvand $e45 (ite (= #b01 $e35) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e31)) (bvnot (bvand (bvnot $e31) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e29))))))) (bvand $e44 (ite (= #b10 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e15) #b1 #b0) $e28)) $e29)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e29))))) (bvand $e45 (ite (= #b10 $e35) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e31)) (bvnot (bvand (bvnot $e31) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e29))))))) (bvand $e44 (ite (= #b11 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28340@dummy_resetX530) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e15) #b1 #b0) $e28)) $e29)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e29))))) (bvand $e45 (ite (= #b11 $e35) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_28340@rstX402 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_28340@__ILA_I_instX531)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_28340@rstX402))) BTOR_28340@dummy_resetX531))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_28340@rstX402))) (bvnot $e46)) $e47) (bvnot (ite (= $e25 $e32) #b1 #b0))))) (bvnot (bvand (bvand $e47 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_28340@rstX402))) (bvnot $e46))) (bvnot (ite (= $e23 $e43) #b1 #b0))))) (bvnot (bvand (bvand $e47 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_28340@rstX402))) (bvnot $e46))) (bvnot (ite (= $e21 $e36) #b1 #b0))))) (bvnot (bvand (bvand $e47 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_28340@rstX402))) (bvnot $e46))) (bvnot (ite (= $e24 $e38) #b1 #b0))))) (bvnot (bvand BTOR_28340@rstX402 (bvnot (bvand (bvnot (bvand BTOR_28340@rstX402 (bvnot (ite (= $e32 $e39) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28340@rstX402) (bvnot (ite (= $e25 $e39) #b1 #b0))))))))) (bvnot (bvand BTOR_28340@rstX402 (bvnot (bvand (bvnot (bvand BTOR_28340@rstX402 (bvnot (ite (= $e40 $e43) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28340@rstX402) (bvnot (ite (= $e23 $e40) #b1 #b0))))))))) (bvnot (bvand BTOR_28340@rstX402 (bvnot (bvand (bvnot (bvand BTOR_28340@rstX402 (bvnot (ite (= $e36 $e41) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28340@rstX402) (bvnot (ite (= $e21 $e41) #b1 #b0))))))))) (bvnot (bvand BTOR_28340@rstX402 (bvnot (bvand (bvnot (bvand BTOR_28340@rstX402 (bvnot (ite (= $e38 $e42) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28340@rstX402) (bvnot (ite (= $e24 $e42) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand (bvnot v1) inst_v))) (let (($e5 (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e4)))))) (let (($e6 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e7 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e8 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e7) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e8)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e5))))) (bvnot $e8))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot $e5) (bvnot $e6))) (bvnot (bvand (bvnot w2) $e6)))) $e7)))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (bvand #b10 s1))) (let (($e11 (bvand #b10 s2))) (let (($e12 (bvand #b10 s3))) (let (($e13 (bvand #b10 s0))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e4 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e3) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e4))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))) $e3)))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_18@__VLG_I_stallexX13) (bvnot (bvand v2 BTOR_18@__VLG_I_stallwbX13)))))))) (ite (= inst BTOR_18@__ILA_I_instX13) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_18@__ILA_I_instX13)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_18@dummy_resetX13)))))))))
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_18@__VLG_I_stallexX13) (bvnot (bvand v2 BTOR_18@__VLG_I_stallwbX13))))))))@0
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_18@__VLG_I_stallexX13) (bvnot (bvand v2 BTOR_18@__VLG_I_stallwbX13))))))))
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_18@__VLG_I_stallexX13) (bvnot (bvand v2 BTOR_18@__VLG_I_stallwbX13)))))@0
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_18@__VLG_I_stallexX13) (bvnot (bvand v2 BTOR_18@__VLG_I_stallwbX13)))))
A5: (bvand v2 (bvnot BTOR_18@__VLG_I_stallwbX13))@0
A5: (bvand v2 (bvnot BTOR_18@__VLG_I_stallwbX13))
A6: (bvnot BTOR_18@dummy_resetX13)@0
A6: (bvnot BTOR_18@dummy_resetX13)
A7: ts.asmpt @1
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_18@__VLG_I_stallwbX13))) (let (($e7 (bvand (bvnot BTOR_18@__VLG_I_stallexX13) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_18@__VLG_I_stallwbX13)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_18@dummy_resetX13) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_18@dummy_resetX13) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_18@dummy_resetX13) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_18@dummy_resetX13) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_18@dummy_resetX13) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_18@dummy_resetX14))))))))))))))))))
A8: ts.asmpt @0
A8: (let (($e1 (bvand w1 v1))) (bvand (ite (and (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_972@dummy_resetX65))))
A9: (bvand (bvnot (bvand inst_v (bvnot (bvand v1 BTOR_972@__VLG_I_stallexX65)))) (bvand (bvnot BTOR_972@rstX44) (bvnot BTOR_972@dummy_resetX65)))@0
A9: (bvand (bvnot (bvand inst_v (bvnot (bvand v1 BTOR_972@__VLG_I_stallexX65)))) (bvand (bvnot BTOR_972@rstX44) (bvnot BTOR_972@dummy_resetX65)))
A10: ts.asmpt @0
A10: (let (($e1 (bvand w1 v1))) (bvand (ite (and (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_2444@dummy_resetX155))))
A11: (bvand (bvand inst_v (bvnot (bvand v1 BTOR_2444@__VLG_I_stallexX155))) (bvand (bvnot BTOR_2444@rstX116) (bvnot BTOR_2444@dummy_resetX155)))@0
A11: (bvand (bvand inst_v (bvnot (bvand v1 BTOR_2444@__VLG_I_stallexX155))) (bvand (bvnot BTOR_2444@rstX116) (bvnot BTOR_2444@dummy_resetX155)))
A12: ts.asmpt @1
A12: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd2))) (let (($e5 (= #b10 rd2))) (let (($e6 ((_ extract 7 6) inst))) (let (($e7 (and (not (= #b01 $e6)) (not (= #b10 $e6)) (not (= #b11 $e6))))) (let (($e8 (bvand inst_v (bvnot (ite $e7 #b1 #b0))))) (let (($e9 ((_ extract 1 0) inst))) (let (($e10 (bvand v1 BTOR_2444@__VLG_I_stallexX155))) (let (($e11 (bvand inst_v (bvnot $e10)))) (let (($e12 (bvand v1 (bvnot BTOR_2444@__VLG_I_stallexX155)))) (let (($e13 (bvand (bvnot BTOR_2444@dummy_resetX155) $e12))) (let (($e14 (ite (= #b1 (bvand (bvnot BTOR_2444@dummy_resetX155) $e11)) $e9 rd1))) (let (($e15 (ite (= #b1 $e13) rd1 rd2))) (let (($e16 (bvand (bvnot BTOR_2444@dummy_resetX155) (bvnot (bvand (bvnot inst_v) (bvnot $e10)))))) (let (($e17 (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@ILA_r0_randinitX155 ILA_r0))) (let (($e18 (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@ILA_r1_randinitX155 ILA_r1))) (let (($e19 (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@ILA_r2_randinitX155 ILA_r2))) (let (($e20 (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@ILA_r3_randinitX155 ILA_r3))) (let (($e21 (bvand (bvnot (bvand (bvnot w1) $e12)) (bvnot (bvand (bvnot w2) (bvnot $e12)))))) (let (($e22 (bvand (bvand (bvnot (bvand (ite $e7 #b1 #b0) $e11)) (bvnot (bvand (bvnot w1) (bvnot $e11)))) $e16))) (let (($e23 (bvand v1 (bvand (bvnot BTOR_2444@dummy_resetX155) (bvnot BTOR_2444@__VLG_I_stallexX155))))) (let (($e24 (bvand $e21 $e23))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_2444@rstX116 (bvnot (bvand BTOR_2444@__VLG_I_inst_validX156 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_2444@__VLG_I_inst_validX155 (bvnot (bvand inst_v $e10)))) (bvnot (bvand $e10 (bvand inst_v (bvnot BTOR_2444@dummy_resetX155)))))) (bvand $e16 (bvnot (bvand (bvnot BTOR_2444@__VLG_I_stallexX156) (bvnot (bvand $e13 BTOR_2444@__VLG_I_stallwbX156))))))))))) (bvnot (bvand BTOR_2444@rstX116 (bvnot (ite (= BTOR_2444@__VLG_I_instX156 BTOR_2444@__ILA_I_instX156) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_2444@dummy_resetX155) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b00 $e9) #b1 #b0))) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e12))))))) (bvand $e22 (ite (= #b00 $e14) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvand $e1 (ite (= #b00 rd1) #b1 #b0)) $e23) (bvand $e23 (bvand $e21 (ite (= #b00 $e15) #b1 #b0)))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2444@dummy_resetX155) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b01 $e9) #b1 #b0))) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e12))))))) (bvand $e22 (ite (= #b01 $e14) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvand $e1 (ite (= #b01 rd1) #b1 #b0)) $e23) (bvand (ite (= #b01 $e15) #b1 #b0) $e24)) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2444@dummy_resetX155) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b10 $e9) #b1 #b0))) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e12))))))) (bvand $e22 (ite (= #b10 $e14) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvand $e1 (ite (= #b10 rd1) #b1 #b0)) $e23) (bvand $e24 (ite (= #b10 $e15) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_2444@dummy_resetX155) (bvand (bvnot (bvand (bvnot (bvand $e8 (ite (= #b11 $e9) #b1 #b0))) $e11)) (bvnot (bvand (bvnot $e11) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e12))))))) (bvand $e22 (ite (= #b11 $e14) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvand $e1 (ite (= #b11 rd1) #b1 #b0)) $e23) (bvand $e24 (ite (= #b11 $e15) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_2444@rstX116 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_2444@__ILA_I_instX156)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_2444@rstX116))) BTOR_2444@dummy_resetX156))) (bvnot (bvand BTOR_2444@rstX116 (bvnot (bvand (bvnot (bvand BTOR_2444@rstX116 (bvnot (ite (= (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@____auxvar0__recorder_init__X155 __auxvar0__recorder) $e17) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2444@rstX116) (bvnot (ite (= (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0) $e17) #b1 #b0))))))))) (bvnot (bvand BTOR_2444@rstX116 (bvnot (bvand (bvnot (bvand BTOR_2444@rstX116 (bvnot (ite (= $e18 (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@____auxvar1__recorder_init__X155 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2444@rstX116) (bvnot (ite (= (ite (= #b1 (bvand $e2 (ite (and $e4 (not $e3)) #b1 #b0))) ex_val reg1) $e18) #b1 #b0))))))))) (bvnot (bvand BTOR_2444@rstX116 (bvnot (bvand (bvnot (bvand BTOR_2444@rstX116 (bvnot (ite (= (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@____auxvar2__recorder_init__X155 __auxvar2__recorder) $e19) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2444@rstX116) (bvnot (ite (= (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e4) (not $e3)) #b1 #b0))) ex_val reg2) $e19) #b1 #b0))))))))) (bvnot (bvand BTOR_2444@rstX116 (bvnot (bvand (bvnot (bvand BTOR_2444@rstX116 (bvnot (ite (= (ite (= #b1 BTOR_2444@rstX116) BTOR_2444@____auxvar3__recorder_init__X155 __auxvar3__recorder) $e20) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_2444@rstX116) (bvnot (ite (= (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e5) (not $e4) (not $e3)) #b1 #b0))) ex_val reg3) $e20) #b1 #b0)))))))))))))))))))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 ((_ extract 7 6) inst))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 (bvand inst_v (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (let (($e4 (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 rd1) #b1 #b0) $e4)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e2) #b1 #b0) $e3)) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e2) #b1 #b0) $e3)) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 rd1) #b1 #b0) $e4)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e2) #b1 #b0) $e3)) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 rd1) #b1 #b0) $e4)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e2) #b1 #b0) $e3)) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 rd1) #b1 #b0) $e4))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_9622@dummy_resetX280)))))))
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand inst_v (bvnot (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot (bvand v1 BTOR_9622@__VLG_I_stallwbX280))))))))@0
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand inst_v (bvnot (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot (bvand v1 BTOR_9622@__VLG_I_stallwbX280))))))))
A15: (bvnot (bvand inst_v (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot (bvand v1 BTOR_9622@__VLG_I_stallwbX280)))))@0
A15: (bvnot (bvand inst_v (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot (bvand v1 BTOR_9622@__VLG_I_stallwbX280)))))
A16: (bvand v1 (bvnot BTOR_9622@__VLG_I_stallwbX280))@0
A16: (bvand v1 (bvnot BTOR_9622@__VLG_I_stallwbX280))
A17: (bvand (bvnot BTOR_9622@dummy_resetX280) (bvnot (bvand inst_v (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot (bvand v1 BTOR_9622@__VLG_I_stallwbX280))))))@0
A17: (bvand (bvnot BTOR_9622@dummy_resetX280) (bvnot (bvand inst_v (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot (bvand v1 BTOR_9622@__VLG_I_stallwbX280))))))
A18: ts.asmpt @1
A18: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (= #b00 rd1))) (let (($e6 (bvand w2 v2))) (let (($e7 (= #b00 rd2))) (let (($e8 (= #b01 rd1))) (let (($e9 (= #b01 rd2))) (let (($e10 (= #b10 rd1))) (let (($e11 (= #b10 rd2))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 ((_ extract 7 6) inst))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (let (($e16 (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e13)) (not (= #b10 $e13)) (not (= #b11 $e13))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))) (let (($e17 (bvand inst_v $e16))) (let (($e18 (bvand v1 BTOR_9622@__VLG_I_stallwbX280))) (let (($e19 (bvand (bvnot BTOR_9622@__VLG_I_stallexX280) (bvnot $e18)))) (let (($e20 (bvand inst_v (bvnot $e19)))) (let (($e21 (bvand RTL_if_id_valid (bvnot $e20)))) (let (($e22 (bvand inst_v $e19))) (let (($e23 (bvand v1 (bvnot BTOR_9622@__VLG_I_stallwbX280)))) (let (($e24 (bvand $e15 $e23))) (let (($e25 (ite (= #b1 (bvand (bvnot BTOR_9622@dummy_resetX280) $e21)) $e4 $e14))) (let (($e26 (ite (= #b1 (bvand (bvnot BTOR_9622@dummy_resetX280) $e22)) $e14 rd1))) (let (($e27 (bvand (bvnot BTOR_9622@dummy_resetX280) (bvnot (bvand (bvnot $e18) (bvnot $e22)))))) (let (($e28 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e21)) (bvnot (bvand (bvnot $e16) (bvnot $e21)))) (bvand (bvnot BTOR_9622@dummy_resetX280) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e20))))))) (let (($e29 (bvand $e27 (bvand (bvnot (bvand (bvnot $e16) $e22)) (bvnot (bvand (bvnot $e15) (bvnot $e22))))))) (let (($e30 (bvand $e22 (bvand $e27 (bvnot BTOR_9622@__VLG_I_stallwbX281))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e14) #b1 #b0) $e17)) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e23))))))) (bvand $e29 (ite (= #b00 $e26) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e21)) (bvnot (bvand (bvnot $e21) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e22))))))) (bvand $e28 (ite (= #b00 $e25) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e21)) (bvnot (bvand (bvnot $e21) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e22))))))) (bvand $e28 (ite (= #b01 $e25) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e14) #b1 #b0) $e17)) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e23))))))) (bvand $e29 (ite (= #b01 $e26) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e21)) (bvnot (bvand (bvnot $e21) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e22))))))) (bvand $e28 (ite (= #b10 $e25) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e14) #b1 #b0) $e17)) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e23))))))) (bvand $e29 (ite (= #b10 $e26) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e21)) (bvnot (bvand (bvnot $e21) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e22))))))) (bvand $e28 (ite (= #b11 $e25) #b1 #b0))) (= (bvand (bvnot BTOR_9622@dummy_resetX280) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e14) #b1 #b0) $e17)) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e23))))))) (bvand $e29 (ite (= #b11 $e26) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_9622@dummy_resetX281))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e30) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e5 #b1 #b0) $e24)) $e12 (ite (= #b1 (bvand $e6 (ite $e7 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e30) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e8 (not $e5)) #b1 #b0) $e24)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e9 (not $e7)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e30) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e10 (not $e8) (not $e5)) #b1 #b0) $e24)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e11 (not $e9) (not $e7)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e30) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e10) (not $e8) (not $e5)) #b1 #b0) $e24)) $e12 (ite (= #b1 (bvand $e6 (ite (and (= #b11 rd2) (not $e11) (not $e9) (not $e7)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))))))
A19: ts.asmpt @0
A19: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 ((_ extract 1 0) inst))) (let (($e4 (bvand RTL_if_id_valid (bvnot inst_v)))) (let (($e5 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e4))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e3) #b1 #b0) $e5)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e3) #b1 #b0) $e5)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e3) #b1 #b0) $e5)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e3) #b1 #b0) $e5)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_28712@dummy_resetX536))))))))
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v))) (bvnot BTOR_28712@__VLG_I_stallexX536)) (bvand (bvnot BTOR_28712@rstX408) (bvnot BTOR_28712@dummy_resetX536)))@0
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v))) (bvnot BTOR_28712@__VLG_I_stallexX536)) (bvand (bvnot BTOR_28712@rstX408) (bvnot BTOR_28712@dummy_resetX536)))
A21: ts.asmpt @1
A21: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (= #b00 rd1))) (let (($e6 (bvand w2 v2))) (let (($e7 (= #b00 rd2))) (let (($e8 (= #b01 rd1))) (let (($e9 (= #b01 rd2))) (let (($e10 (= #b10 rd1))) (let (($e11 (= #b10 rd2))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 ((_ extract 7 6) inst))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (let (($e16 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e17 (bvand RTL_if_id_valid (bvnot inst_v)))) (let (($e18 (bvand v1 $e15))) (let (($e19 (ite (= #b1 (bvand (ite (and $e10 (not $e8) (not $e5)) #b1 #b0) $e18)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e11 (not $e9) (not $e7)) #b1 #b0))) ex_val reg2)))) (let (($e20 (ite (= #b1 (bvand (ite (and $e8 (not $e5)) #b1 #b0) $e18)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e9 (not $e7)) #b1 #b0))) ex_val reg1)))) (let (($e21 (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e10) (not $e8) (not $e5)) #b1 #b0) $e18)) $e12 (ite (= #b1 (bvand $e6 (ite (and (= #b11 rd2) (not $e11) (not $e9) (not $e7)) #b1 #b0))) ex_val reg3)))) (let (($e22 (ite (= #b1 (bvand (ite $e5 #b1 #b0) $e18)) $e12 (ite (= #b1 (bvand $e6 (ite $e7 #b1 #b0))) ex_val reg0)))) (let (($e23 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e17)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e13)) (not (= #b10 $e13)) (not (= #b11 $e13))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e17)))))) (let (($e24 (bvand (bvnot $e16) $e23))) (let (($e25 (bvand (bvnot $e16) (bvnot BTOR_28712@__VLG_I_stallexX536)))) (let (($e26 (bvand (bvnot $e16) BTOR_28712@__VLG_I_stallexX536))) (let (($e27 (bvand RTL_if_id_valid (bvnot $e26)))) (let (($e28 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@____auxvar0__recorder_init__X536 __auxvar0__recorder))) (let (($e29 (bvand (bvnot BTOR_28712@dummy_resetX536) $e25))) (let (($e30 (ite (= #b1 (bvand (bvnot BTOR_28712@dummy_resetX536) $e27)) $e4 $e14))) (let (($e31 (ite (= #b1 $e29) $e14 rd1))) (let (($e32 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@____auxvar2__recorder_init__X536 __auxvar2__recorder))) (let (($e33 (bvand (bvnot BTOR_28712@dummy_resetX536) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e26)))))) (let (($e34 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@____auxvar3__recorder_init__X536 __auxvar3__recorder))) (let (($e35 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@ILA_r0_randinitX536 ILA_r0))) (let (($e36 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@ILA_r1_randinitX536 ILA_r1))) (let (($e37 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@ILA_r2_randinitX536 ILA_r2))) (let (($e38 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@ILA_r3_randinitX536 ILA_r3))) (let (($e39 (ite (= #b1 BTOR_28712@rstX408) BTOR_28712@____auxvar1__recorder_init__X536 __auxvar1__recorder))) (let (($e40 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e27)) (bvnot (bvand (bvnot $e23) (bvnot $e27)))) $e33))) (let (($e41 (bvand $e29 (bvand (bvnot (bvand (bvnot $e23) $e25)) (bvnot (bvand (bvnot $e15) (bvnot $e25))))))) (let (($e42 (bvand (bvnot __STARTED__) (bvnot BTOR_28712@rstX408)))) (let (($e43 (bvand (bvand (bvnot BTOR_28712@rstX408) $e25) (bvand $e29 (bvnot BTOR_28712@__VLG_I_stallwbX537))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_28712@rstX408 (bvnot (bvand BTOR_28712@__VLG_I_inst_validX537 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_28712@__VLG_I_inst_validX536 (bvnot (bvand RTL_if_id_valid $e26)))) (bvnot (bvand $e26 (bvand RTL_if_id_valid (bvnot BTOR_28712@dummy_resetX536)))))) (bvand $e33 (bvnot (bvand (bvnot BTOR_28712@__VLG_I_stallexX537) (bvnot (bvand $e29 BTOR_28712@__VLG_I_stallwbX537))))))))))) (bvnot (bvand BTOR_28712@rstX408 (bvnot (ite (= BTOR_28712@__VLG_I_instX537 BTOR_28712@__ILA_I_instX537) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e27)) (bvnot (bvand (bvnot $e27) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e25))))))) (bvand $e40 (ite (= #b00 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e14) #b1 #b0) $e24)) $e25)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e25))))) (bvand $e41 (ite (= #b00 $e31) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e27)) (bvnot (bvand (bvnot $e27) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e25))))))) (bvand $e40 (ite (= #b01 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e14) #b1 #b0) $e24)) $e25)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e25))))) (bvand $e41 (ite (= #b01 $e31) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e27)) (bvnot (bvand (bvnot $e27) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e25))))))) (bvand $e40 (ite (= #b10 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e14) #b1 #b0) $e24)) $e25)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e25))))) (bvand $e41 (ite (= #b10 $e31) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e27)) (bvnot (bvand (bvnot $e27) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e25))))))) (bvand $e40 (ite (= #b11 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_28712@dummy_resetX536) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e14) #b1 #b0) $e24)) $e25)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e25))))) (bvand $e41 (ite (= #b11 $e31) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_28712@rstX408 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_28712@__ILA_I_instX537)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_28712@rstX408))) BTOR_28712@dummy_resetX537))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_28712@rstX408))) (bvnot $e42)) $e43) (bvnot (ite (= $e22 $e28) #b1 #b0))))) (bvnot (bvand (bvand $e43 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_28712@rstX408))) (bvnot $e42))) (bvnot (ite (= $e20 $e39) #b1 #b0))))) (bvnot (bvand (bvand $e43 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_28712@rstX408))) (bvnot $e42))) (bvnot (ite (= $e19 $e32) #b1 #b0))))) (bvnot (bvand (bvand $e43 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_28712@rstX408))) (bvnot $e42))) (bvnot (ite (= $e21 $e34) #b1 #b0))))) (bvnot (bvand BTOR_28712@rstX408 (bvnot (bvand (bvnot (bvand BTOR_28712@rstX408 (bvnot (ite (= $e28 $e35) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28712@rstX408) (bvnot (ite (= $e22 $e35) #b1 #b0))))))))) (bvnot (bvand BTOR_28712@rstX408 (bvnot (bvand (bvnot (bvand BTOR_28712@rstX408 (bvnot (ite (= $e36 $e39) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28712@rstX408) (bvnot (ite (= $e20 $e36) #b1 #b0))))))))) (bvnot (bvand BTOR_28712@rstX408 (bvnot (bvand (bvnot (bvand BTOR_28712@rstX408 (bvnot (ite (= $e32 $e37) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28712@rstX408) (bvnot (ite (= $e19 $e37) #b1 #b0))))))))) (bvnot (bvand BTOR_28712@rstX408 (bvnot (bvand (bvnot (bvand BTOR_28712@rstX408 (bvnot (ite (= $e34 $e38) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_28712@rstX408) (bvnot (ite (= $e21 $e38) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e4 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e3) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e4))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))) $e3)))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15)))))))) (ite (= inst BTOR_28@__ILA_I_instX15) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_28@__ILA_I_instX15)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_28@dummy_resetX15)))))))))
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))))))@0
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))))))
A4: (bvand v1 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))@0
A4: (bvand v1 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))
A5: (bvnot BTOR_28@dummy_resetX15)@0
A5: (bvnot BTOR_28@dummy_resetX15)
A6: ts.asmpt @1
A6: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_28@__VLG_I_stallwbX15))) (let (($e7 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_28@__VLG_I_stallwbX15)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_28@dummy_resetX15) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_28@dummy_resetX15) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_28@dummy_resetX15) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_28@dummy_resetX15) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_28@dummy_resetX16))))))))))))))))))
A7: ts.asmpt @0
A7: (let (($e1 (bvand w1 v1))) (bvand (ite (and (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_2662@dummy_resetX168))))
A8: (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot (bvand v1 BTOR_2662@__VLG_I_stallwbX168)))))))@0
A8: (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot (bvand v1 BTOR_2662@__VLG_I_stallwbX168)))))))
A9: (bvnot (bvand v0 (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot (bvand v1 BTOR_2662@__VLG_I_stallwbX168)))))@0
A9: (bvnot (bvand v0 (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot (bvand v1 BTOR_2662@__VLG_I_stallwbX168)))))
A10: (bvnot (bvand v1 (bvnot BTOR_2662@__VLG_I_stallwbX168)))@0
A10: (bvnot (bvand v1 (bvnot BTOR_2662@__VLG_I_stallwbX168)))
A11: (bvand (bvnot BTOR_2662@dummy_resetX168) (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot (bvand v1 BTOR_2662@__VLG_I_stallwbX168))))))))@0
A11: (bvand (bvnot BTOR_2662@dummy_resetX168) (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot (bvand v1 BTOR_2662@__VLG_I_stallwbX168))))))))
A12: ts.asmpt @1
A12: (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 1 0) inst))) (let (($e4 (bvand v1 (bvnot (ite $e2 #b1 #b0))))) (let (($e5 (bvand v1 BTOR_2662@__VLG_I_stallwbX168))) (let (($e6 (bvand (bvnot BTOR_2662@__VLG_I_stallexX168) (bvnot $e5)))) (let (($e7 (bvand v0 (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 $e6))) (let (($e10 (bvand v1 (bvnot BTOR_2662@__VLG_I_stallwbX168)))) (let (($e11 (ite (= #b1 (bvand (bvnot BTOR_2662@dummy_resetX168) $e8)) $e3 rd1))) (let (($e12 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e8)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e8)))) (bvand (bvnot BTOR_2662@dummy_resetX168) (bvnot (bvand (bvnot v1) (bvnot $e7))))))) (let (($e13 (bvand (bvnot BTOR_2662@dummy_resetX168) (bvnot $e9)))) (let (($e14 (bvand w1 (bvnot (bvand (bvnot $e5) (bvnot $e9)))))) (bvand (ite (and (= (bvand (bvand ((_ extract 1 1) s0) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b00 rd1) #b1 #b0) $e14))) (= (bvand (bvnot BTOR_2662@dummy_resetX168) (bvand (bvand (ite (= #b00 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b00 $e11) #b1 #b0))) (= (bvand (bvnot BTOR_2662@dummy_resetX168) (bvand (bvand (ite (= #b01 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b01 $e11) #b1 #b0))) (= (bvand (bvand ((_ extract 1 1) s1) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b01 rd1) #b1 #b0) $e14))) (= (bvand (bvnot BTOR_2662@dummy_resetX168) (bvand (bvand (ite (= #b10 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b10 $e11) #b1 #b0))) (= (bvand (bvand ((_ extract 1 1) s2) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b10 rd1) #b1 #b0) $e14))) (= (bvand (bvnot BTOR_2662@dummy_resetX168) (bvand (bvand (ite (= #b11 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b11 $e11) #b1 #b0))) (= (bvand (bvand ((_ extract 1 1) s3) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b11 rd1) #b1 #b0) $e14)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_2662@dummy_resetX169)))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 1 0) inst))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand v1 (ite (= #b00 $e2) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand v1 (ite (= #b01 $e2) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand v1 (ite (= #b10 $e2) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand v1 (ite (= #b11 $e2) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand $e1 (ite (= #b11 rd1) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_10074@dummy_resetX316)))))
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot (bvand v1 BTOR_10074@__VLG_I_stallwbX316))))))))@0
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot (bvand v1 BTOR_10074@__VLG_I_stallwbX316))))))))
A15: (bvnot (bvand v1 (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot (bvand v1 BTOR_10074@__VLG_I_stallwbX316)))))@0
A15: (bvnot (bvand v1 (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot (bvand v1 BTOR_10074@__VLG_I_stallwbX316)))))
A16: (bvand v1 (bvnot BTOR_10074@__VLG_I_stallwbX316))@0
A16: (bvand v1 (bvnot BTOR_10074@__VLG_I_stallwbX316))
A17: (bvand (bvnot BTOR_10074@dummy_resetX316) (bvnot (bvand v1 (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot (bvand v1 BTOR_10074@__VLG_I_stallwbX316))))))@0
A17: (bvand (bvnot BTOR_10074@dummy_resetX316) (bvnot (bvand v1 (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot (bvand v1 BTOR_10074@__VLG_I_stallwbX316))))))
A18: ts.asmpt @1
A18: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (= #b00 rd1))) (let (($e6 (bvand w2 v2))) (let (($e7 (= #b00 rd2))) (let (($e8 (= #b01 rd1))) (let (($e9 (= #b01 rd2))) (let (($e10 (= #b10 rd1))) (let (($e11 (= #b10 rd2))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 ((_ extract 1 0) inst))) (let (($e14 (bvand v1 BTOR_10074@__VLG_I_stallwbX316))) (let (($e15 (bvand (bvnot BTOR_10074@__VLG_I_stallexX316) (bvnot $e14)))) (let (($e16 (bvand v1 (bvnot $e15)))) (let (($e17 (bvand RTL_if_id_valid (bvnot $e16)))) (let (($e18 (bvand v1 $e15))) (let (($e19 (bvand v1 (bvnot BTOR_10074@__VLG_I_stallwbX316)))) (let (($e20 (bvand w1 $e19))) (let (($e21 (ite (= #b1 (bvand (bvnot BTOR_10074@dummy_resetX316) $e17)) $e4 $e13))) (let (($e22 (ite (= #b1 (bvand (bvnot BTOR_10074@dummy_resetX316) $e18)) $e13 rd1))) (let (($e23 (bvand (bvnot BTOR_10074@dummy_resetX316) (bvnot (bvand (bvnot $e14) (bvnot $e18)))))) (let (($e24 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e17)) (bvand (bvnot BTOR_10074@dummy_resetX316) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e16))))))) (let (($e25 (bvand $e23 (bvnot (bvand (bvnot w1) (bvnot $e18)))))) (let (($e26 (bvand $e18 (bvand $e23 (bvnot BTOR_10074@__VLG_I_stallwbX317))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (ite (= #b00 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b00 $e22) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b00 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b01 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (ite (= #b01 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b01 $e22) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b10 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (ite (= #b10 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b10 $e22) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e17)) (bvnot (bvand (bvnot $e17) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e18))))))) (bvand $e24 (ite (= #b11 $e21) #b1 #b0))) (= (bvand (bvnot BTOR_10074@dummy_resetX316) (bvand (bvnot (bvand (bvnot (ite (= #b11 $e13) #b1 #b0)) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e19))))))) (bvand $e25 (ite (= #b11 $e22) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_10074@dummy_resetX317))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e5 #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite $e7 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e8 (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e9 (not $e7)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e10 (not $e8) (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and $e11 (not $e9) (not $e7)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e26) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e10) (not $e8) (not $e5)) #b1 #b0) $e20)) $e12 (ite (= #b1 (bvand $e6 (ite (and (= #b11 rd2) (not $e11) (not $e9) (not $e7)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))
A19: ts.asmpt @0
A19: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e2) #b1 #b0) $e3)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e2) #b1 #b0) $e3)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_29084@dummy_resetX542))))))
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_29084@__VLG_I_stallexX542)) (bvand (bvnot BTOR_29084@rstX414) (bvnot BTOR_29084@dummy_resetX542)))@0
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_29084@__VLG_I_stallexX542)) (bvand (bvnot BTOR_29084@rstX414) (bvnot BTOR_29084@dummy_resetX542)))
A21: ts.asmpt @1
A21: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 (ite (= #b1 (bvand $e5 (ite (and $e11 (not $e9) (not $e6)) #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2)))) (let (($e16 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1)))) (let (($e17 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)) #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3)))) (let (($e18 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) $e13 (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0)))) (let (($e19 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e20 (bvand (ite $e2 #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (let (($e21 (bvand (bvnot $e19) (bvnot $e20)))) (let (($e22 (bvand (bvnot $e19) (bvnot BTOR_29084@__VLG_I_stallexX542)))) (let (($e23 (bvand (bvnot $e19) BTOR_29084@__VLG_I_stallexX542))) (let (($e24 (bvand RTL_if_id_valid (bvnot $e23)))) (let (($e25 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@____auxvar0__recorder_init__X542 __auxvar0__recorder))) (let (($e26 (bvand (bvnot BTOR_29084@dummy_resetX542) $e22))) (let (($e27 (ite (= #b1 (bvand (bvnot BTOR_29084@dummy_resetX542) $e24)) $e4 $e14))) (let (($e28 (ite (= #b1 $e26) $e14 rd1))) (let (($e29 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@____auxvar2__recorder_init__X542 __auxvar2__recorder))) (let (($e30 (bvand (bvnot BTOR_29084@dummy_resetX542) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e23)))))) (let (($e31 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@____auxvar3__recorder_init__X542 __auxvar3__recorder))) (let (($e32 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@ILA_r0_randinitX542 ILA_r0))) (let (($e33 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@ILA_r1_randinitX542 ILA_r1))) (let (($e34 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@ILA_r2_randinitX542 ILA_r2))) (let (($e35 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@ILA_r3_randinitX542 ILA_r3))) (let (($e36 (ite (= #b1 BTOR_29084@rstX414) BTOR_29084@____auxvar1__recorder_init__X542 __auxvar1__recorder))) (let (($e37 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e24)) (bvnot (bvand $e20 (bvnot $e24)))) $e30))) (let (($e38 (bvand $e26 (bvand (bvnot (bvand $e20 $e22)) (bvnot (bvand (bvnot w1) (bvnot $e22))))))) (let (($e39 (bvand (bvnot __STARTED__) (bvnot BTOR_29084@rstX414)))) (let (($e40 (bvand (bvand (bvnot BTOR_29084@rstX414) $e22) (bvand $e26 (bvnot BTOR_29084@__VLG_I_stallwbX543))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_29084@rstX414 (bvnot (bvand BTOR_29084@__VLG_I_inst_validX543 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_29084@__VLG_I_inst_validX542 (bvnot (bvand RTL_if_id_valid $e23)))) (bvnot (bvand $e23 (bvand RTL_if_id_valid (bvnot BTOR_29084@dummy_resetX542)))))) (bvand $e30 (bvnot (bvand (bvnot BTOR_29084@__VLG_I_stallexX543) (bvnot (bvand $e26 BTOR_29084@__VLG_I_stallwbX543))))))))))) (bvnot (bvand BTOR_29084@rstX414 (bvnot (ite (= BTOR_29084@__VLG_I_instX543 BTOR_29084@__ILA_I_instX543) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b00 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b00 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b01 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b01 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b10 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b10 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e22))))))) (bvand $e37 (ite (= #b11 $e27) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29084@dummy_resetX542) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e14) #b1 #b0) $e21)) $e22)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e22))))) (bvand $e38 (ite (= #b11 $e28) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_29084@rstX414 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_29084@__ILA_I_instX543)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_29084@rstX414))) BTOR_29084@dummy_resetX543))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_29084@rstX414))) (bvnot $e39)) $e40) (bvnot (ite (= $e18 $e25) #b1 #b0))))) (bvnot (bvand (bvand $e40 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_29084@rstX414))) (bvnot $e39))) (bvnot (ite (= $e16 $e36) #b1 #b0))))) (bvnot (bvand (bvand $e40 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_29084@rstX414))) (bvnot $e39))) (bvnot (ite (= $e15 $e29) #b1 #b0))))) (bvnot (bvand (bvand $e40 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_29084@rstX414))) (bvnot $e39))) (bvnot (ite (= $e17 $e31) #b1 #b0))))) (bvnot (bvand BTOR_29084@rstX414 (bvnot (bvand (bvnot (bvand BTOR_29084@rstX414 (bvnot (ite (= $e25 $e32) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29084@rstX414) (bvnot (ite (= $e18 $e32) #b1 #b0))))))))) (bvnot (bvand BTOR_29084@rstX414 (bvnot (bvand (bvnot (bvand BTOR_29084@rstX414 (bvnot (ite (= $e33 $e36) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29084@rstX414) (bvnot (ite (= $e16 $e33) #b1 #b0))))))))) (bvnot (bvand BTOR_29084@rstX414 (bvnot (bvand (bvnot (bvand BTOR_29084@rstX414 (bvnot (ite (= $e29 $e34) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29084@rstX414) (bvnot (ite (= $e15 $e34) #b1 #b0))))))))) (bvnot (bvand BTOR_29084@rstX414 (bvnot (bvand (bvnot (bvand BTOR_29084@rstX414 (bvnot (ite (= $e31 $e35) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29084@rstX414) (bvnot (ite (= $e17 $e35) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | v1                  
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15)))))))) (ite (= inst BTOR_28@__ILA_I_instX15) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_28@__ILA_I_instX15)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_28@dummy_resetX15)))))))))
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))))))@0
A3: (bvnot (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))))))
A4: (bvand v1 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))@0
A4: (bvand v1 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot (bvand v2 BTOR_28@__VLG_I_stallwbX15))))
A5: (bvnot BTOR_28@dummy_resetX15)@0
A5: (bvnot BTOR_28@dummy_resetX15)
A6: ts.asmpt @1
A6: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_28@__VLG_I_stallwbX15))) (let (($e7 (bvand (bvnot BTOR_28@__VLG_I_stallexX15) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_28@__VLG_I_stallwbX15)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_28@dummy_resetX15) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_28@dummy_resetX15) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_28@dummy_resetX15) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_28@dummy_resetX15) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_28@dummy_resetX15) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_28@dummy_resetX16))))))))))))))))))
A7: ts.asmpt @0
A7: (let (($e1 (bvand w1 v1))) (bvand (ite (and (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_2668@dummy_resetX170))))
A8: (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot (bvand v1 BTOR_2668@__VLG_I_stallwbX170)))))))@0
A8: (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot (bvand v1 BTOR_2668@__VLG_I_stallwbX170)))))))
A9: (bvnot (bvand v0 (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot (bvand v1 BTOR_2668@__VLG_I_stallwbX170)))))@0
A9: (bvnot (bvand v0 (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot (bvand v1 BTOR_2668@__VLG_I_stallwbX170)))))
A10: (bvand v1 (bvnot BTOR_2668@__VLG_I_stallwbX170))@0
A10: (bvand v1 (bvnot BTOR_2668@__VLG_I_stallwbX170))
A11: (bvand (bvnot BTOR_2668@dummy_resetX170) (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot (bvand v1 BTOR_2668@__VLG_I_stallwbX170))))))))@0
A11: (bvand (bvnot BTOR_2668@dummy_resetX170) (bvand v1 (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot (bvand v1 BTOR_2668@__VLG_I_stallwbX170))))))))
A12: ts.asmpt @1
A12: (let (($e1 ((_ extract 7 6) inst))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 1 0) inst))) (let (($e4 (bvand v1 (bvnot (ite $e2 #b1 #b0))))) (let (($e5 (bvand v1 BTOR_2668@__VLG_I_stallwbX170))) (let (($e6 (bvand (bvnot BTOR_2668@__VLG_I_stallexX170) (bvnot $e5)))) (let (($e7 (bvand v0 (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 $e6))) (let (($e10 (bvand v1 (bvnot BTOR_2668@__VLG_I_stallwbX170)))) (let (($e11 (ite (= #b1 (bvand (bvnot BTOR_2668@dummy_resetX170) $e8)) $e3 rd1))) (let (($e12 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e8)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e8)))) (bvand (bvnot BTOR_2668@dummy_resetX170) (bvnot (bvand (bvnot v1) (bvnot $e7))))))) (let (($e13 (bvand (bvnot BTOR_2668@dummy_resetX170) (bvnot $e9)))) (let (($e14 (bvand w1 (bvnot (bvand (bvnot $e5) (bvnot $e9)))))) (bvand (ite (and (= (bvand (bvand ((_ extract 1 1) s0) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b00 rd1) #b1 #b0) $e14))) (= (bvand (bvnot BTOR_2668@dummy_resetX170) (bvand (bvand (ite (= #b00 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b00 $e11) #b1 #b0))) (= (bvand (bvnot BTOR_2668@dummy_resetX170) (bvand (bvand (ite (= #b01 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b01 $e11) #b1 #b0))) (= (bvand (bvand ((_ extract 1 1) s1) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b01 rd1) #b1 #b0) $e14))) (= (bvand (bvnot BTOR_2668@dummy_resetX170) (bvand (bvand (ite (= #b10 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b10 $e11) #b1 #b0))) (= (bvand (bvand ((_ extract 1 1) s2) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b10 rd1) #b1 #b0) $e14))) (= (bvand (bvnot BTOR_2668@dummy_resetX170) (bvand (bvand (ite (= #b11 $e3) #b1 #b0) $e4) $e8)) (bvand $e12 (ite (= #b11 $e11) #b1 #b0))) (= (bvand (bvand ((_ extract 1 1) s3) (bvnot $e10)) $e13) (bvand $e13 (bvand (ite (= #b11 rd1) #b1 #b0) $e14)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_2668@dummy_resetX171)))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 ((_ extract 1 0) inst))) (let (($e2 (bvand w1 v0))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 rd1) #b1 #b0) $e2)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand v1 (ite (= #b00 $e1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand v1 (ite (= #b01 $e1) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 rd1) #b1 #b0) $e2)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand v1 (ite (= #b10 $e1) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 rd1) #b1 #b0) $e2)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand v1 (ite (= #b11 $e1) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 rd1) #b1 #b0) $e2))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_10510@dummy_resetX335)))))
A14: (bvand (bvnot (bvand v1 (bvand (bvnot BTOR_10510@__VLG_I_stallexX335) (bvnot (bvand v0 BTOR_10510@__VLG_I_stallwbX335))))) (bvand (bvnot BTOR_10510@rstX252) (bvnot BTOR_10510@dummy_resetX335)))@0
A14: (bvand (bvnot (bvand v1 (bvand (bvnot BTOR_10510@__VLG_I_stallexX335) (bvnot (bvand v0 BTOR_10510@__VLG_I_stallwbX335))))) (bvand (bvnot BTOR_10510@rstX252) (bvnot BTOR_10510@dummy_resetX335)))
A15: ts.asmpt @0
A15: (let (($e1 ((_ extract 1 0) inst))) (let (($e2 (bvand w1 v0))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 rd1) #b1 #b0) $e2)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand v1 (ite (= #b00 $e1) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand v1 (ite (= #b01 $e1) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 rd1) #b1 #b0) $e2)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand v1 (ite (= #b10 $e1) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 rd1) #b1 #b0) $e2)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand v1 (ite (= #b11 $e1) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 rd1) #b1 #b0) $e2))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_29216@dummy_resetX545)))))
A16: (bvand (bvand v1 (bvand (bvnot BTOR_29216@__VLG_I_stallexX545) (bvnot (bvand v0 BTOR_29216@__VLG_I_stallwbX545)))) (bvand (bvnot BTOR_29216@rstX417) (bvnot BTOR_29216@dummy_resetX545)))@0
A16: (bvand (bvand v1 (bvand (bvnot BTOR_29216@__VLG_I_stallexX545) (bvnot (bvand v0 BTOR_29216@__VLG_I_stallwbX545)))) (bvand (bvnot BTOR_29216@rstX417) (bvnot BTOR_29216@dummy_resetX545)))
A17: ts.asmpt @1
A17: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)))) (let (($e16 (and $e11 (not $e9) (not $e6)))) (let (($e17 (and $e9 (not $e6)))) (let (($e18 (bvand v0 BTOR_29216@__VLG_I_stallwbX545))) (let (($e19 (bvand (bvnot BTOR_29216@__VLG_I_stallexX545) (bvnot $e18)))) (let (($e20 (bvand v1 $e19))) (let (($e21 (bvand v1 (bvnot $e19)))) (let (($e22 (bvand RTL_if_id_valid (bvnot $e21)))) (let (($e23 (bvand v0 (bvnot BTOR_29216@__VLG_I_stallwbX545)))) (let (($e24 (bvand w1 $e23))) (let (($e25 (ite (= #b1 (bvand (bvnot (bvand $e5 (ite $e15 #b1 #b0))) (bvnot (bvand (ite $e15 #b1 #b0) $e24)))) (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3) $e13))) (let (($e26 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@____auxvar0__recorder_init__X545 __auxvar0__recorder))) (let (($e27 (ite (= #b1 (bvand (bvnot (bvand $e5 (ite $e6 #b1 #b0))) (bvnot (bvand (ite $e6 #b1 #b0) $e24)))) (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0) $e13))) (let (($e28 (ite (= #b1 (bvand (bvnot BTOR_29216@dummy_resetX545) $e22)) $e4 $e14))) (let (($e29 (ite (= #b1 (bvand (bvnot BTOR_29216@dummy_resetX545) $e20)) $e14 rd1))) (let (($e30 (ite (= #b1 (bvand (bvnot (bvand $e5 (ite $e16 #b1 #b0))) (bvnot (bvand (ite $e16 #b1 #b0) $e24)))) (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2) $e13))) (let (($e31 (bvand (bvnot BTOR_29216@dummy_resetX545) (bvnot (bvand (bvnot $e18) (bvnot $e20)))))) (let (($e32 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@____auxvar2__recorder_init__X545 __auxvar2__recorder))) (let (($e33 (bvand (bvnot BTOR_29216@dummy_resetX545) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e21)))))) (let (($e34 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@____auxvar3__recorder_init__X545 __auxvar3__recorder))) (let (($e35 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@ILA_r0_randinitX545 ILA_r0))) (let (($e36 (ite (= #b1 (bvand (bvnot (bvand $e5 (ite $e17 #b1 #b0))) (bvnot (bvand (ite $e17 #b1 #b0) $e24)))) (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1) $e13))) (let (($e37 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@ILA_r1_randinitX545 ILA_r1))) (let (($e38 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@ILA_r2_randinitX545 ILA_r2))) (let (($e39 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@ILA_r3_randinitX545 ILA_r3))) (let (($e40 (ite (= #b1 BTOR_29216@rstX417) BTOR_29216@____auxvar1__recorder_init__X545 __auxvar1__recorder))) (let (($e41 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e22)) $e33))) (let (($e42 (bvand $e31 (bvnot (bvand (bvnot w1) (bvnot $e20)))))) (let (($e43 (bvand (bvnot __STARTED__) (bvnot BTOR_29216@rstX417)))) (let (($e44 (bvand (bvand (bvnot BTOR_29216@rstX417) $e20) (bvand $e31 (bvnot BTOR_29216@__VLG_I_stallwbX546))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_29216@rstX417 (bvnot (bvand BTOR_29216@__VLG_I_inst_validX546 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_29216@__VLG_I_inst_validX545 (bvnot (bvand RTL_if_id_valid $e21)))) (bvnot (bvand $e21 (bvand RTL_if_id_valid (bvnot BTOR_29216@dummy_resetX545)))))) (bvand $e33 (bvnot (bvand (bvnot BTOR_29216@__VLG_I_stallexX546) (bvnot (bvand $e31 BTOR_29216@__VLG_I_stallwbX546))))))))))) (bvnot (bvand BTOR_29216@rstX417 (bvnot (ite (= BTOR_29216@__VLG_I_instX546 BTOR_29216@__ILA_I_instX546) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e20))))))) (bvand $e41 (ite (= #b00 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (ite (= #b00 $e14) #b1 #b0)) $e20)) (bvnot (bvand (bvnot $e20) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e23))))))) (bvand $e42 (ite (= #b00 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e20))))))) (bvand $e41 (ite (= #b01 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (ite (= #b01 $e14) #b1 #b0)) $e20)) (bvnot (bvand (bvnot $e20) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e23))))))) (bvand $e42 (ite (= #b01 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e20))))))) (bvand $e41 (ite (= #b10 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (ite (= #b10 $e14) #b1 #b0)) $e20)) (bvnot (bvand (bvnot $e20) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e23))))))) (bvand $e42 (ite (= #b10 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e22)) (bvnot (bvand (bvnot $e22) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e20))))))) (bvand $e41 (ite (= #b11 $e28) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_29216@dummy_resetX545) (bvand (bvnot (bvand (bvnot (ite (= #b11 $e14) #b1 #b0)) $e20)) (bvnot (bvand (bvnot $e20) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e23))))))) (bvand $e42 (ite (= #b11 $e29) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_29216@rstX417 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_29216@__ILA_I_instX546)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_29216@rstX417))) BTOR_29216@dummy_resetX546))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_29216@rstX417))) (bvnot $e43)) $e44) (bvnot (ite (= $e26 $e27) #b1 #b0))))) (bvnot (bvand (bvand $e44 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_29216@rstX417))) (bvnot $e43))) (bvnot (ite (= $e36 $e40) #b1 #b0))))) (bvnot (bvand (bvand $e44 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_29216@rstX417))) (bvnot $e43))) (bvnot (ite (= $e30 $e32) #b1 #b0))))) (bvnot (bvand (bvand $e44 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_29216@rstX417))) (bvnot $e43))) (bvnot (ite (= $e25 $e34) #b1 #b0))))) (bvnot (bvand BTOR_29216@rstX417 (bvnot (bvand (bvnot (bvand BTOR_29216@rstX417 (bvnot (ite (= $e26 $e35) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29216@rstX417) (bvnot (ite (= $e27 $e35) #b1 #b0))))))))) (bvnot (bvand BTOR_29216@rstX417 (bvnot (bvand (bvnot (bvand BTOR_29216@rstX417 (bvnot (ite (= $e37 $e40) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29216@rstX417) (bvnot (ite (= $e36 $e37) #b1 #b0))))))))) (bvnot (bvand BTOR_29216@rstX417 (bvnot (bvand (bvnot (bvand BTOR_29216@rstX417 (bvnot (ite (= $e32 $e38) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29216@rstX417) (bvnot (ite (= $e30 $e38) #b1 #b0))))))))) (bvnot (bvand BTOR_29216@rstX417 (bvnot (bvand (bvnot (bvand BTOR_29216@rstX417 (bvnot (ite (= $e34 $e39) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_29216@rstX417) (bvnot (ite (= $e25 $e39) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | v1                  
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 ((_ extract 3 2) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000))))) (let (($e34 (concat (ite (and (= #b00 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e35 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e38 (ite $e29 $e37 (ite $e30 $e36 (ite $e31 $e35 (ite $e32 $e34 #b00)))))) (let (($e39 (ite $e24 $e37 (ite $e25 $e36 (ite $e26 $e35 (ite $e27 $e34 #b00)))))) (bvadd (ite (= #b00 $e38) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e38) ex_val $e33)) (ite (= #b00 $e39) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e33))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))))) (ite (= inst BTOR_46@__ILA_I_instX21) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_46@__ILA_I_instX21)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_46@dummy_resetX21)))))))))
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))))@0
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))))
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))@0
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))
A5: (bvnot (bvand v2 (bvnot BTOR_46@__VLG_I_stallwbX21)))@0
A5: (bvnot (bvand v2 (bvnot BTOR_46@__VLG_I_stallwbX21)))
A6: (bvnot BTOR_46@dummy_resetX21)@0
A6: (bvnot BTOR_46@dummy_resetX21)
A7: ts.asmpt @1
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_46@__VLG_I_stallwbX21))) (let (($e7 (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_46@__VLG_I_stallwbX21)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_46@dummy_resetX21) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_46@dummy_resetX21) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_46@dummy_resetX21) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_46@dummy_resetX21) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_46@dummy_resetX22))))))))))))))))))
A8: ts.asmpt @0
A8: (let (($e1 (bvand w2 v2))) (bvand (ite (and (= (bvand $e1 (ite (= #b01 rd2) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (= (bvand $e1 (ite (= #b00 rd2) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) (= (bvand $e1 (ite (= #b10 rd2) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (= (bvand $e1 (ite (= #b11 rd2) #b1 #b0)) (ite (= #b01 s3) #b1 #b0))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1026@dummy_resetX71))))
A9: (bvand (bvnot (bvand v0 (bvand (bvnot BTOR_1026@__VLG_I_stallexX71) (bvnot (bvand v2 BTOR_1026@__VLG_I_stallwbX71))))) (bvand (bvnot BTOR_1026@rstX50) (bvnot BTOR_1026@dummy_resetX71)))@0
A9: (bvand (bvnot (bvand v0 (bvand (bvnot BTOR_1026@__VLG_I_stallexX71) (bvnot (bvand v2 BTOR_1026@__VLG_I_stallwbX71))))) (bvand (bvnot BTOR_1026@rstX50) (bvnot BTOR_1026@dummy_resetX71)))
A10: ts.asmpt @0
A10: (let (($e1 (bvand w2 v2))) (bvand (ite (and (= (bvand $e1 (ite (= #b01 rd2) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (= (bvand $e1 (ite (= #b00 rd2) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) (= (bvand $e1 (ite (= #b10 rd2) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (= (bvand $e1 (ite (= #b11 rd2) #b1 #b0)) (ite (= #b01 s3) #b1 #b0))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_3124@dummy_resetX177))))
A11: (bvand (bvand v0 (bvand (bvnot BTOR_3124@__VLG_I_stallexX177) (bvnot (bvand v2 BTOR_3124@__VLG_I_stallwbX177)))) (bvand (bvnot BTOR_3124@rstX130) (bvnot BTOR_3124@dummy_resetX177)))@0
A11: (bvand (bvand v0 (bvand (bvnot BTOR_3124@__VLG_I_stallexX177) (bvnot (bvand v2 BTOR_3124@__VLG_I_stallwbX177)))) (bvand (bvnot BTOR_3124@rstX130) (bvnot BTOR_3124@dummy_resetX177)))
A12: ts.asmpt @1
A12: (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))))) (let (($e6 (bvand v0 (bvnot (ite $e5 #b1 #b0))))) (let (($e7 ((_ extract 1 0) inst_id))) (let (($e8 (bvand $e6 (ite (= #b00 $e7) #b1 #b0)))) (let (($e9 (bvand $e6 (ite (= #b01 $e7) #b1 #b0)))) (let (($e10 (bvand $e6 (ite (= #b10 $e7) #b1 #b0)))) (let (($e11 (bvand $e6 (ite (= #b11 $e7) #b1 #b0)))) (let (($e12 ((_ extract 7 6) inst))) (let (($e13 (and (not (= #b01 $e12)) (not (= #b10 $e12)) (not (= #b11 $e12))))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 (bvand v0 (bvnot (ite $e13 #b1 #b0))))) (let (($e16 (bvand v2 BTOR_3124@__VLG_I_stallwbX177))) (let (($e17 (bvand (bvnot BTOR_3124@__VLG_I_stallexX177) (bvnot $e16)))) (let (($e18 (bvand v0 $e17))) (let (($e19 (bvand (bvnot BTOR_3124@dummy_resetX177) $e18))) (let (($e20 (bvand v0 (bvnot $e17)))) (let (($e21 (bvand v2 (bvnot BTOR_3124@__VLG_I_stallwbX177)))) (let (($e22 (bvand w2 $e21))) (let (($e23 (ite (= #b1 $e19) $e14 $e7))) (let (($e24 (ite (= #b1 $e19) $e7 rd2))) (let (($e25 (bvand (bvnot BTOR_3124@dummy_resetX177) (bvnot (bvand (bvnot $e16) (bvnot $e18)))))) (let (($e26 (bvand v0 (bvnot BTOR_3124@dummy_resetX177)))) (let (($e27 (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@ILA_r0_randinitX177 ILA_r0))) (let (($e28 (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@ILA_r1_randinitX177 ILA_r1))) (let (($e29 (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@ILA_r2_randinitX177 ILA_r2))) (let (($e30 (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@ILA_r3_randinitX177 ILA_r3))) (let (($e31 (bvand (bvand (bvnot (bvand (ite $e13 #b1 #b0) $e18)) (bvnot (bvand (ite $e5 #b1 #b0) (bvnot $e18)))) $e26))) (let (($e32 (bvand $e25 (bvand (bvnot (bvand (ite $e5 #b1 #b0) $e18)) (bvnot (bvand (bvnot w2) (bvnot $e18))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_3124@rstX130 (bvnot (bvand BTOR_3124@__VLG_I_inst_validX178 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_3124@__VLG_I_inst_validX177 (bvnot $e20))) (bvnot (bvand (bvnot BTOR_3124@dummy_resetX177) $e20)))) (bvand $e26 (bvnot (bvand (bvnot BTOR_3124@__VLG_I_stallexX178) (bvnot (bvand $e25 BTOR_3124@__VLG_I_stallwbX178))))))))))) (bvnot (bvand BTOR_3124@rstX130 (bvnot (ite (= BTOR_3124@__VLG_I_instX178 BTOR_3124@__ILA_I_instX178) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e14) #b1 #b0) $e15)) $e18)) (bvnot (bvand (bvnot $e8) (bvnot $e18))))) (bvand $e31 (ite (= #b00 $e23) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot $e8) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand (ite (= #b01 s0) #b1 #b0) (bvnot $e21))))))) (bvand $e32 (ite (= #b00 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e14) #b1 #b0) $e15)) $e18)) (bvnot (bvand (bvnot $e9) (bvnot $e18))))) (bvand $e31 (ite (= #b01 $e23) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot $e9) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand (ite (= #b01 s1) #b1 #b0) (bvnot $e21))))))) (bvand $e32 (ite (= #b01 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e14) #b1 #b0) $e15)) $e18)) (bvnot (bvand (bvnot $e10) (bvnot $e18))))) (bvand $e31 (ite (= #b10 $e23) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot $e10) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand (ite (= #b01 s2) #b1 #b0) (bvnot $e21))))))) (bvand $e32 (ite (= #b10 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e14) #b1 #b0) $e15)) $e18)) (bvnot (bvand (bvnot $e11) (bvnot $e18))))) (bvand $e31 (ite (= #b11 $e23) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_3124@dummy_resetX177) (bvand (bvnot (bvand (bvnot $e11) $e18)) (bvnot (bvand (bvnot $e18) (bvnot (bvand (ite (= #b01 s3) #b1 #b0) (bvnot $e21))))))) (bvand $e32 (ite (= #b11 $e24) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_3124@rstX130 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_3124@__ILA_I_instX178)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_3124@rstX130))) BTOR_3124@dummy_resetX178))) (bvnot (bvand BTOR_3124@rstX130 (bvnot (bvand (bvnot (bvand BTOR_3124@rstX130 (bvnot (ite (= (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@____auxvar0__recorder_init__X177 __auxvar0__recorder) $e27) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_3124@rstX130) (bvnot (ite (= (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e22)) ex_val reg0) $e27) #b1 #b0))))))))) (bvnot (bvand BTOR_3124@rstX130 (bvnot (bvand (bvnot (bvand BTOR_3124@rstX130 (bvnot (ite (= $e28 (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@____auxvar1__recorder_init__X177 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_3124@rstX130) (bvnot (ite (= (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e22)) ex_val reg1) $e28) #b1 #b0))))))))) (bvnot (bvand BTOR_3124@rstX130 (bvnot (bvand (bvnot (bvand BTOR_3124@rstX130 (bvnot (ite (= (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@____auxvar2__recorder_init__X177 __auxvar2__recorder) $e29) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_3124@rstX130) (bvnot (ite (= (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e22)) ex_val reg2) $e29) #b1 #b0))))))))) (bvnot (bvand BTOR_3124@rstX130 (bvnot (bvand (bvnot (bvand BTOR_3124@rstX130 (bvnot (ite (= (ite (= #b1 BTOR_3124@rstX130) BTOR_3124@____auxvar3__recorder_init__X177 __auxvar3__recorder) $e30) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_3124@rstX130) (bvnot (ite (= (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e22)) ex_val reg3) $e30) #b1 #b0)))))))))))))))))))))))))))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))) (let (($e3 ((_ extract 1 0) inst_id))) (let (($e4 ((_ extract 1 0) inst))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand $e2 (ite (= #b00 $e3) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand v0 (ite (= #b00 $e4) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand v0 (ite (= #b01 $e4) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand $e2 (ite (= #b01 $e3) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand v0 (ite (= #b10 $e4) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand $e2 (ite (= #b10 $e3) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand v0 (ite (= #b11 $e4) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand $e2 (ite (= #b11 $e3) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_10754@dummy_resetX357)))))))
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot (bvand v0 BTOR_10754@__VLG_I_stallwbX357))))))))@0
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot (bvand v0 BTOR_10754@__VLG_I_stallwbX357))))))))
A15: (bvnot (bvand v0 (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot (bvand v0 BTOR_10754@__VLG_I_stallwbX357)))))@0
A15: (bvnot (bvand v0 (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot (bvand v0 BTOR_10754@__VLG_I_stallwbX357)))))
A16: (bvand v0 (bvnot BTOR_10754@__VLG_I_stallwbX357))@0
A16: (bvand v0 (bvnot BTOR_10754@__VLG_I_stallwbX357))
A17: (bvand (bvnot BTOR_10754@dummy_resetX357) (bvnot (bvand v0 (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot (bvand v0 BTOR_10754@__VLG_I_stallwbX357))))))@0
A17: (bvand (bvnot BTOR_10754@dummy_resetX357) (bvnot (bvand v0 (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot (bvand v0 BTOR_10754@__VLG_I_stallwbX357))))))
A18: ts.asmpt @1
A18: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 (= #b01 rd2))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (= #b10 $e9))) (let (($e11 (= #b01 $e9))) (let (($e12 (= #b11 $e9))) (let (($e13 (and (not $e11) (not $e10) (not $e12)))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (= #b01 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e10 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 (ite $e11 (bvadd $e26 $e33) (ite $e10 $e18 (ite $e12 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e36 (bvand v0 BTOR_10754@__VLG_I_stallwbX357))) (let (($e37 (bvand (bvnot BTOR_10754@__VLG_I_stallexX357) (bvnot $e36)))) (let (($e38 (bvand v0 (bvnot $e37)))) (let (($e39 (bvand RTL_if_id_valid (bvnot $e38)))) (let (($e40 (bvand v0 $e37))) (let (($e41 (bvand v0 (bvnot BTOR_10754@__VLG_I_stallwbX357)))) (let (($e42 (bvand (bvnot (ite $e13 #b1 #b0)) $e41))) (let (($e43 (ite (= #b1 (bvand (bvnot BTOR_10754@dummy_resetX357) $e39)) $e4 $e34))) (let (($e44 (ite (= #b1 (bvand (bvnot BTOR_10754@dummy_resetX357) $e40)) $e34 $e14))) (let (($e45 (bvand (bvnot BTOR_10754@dummy_resetX357) (bvnot (bvand (bvnot $e36) (bvnot $e40)))))) (let (($e46 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e39)) (bvand (bvnot BTOR_10754@dummy_resetX357) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e38))))))) (let (($e47 (bvand $e45 (bvnot (bvand (ite $e13 #b1 #b0) (bvnot $e40)))))) (let (($e48 (bvand $e40 (bvand $e45 (bvnot BTOR_10754@__VLG_I_stallwbX358))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (ite (= #b00 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b00 $e44) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b00 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b01 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (ite (= #b01 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b01 $e44) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b10 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (ite (= #b10 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b10 $e44) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b11 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_10754@dummy_resetX357) (bvand (bvnot (bvand (bvnot (ite (= #b11 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b11 $e44) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_10754@dummy_resetX358))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e15 #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e16 (not $e15)) #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite (and $e7 (not $e6)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e17 (not $e16) (not $e15)) #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite (and $e8 (not $e7) (not $e6)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 $e14) (not $e17) (not $e16) (not $e15)) #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e8) (not $e7) (not $e6)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))
A19: ts.asmpt @0
A19: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e2) #b1 #b0) $e3)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e2) #b1 #b0) $e3)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_31384@dummy_resetX551))))))
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot BTOR_31384@__VLG_I_stallexX551)) (bvand (bvnot BTOR_31384@rstX423) (bvnot BTOR_31384@dummy_resetX551)))@0
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot BTOR_31384@__VLG_I_stallexX551)) (bvand (bvnot BTOR_31384@rstX423) (bvnot BTOR_31384@dummy_resetX551)))
A21: ts.asmpt @1
A21: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 (= #b01 rd2))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (= #b10 $e9))) (let (($e11 (= #b01 $e9))) (let (($e12 (= #b11 $e9))) (let (($e13 (and (not $e11) (not $e10) (not $e12)))) (let (($e14 (bvand v0 (bvnot (ite $e13 #b1 #b0))))) (let (($e15 ((_ extract 1 0) inst_id))) (let (($e16 (= #b00 $e15))) (let (($e17 (= #b01 $e15))) (let (($e18 (= #b10 $e15))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e10 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 (ite $e11 (bvadd $e27 $e34) (ite $e10 $e19 (ite $e12 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e37 (ite (= #b1 (bvand $e14 (ite (and $e18 (not $e17) (not $e16)) #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite (and $e8 (not $e7) (not $e6)) #b1 #b0))) ex_val reg2)))) (let (($e38 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e39 (ite (= #b1 (bvand $e14 (ite (and $e17 (not $e16)) #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite (and $e7 (not $e6)) #b1 #b0))) ex_val reg1)))) (let (($e40 (ite (= #b1 (bvand $e14 (ite (and (= #b11 $e15) (not $e18) (not $e17) (not $e16)) #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e8) (not $e7) (not $e6)) #b1 #b0))) ex_val reg3)))) (let (($e41 (ite (= #b1 (bvand $e14 (ite $e16 #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0)))) (let (($e42 (bvand (ite $e2 #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (let (($e43 (bvand (bvnot $e38) (bvnot $e42)))) (let (($e44 (bvand (bvnot $e38) (bvnot BTOR_31384@__VLG_I_stallexX551)))) (let (($e45 (bvand (bvnot $e38) BTOR_31384@__VLG_I_stallexX551))) (let (($e46 (bvand RTL_if_id_valid (bvnot $e45)))) (let (($e47 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@____auxvar0__recorder_init__X551 __auxvar0__recorder))) (let (($e48 (bvand (bvnot BTOR_31384@dummy_resetX551) $e44))) (let (($e49 (ite (= #b1 (bvand (bvnot BTOR_31384@dummy_resetX551) $e46)) $e4 $e35))) (let (($e50 (ite (= #b1 $e48) $e35 $e15))) (let (($e51 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@____auxvar2__recorder_init__X551 __auxvar2__recorder))) (let (($e52 (bvand (bvnot BTOR_31384@dummy_resetX551) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e45)))))) (let (($e53 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@____auxvar3__recorder_init__X551 __auxvar3__recorder))) (let (($e54 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@ILA_r0_randinitX551 ILA_r0))) (let (($e55 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@ILA_r1_randinitX551 ILA_r1))) (let (($e56 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@ILA_r2_randinitX551 ILA_r2))) (let (($e57 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@ILA_r3_randinitX551 ILA_r3))) (let (($e58 (ite (= #b1 BTOR_31384@rstX423) BTOR_31384@____auxvar1__recorder_init__X551 __auxvar1__recorder))) (let (($e59 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e46)) (bvnot (bvand $e42 (bvnot $e46)))) $e52))) (let (($e60 (bvand $e48 (bvand (bvnot (bvand $e42 $e44)) (bvnot (bvand (ite $e13 #b1 #b0) (bvnot $e44))))))) (let (($e61 (bvand (bvnot __STARTED__) (bvnot BTOR_31384@rstX423)))) (let (($e62 (bvand (bvand (bvnot BTOR_31384@rstX423) $e44) (bvand $e48 (bvnot BTOR_31384@__VLG_I_stallwbX552))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_31384@rstX423 (bvnot (bvand BTOR_31384@__VLG_I_inst_validX552 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_31384@__VLG_I_inst_validX551 (bvnot (bvand RTL_if_id_valid $e45)))) (bvnot (bvand $e45 (bvand RTL_if_id_valid (bvnot BTOR_31384@dummy_resetX551)))))) (bvand $e52 (bvnot (bvand (bvnot BTOR_31384@__VLG_I_stallexX552) (bvnot (bvand $e48 BTOR_31384@__VLG_I_stallwbX552))))))))))) (bvnot (bvand BTOR_31384@rstX423 (bvnot (ite (= BTOR_31384@__VLG_I_instX552 BTOR_31384@__ILA_I_instX552) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b00 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b00 $e50) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b01 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b01 $e50) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b10 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b10 $e50) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b11 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_31384@dummy_resetX551) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b11 $e50) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_31384@rstX423 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_31384@__ILA_I_instX552)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_31384@rstX423))) BTOR_31384@dummy_resetX552))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_31384@rstX423))) (bvnot $e61)) $e62) (bvnot (ite (= $e41 $e47) #b1 #b0))))) (bvnot (bvand (bvand $e62 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_31384@rstX423))) (bvnot $e61))) (bvnot (ite (= $e39 $e58) #b1 #b0))))) (bvnot (bvand (bvand $e62 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_31384@rstX423))) (bvnot $e61))) (bvnot (ite (= $e37 $e51) #b1 #b0))))) (bvnot (bvand (bvand $e62 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_31384@rstX423))) (bvnot $e61))) (bvnot (ite (= $e40 $e53) #b1 #b0))))) (bvnot (bvand BTOR_31384@rstX423 (bvnot (bvand (bvnot (bvand BTOR_31384@rstX423 (bvnot (ite (= $e47 $e54) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_31384@rstX423) (bvnot (ite (= $e41 $e54) #b1 #b0))))))))) (bvnot (bvand BTOR_31384@rstX423 (bvnot (bvand (bvnot (bvand BTOR_31384@rstX423 (bvnot (ite (= $e55 $e58) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_31384@rstX423) (bvnot (ite (= $e39 $e55) #b1 #b0))))))))) (bvnot (bvand BTOR_31384@rstX423 (bvnot (bvand (bvnot (bvand BTOR_31384@rstX423 (bvnot (ite (= $e51 $e56) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_31384@rstX423) (bvnot (ite (= $e37 $e56) #b1 #b0))))))))) (bvnot (bvand BTOR_31384@rstX423 (bvnot (bvand (bvnot (bvand BTOR_31384@rstX423 (bvnot (ite (= $e53 $e57) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_31384@rstX423) (bvnot (ite (= $e40 $e57) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (and (= #b00 $e10) (not $e9)))) (let (($e32 (and (= #b01 $e10) (not $e9)))) (let (($e33 (and (= #b10 $e10) (not $e9)))) (let (($e34 (and (= #b11 $e10) (not $e9)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e46 (bvand (concat (ite $e31 #b1 #b0) (bvnot v2)) (concat (ite $e31 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e47 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e48 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e49 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e49 (ite $e37 $e48 (ite $e38 $e47 (ite $e39 $e46 #b00))))) (ite $e36 $e29 (ite $e37 $e27 (ite $e38 $e28 (ite $e39 $e30 #b00000000)))) $e45) (ite (= #b00 (ite $e41 $e49 (ite $e42 $e48 (ite $e43 $e47 (ite $e44 $e46 #b00))))) (ite $e41 $e29 (ite $e42 $e27 (ite $e43 $e28 (ite $e44 $e30 #b00000000)))) $e45)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))) $e5)))))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))))) (ite (= inst BTOR_46@__ILA_I_instX21) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_46@__ILA_I_instX21)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_46@dummy_resetX21)))))))))
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))))@0
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))))
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))@0
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot (bvand v2 BTOR_46@__VLG_I_stallwbX21)))))
A5: (bvnot (bvand v2 (bvnot BTOR_46@__VLG_I_stallwbX21)))@0
A5: (bvnot (bvand v2 (bvnot BTOR_46@__VLG_I_stallwbX21)))
A6: (bvnot BTOR_46@dummy_resetX21)@0
A6: (bvnot BTOR_46@dummy_resetX21)
A7: ts.asmpt @1
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_46@__VLG_I_stallwbX21))) (let (($e7 (bvand (bvnot BTOR_46@__VLG_I_stallexX21) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_46@__VLG_I_stallwbX21)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_46@dummy_resetX21) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_46@dummy_resetX21) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_46@dummy_resetX21) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_46@dummy_resetX21) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_46@dummy_resetX21) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_46@dummy_resetX22))))))))))))))))))
A8: ts.asmpt @0
A8: (let (($e1 (bvand w2 v2))) (bvand (ite (and (= (bvand $e1 (ite (= #b01 rd2) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (= (bvand $e1 (ite (= #b00 rd2) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) (= (bvand $e1 (ite (= #b10 rd2) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (= (bvand $e1 (ite (= #b11 rd2) #b1 #b0)) (ite (= #b01 s3) #b1 #b0))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1042@dummy_resetX88))))
A9: (bvnot (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot (bvand v2 BTOR_1042@__VLG_I_stallwbX88)))))@0
A9: (bvnot (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot (bvand v2 BTOR_1042@__VLG_I_stallwbX88)))))
A10: (bvnot (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot (bvand v2 BTOR_1042@__VLG_I_stallwbX88)))))@0
A10: (bvnot (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot (bvand v2 BTOR_1042@__VLG_I_stallwbX88)))))
A11: (bvand v2 (bvnot BTOR_1042@__VLG_I_stallwbX88))@0
A11: (bvand v2 (bvnot BTOR_1042@__VLG_I_stallwbX88))
A12: (bvand (bvnot BTOR_1042@dummy_resetX88) (bvnot (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot (bvand v2 BTOR_1042@__VLG_I_stallwbX88))))))@0
A12: (bvand (bvnot BTOR_1042@dummy_resetX88) (bvnot (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot (bvand v2 BTOR_1042@__VLG_I_stallwbX88))))))
A13: ts.asmpt @1
A13: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand v0 (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) inst_id))) (let (($e5 (bvand $e3 (ite (= #b00 $e4) #b1 #b0)))) (let (($e6 (bvand $e3 (ite (= #b01 $e4) #b1 #b0)))) (let (($e7 (bvand $e3 (ite (= #b10 $e4) #b1 #b0)))) (let (($e8 (bvand $e3 (ite (= #b11 $e4) #b1 #b0)))) (let (($e9 ((_ extract 7 6) inst))) (let (($e10 (and (not (= #b01 $e9)) (not (= #b10 $e9)) (not (= #b11 $e9))))) (let (($e11 ((_ extract 1 0) inst))) (let (($e12 (bvand v0 (bvnot (ite $e10 #b1 #b0))))) (let (($e13 (bvand v2 BTOR_1042@__VLG_I_stallwbX88))) (let (($e14 (bvand v0 (bvand (bvnot BTOR_1042@__VLG_I_stallexX88) (bvnot $e13))))) (let (($e15 (bvand v2 (bvnot BTOR_1042@__VLG_I_stallwbX88)))) (let (($e16 (bvand (bvnot BTOR_1042@dummy_resetX88) $e14))) (let (($e17 (ite (= #b1 $e16) $e11 $e4))) (let (($e18 (ite (= #b1 $e16) $e4 rd2))) (let (($e19 (bvand (bvand (bvnot (bvand (ite $e10 #b1 #b0) $e14)) (bvnot (bvand (ite $e2 #b1 #b0) (bvnot $e14)))) (bvand v0 (bvnot BTOR_1042@dummy_resetX88))))) (let (($e20 (bvand (bvand (bvnot BTOR_1042@dummy_resetX88) (bvnot (bvand (bvnot $e13) (bvnot $e14)))) (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e14)) (bvnot (bvand (bvnot w2) (bvnot $e14))))))) (bvand (ite (and (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot $e5) $e14)) (bvnot (bvand (bvnot $e14) (bvnot (bvand (ite (= #b01 s0) #b1 #b0) (bvnot $e15))))))) (bvand $e20 (ite (= #b00 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e11) #b1 #b0) $e12)) $e14)) (bvnot (bvand (bvnot $e5) (bvnot $e14))))) (bvand $e19 (ite (= #b00 $e17) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e11) #b1 #b0) $e12)) $e14)) (bvnot (bvand (bvnot $e6) (bvnot $e14))))) (bvand $e19 (ite (= #b01 $e17) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot $e6) $e14)) (bvnot (bvand (bvnot $e14) (bvnot (bvand (ite (= #b01 s1) #b1 #b0) (bvnot $e15))))))) (bvand $e20 (ite (= #b01 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e11) #b1 #b0) $e12)) $e14)) (bvnot (bvand (bvnot $e7) (bvnot $e14))))) (bvand $e19 (ite (= #b10 $e17) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot $e7) $e14)) (bvnot (bvand (bvnot $e14) (bvnot (bvand (ite (= #b01 s2) #b1 #b0) (bvnot $e15))))))) (bvand $e20 (ite (= #b10 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e11) #b1 #b0) $e12)) $e14)) (bvnot (bvand (bvnot $e8) (bvnot $e14))))) (bvand $e19 (ite (= #b11 $e17) #b1 #b0))) (= (bvand (bvnot BTOR_1042@dummy_resetX88) (bvand (bvnot (bvand (bvnot $e8) $e14)) (bvnot (bvand (bvnot $e14) (bvnot (bvand (ite (= #b01 s3) #b1 #b0) (bvnot $e15))))))) (bvand $e20 (ite (= #b11 $e18) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1042@dummy_resetX89)))))))))))))))))))))))
A14: ts.asmpt @0
A14: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))) (let (($e3 ((_ extract 1 0) inst_id))) (let (($e4 (bvand $e2 (ite (= #b00 $e3) #b1 #b0)))) (let (($e5 (bvand $e2 (ite (= #b01 $e3) #b1 #b0)))) (let (($e6 (bvand $e2 (ite (= #b10 $e3) #b1 #b0)))) (let (($e7 (bvand $e2 (ite (= #b11 $e3) #b1 #b0)))) (let (($e8 (bvand (concat $e5 (ite (= #b01 s1) #b1 #b0)) (concat $e5 (bvnot v2))))) (let (($e9 (bvand (concat $e6 (ite (= #b01 s2) #b1 #b0)) (concat $e6 (bvnot v2))))) (let (($e10 (bvand (concat $e7 (ite (= #b01 s3) #b1 #b0)) (concat $e7 (bvnot v2))))) (let (($e11 (bvand (concat $e4 (ite (= #b01 s0) #b1 #b0)) (concat $e4 (bvnot v2))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (ite (= $e4 ((_ extract 1 1) $e11)) #b1 #b0) (bvnot ((_ extract 0 0) $e11))) (ite (= $e5 ((_ extract 1 1) $e8)) #b1 #b0)) (bvnot ((_ extract 0 0) $e8))) (ite (= $e6 ((_ extract 1 1) $e9)) #b1 #b0)) (bvnot ((_ extract 0 0) $e9))) (ite (= $e7 ((_ extract 1 1) $e10)) #b1 #b0)) (bvnot ((_ extract 0 0) $e10))) (bvnot (bvand __RESETED__ BTOR_4176@dummy_resetX180))))))))))))))
A15: (bvand (bvand v0 (bvnot BTOR_4176@__VLG_I_stallexX180)) (bvand (bvnot BTOR_4176@rstX133) (bvnot BTOR_4176@dummy_resetX180)))@0
A15: (bvand (bvand v0 (bvnot BTOR_4176@__VLG_I_stallexX180)) (bvand (bvnot BTOR_4176@rstX133) (bvnot BTOR_4176@dummy_resetX180)))
A16: ts.asmpt @1
A16: (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (and (not (= #b01 $e5)) (not (= #b10 $e5)) (not (= #b11 $e5))))) (let (($e7 (bvand v0 (bvnot (ite $e6 #b1 #b0))))) (let (($e8 ((_ extract 1 0) inst_id))) (let (($e9 (bvand $e7 (ite (= #b00 $e8) #b1 #b0)))) (let (($e10 (bvand $e7 (ite (= #b01 $e8) #b1 #b0)))) (let (($e11 (bvand $e7 (ite (= #b10 $e8) #b1 #b0)))) (let (($e12 (bvand $e7 (ite (= #b11 $e8) #b1 #b0)))) (let (($e13 ((_ extract 7 6) inst))) (let (($e14 (and (not (= #b01 $e13)) (not (= #b10 $e13)) (not (= #b11 $e13))))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 (bvand v0 (bvnot (ite $e14 #b1 #b0))))) (let (($e17 (bvand (concat $e10 (ite (= #b01 s1) #b1 #b0)) (concat $e10 (bvnot v2))))) (let (($e18 (bvand (concat $e11 (ite (= #b01 s2) #b1 #b0)) (concat $e11 (bvnot v2))))) (let (($e19 (bvand (concat $e12 (ite (= #b01 s3) #b1 #b0)) (concat $e12 (bvnot v2))))) (let (($e20 (bvand (concat $e9 (ite (= #b01 s0) #b1 #b0)) (concat $e9 (bvnot v2))))) (let (($e21 (bvand v0 (bvnot BTOR_4176@__VLG_I_stallexX180)))) (let (($e22 (bvand (bvnot BTOR_4176@dummy_resetX180) $e21))) (let (($e23 (bvand v0 BTOR_4176@__VLG_I_stallexX180))) (let (($e24 (ite (= #b1 $e22) $e15 $e8))) (let (($e25 (ite (= #b1 $e22) $e8 rd2))) (let (($e26 (bvand v0 (bvnot BTOR_4176@dummy_resetX180)))) (let (($e27 (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@ILA_r0_randinitX180 ILA_r0))) (let (($e28 (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@ILA_r1_randinitX180 ILA_r1))) (let (($e29 (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@ILA_r2_randinitX180 ILA_r2))) (let (($e30 (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@ILA_r3_randinitX180 ILA_r3))) (let (($e31 (bvand (bvand (bvnot (bvand (ite $e14 #b1 #b0) $e21)) (bvnot (bvand (ite $e6 #b1 #b0) (bvnot $e21)))) $e26))) (let (($e32 (bvand $e22 (bvand (bvnot (bvand (ite $e6 #b1 #b0) $e21)) (bvnot (bvand (bvnot w2) (bvnot $e21))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_4176@rstX133 (bvnot (bvand BTOR_4176@__VLG_I_inst_validX181 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_4176@__VLG_I_inst_validX180 (bvnot $e23))) (bvnot (bvand (bvnot BTOR_4176@dummy_resetX180) $e23)))) (bvand $e26 (bvnot (bvand (bvnot BTOR_4176@__VLG_I_stallexX181) (bvnot (bvand $e22 BTOR_4176@__VLG_I_stallwbX181))))))))))) (bvnot (bvand BTOR_4176@rstX133 (bvnot (ite (= BTOR_4176@__VLG_I_instX181 BTOR_4176@__ILA_I_instX181) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e15) #b1 #b0) $e16)) $e21)) (bvnot (bvand (bvnot ((_ extract 1 1) $e20)) (bvnot $e21))))) (bvand $e31 (ite (= #b00 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot $e9) $e21)) (bvnot (bvand (bvnot ((_ extract 0 0) $e20)) (bvnot $e21))))) (bvand $e32 (ite (= #b00 $e25) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e15) #b1 #b0) $e16)) $e21)) (bvnot (bvand (bvnot ((_ extract 1 1) $e17)) (bvnot $e21))))) (bvand $e31 (ite (= #b01 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot $e10) $e21)) (bvnot (bvand (bvnot ((_ extract 0 0) $e17)) (bvnot $e21))))) (bvand $e32 (ite (= #b01 $e25) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e15) #b1 #b0) $e16)) $e21)) (bvnot (bvand (bvnot ((_ extract 1 1) $e18)) (bvnot $e21))))) (bvand $e31 (ite (= #b10 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot $e11) $e21)) (bvnot (bvand (bvnot ((_ extract 0 0) $e18)) (bvnot $e21))))) (bvand $e32 (ite (= #b10 $e25) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e15) #b1 #b0) $e16)) $e21)) (bvnot (bvand (bvnot ((_ extract 1 1) $e19)) (bvnot $e21))))) (bvand $e31 (ite (= #b11 $e24) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_4176@dummy_resetX180) (bvand (bvnot (bvand (bvnot $e12) $e21)) (bvnot (bvand (bvnot ((_ extract 0 0) $e19)) (bvnot $e21))))) (bvand $e32 (ite (= #b11 $e25) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_4176@rstX133 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_4176@__ILA_I_instX181)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_4176@rstX133))) BTOR_4176@dummy_resetX181))) (bvnot (bvand BTOR_4176@rstX133 (bvnot (bvand (bvnot (bvand BTOR_4176@rstX133 (bvnot (ite (= (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@____auxvar0__recorder_init__X180 __auxvar0__recorder) $e27) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_4176@rstX133) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) $e27) #b1 #b0))))))))) (bvnot (bvand BTOR_4176@rstX133 (bvnot (bvand (bvnot (bvand BTOR_4176@rstX133 (bvnot (ite (= $e28 (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@____auxvar1__recorder_init__X180 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_4176@rstX133) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) $e28) #b1 #b0))))))))) (bvnot (bvand BTOR_4176@rstX133 (bvnot (bvand (bvnot (bvand BTOR_4176@rstX133 (bvnot (ite (= (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@____auxvar2__recorder_init__X180 __auxvar2__recorder) $e29) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_4176@rstX133) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) $e29) #b1 #b0))))))))) (bvnot (bvand BTOR_4176@rstX133 (bvnot (bvand (bvnot (bvand BTOR_4176@rstX133 (bvnot (ite (= (ite (= #b1 BTOR_4176@rstX133) BTOR_4176@____auxvar3__recorder_init__X180 __auxvar3__recorder) $e30) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_4176@rstX133) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) $e30) #b1 #b0)))))))))))))))))))))))))))))))))))))))))
A17: ts.asmpt @0
A17: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 1 0) inst_id))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 ((_ extract 1 0) inst))) (let (($e6 (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (let (($e7 (bvand v0 (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e5) #b1 #b0) $e6)) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e3) #b1 #b0) $e7))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_14022@dummy_resetX393))))))))))
A18: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot (bvand v0 BTOR_14022@__VLG_I_stallwbX393))))))))@0
A18: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot (bvand v0 BTOR_14022@__VLG_I_stallwbX393))))))))
A19: (bvnot (bvand v0 (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot (bvand v0 BTOR_14022@__VLG_I_stallwbX393)))))@0
A19: (bvnot (bvand v0 (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot (bvand v0 BTOR_14022@__VLG_I_stallwbX393)))))
A20: (bvand v0 (bvnot BTOR_14022@__VLG_I_stallwbX393))@0
A20: (bvand v0 (bvnot BTOR_14022@__VLG_I_stallwbX393))
A21: (bvand (bvnot BTOR_14022@dummy_resetX393) (bvnot (bvand v0 (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot (bvand v0 BTOR_14022@__VLG_I_stallwbX393))))))@0
A21: (bvand (bvnot BTOR_14022@dummy_resetX393) (bvnot (bvand v0 (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot (bvand v0 BTOR_14022@__VLG_I_stallwbX393))))))
A22: ts.asmpt @1
A22: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 (= #b01 rd2))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (= #b10 $e9))) (let (($e11 (= #b01 $e9))) (let (($e12 (= #b11 $e9))) (let (($e13 (and (not $e11) (not $e10) (not $e12)))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (= #b01 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e10 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 7 6) inst))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 (ite $e11 (bvadd $e26 $e33) (ite $e10 $e18 (ite $e12 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e37 (bvand (bvnot (bvand v0 (ite $e13 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e38 (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e34)) (not (= #b10 $e34)) (not (= #b11 $e34))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e13 #b1 #b0)))))) (let (($e39 (bvand v0 $e38))) (let (($e40 (bvand v0 BTOR_14022@__VLG_I_stallwbX393))) (let (($e41 (bvand (bvnot BTOR_14022@__VLG_I_stallexX393) (bvnot $e40)))) (let (($e42 (bvand v0 (bvnot $e41)))) (let (($e43 (bvand RTL_if_id_valid (bvnot $e42)))) (let (($e44 (bvand v0 $e41))) (let (($e45 (bvand v0 (bvnot BTOR_14022@__VLG_I_stallwbX393)))) (let (($e46 (bvand $e37 $e45))) (let (($e47 (ite (= #b1 (bvand (bvnot BTOR_14022@dummy_resetX393) $e43)) $e4 $e35))) (let (($e48 (ite (= #b1 (bvand (bvnot BTOR_14022@dummy_resetX393) $e44)) $e35 $e14))) (let (($e49 (bvand (bvnot BTOR_14022@dummy_resetX393) (bvnot (bvand (bvnot $e40) (bvnot $e44)))))) (let (($e50 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e43)) (bvnot (bvand (bvnot $e38) (bvnot $e43)))) (bvand (bvnot BTOR_14022@dummy_resetX393) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e42))))))) (let (($e51 (bvand $e49 (bvand (bvnot (bvand (bvnot $e38) $e44)) (bvnot (bvand (bvnot $e37) (bvnot $e44))))))) (let (($e52 (bvand $e44 (bvand $e49 (bvnot BTOR_14022@__VLG_I_stallwbX394))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e35) #b1 #b0) $e39)) $e44)) (bvnot (bvand (bvnot $e44) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e45))))))) (bvand $e51 (ite (= #b00 $e48) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e43)) (bvnot (bvand (bvnot $e43) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e44))))))) (bvand $e50 (ite (= #b00 $e47) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e43)) (bvnot (bvand (bvnot $e43) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e44))))))) (bvand $e50 (ite (= #b01 $e47) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e35) #b1 #b0) $e39)) $e44)) (bvnot (bvand (bvnot $e44) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e45))))))) (bvand $e51 (ite (= #b01 $e48) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e43)) (bvnot (bvand (bvnot $e43) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e44))))))) (bvand $e50 (ite (= #b10 $e47) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e35) #b1 #b0) $e39)) $e44)) (bvnot (bvand (bvnot $e44) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e45))))))) (bvand $e51 (ite (= #b10 $e48) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e43)) (bvnot (bvand (bvnot $e43) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e44))))))) (bvand $e50 (ite (= #b11 $e47) #b1 #b0))) (= (bvand (bvnot BTOR_14022@dummy_resetX393) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e35) #b1 #b0) $e39)) $e44)) (bvnot (bvand (bvnot $e44) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e45))))))) (bvand $e51 (ite (= #b11 $e48) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_14022@dummy_resetX394))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e52) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e15 #b1 #b0) $e46)) $e36 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e52) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e16 (not $e15)) #b1 #b0) $e46)) $e36 (ite (= #b1 (bvand $e5 (ite (and $e7 (not $e6)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e52) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e17 (not $e16) (not $e15)) #b1 #b0) $e46)) $e36 (ite (= #b1 (bvand $e5 (ite (and $e8 (not $e7) (not $e6)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e52) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 $e14) (not $e17) (not $e16) (not $e15)) #b1 #b0) $e46)) $e36 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e8) (not $e7) (not $e6)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
A23: ts.asmpt @0
A23: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 ((_ extract 1 0) inst))) (let (($e5 (bvand RTL_if_id_valid (bvnot v0)))) (let (($e6 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e5)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))))) (bvnot $e5))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e4) #b1 #b0) $e6)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e4) #b1 #b0) $e6)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e4) #b1 #b0) $e6)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e4) #b1 #b0) $e6)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_33488@dummy_resetX557)))))))))
A24: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot BTOR_33488@__VLG_I_stallexX557)) (bvand (bvnot BTOR_33488@rstX429) (bvnot BTOR_33488@dummy_resetX557)))@0
A24: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot BTOR_33488@__VLG_I_stallexX557)) (bvand (bvnot BTOR_33488@rstX429) (bvnot BTOR_33488@dummy_resetX557)))
A25: ts.asmpt @1
A25: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 (= #b01 rd2))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (= #b10 $e9))) (let (($e11 (= #b01 $e9))) (let (($e12 (= #b11 $e9))) (let (($e13 (and (not $e11) (not $e10) (not $e12)))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (= #b01 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e10 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 7 6) inst))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 (ite $e11 (bvadd $e26 $e33) (ite $e10 $e18 (ite $e12 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e37 (bvand (bvnot (bvand v0 (ite $e13 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e38 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e39 (bvand RTL_if_id_valid (bvnot v0)))) (let (($e40 (bvand v0 $e37))) (let (($e41 (ite (= #b1 (bvand (ite (and $e17 (not $e16) (not $e15)) #b1 #b0) $e40)) $e36 (ite (= #b1 (bvand $e5 (ite (and $e8 (not $e7) (not $e6)) #b1 #b0))) ex_val reg2)))) (let (($e42 (ite (= #b1 (bvand (ite (and $e16 (not $e15)) #b1 #b0) $e40)) $e36 (ite (= #b1 (bvand $e5 (ite (and $e7 (not $e6)) #b1 #b0))) ex_val reg1)))) (let (($e43 (ite (= #b1 (bvand (ite (and (= #b11 $e14) (not $e17) (not $e16) (not $e15)) #b1 #b0) $e40)) $e36 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e8) (not $e7) (not $e6)) #b1 #b0))) ex_val reg3)))) (let (($e44 (ite (= #b1 (bvand (ite $e15 #b1 #b0) $e40)) $e36 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0)))) (let (($e45 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e39)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e34)) (not (= #b10 $e34)) (not (= #b11 $e34))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e13 #b1 #b0))))) (bvnot $e39)))))) (let (($e46 (bvand (bvnot $e38) $e45))) (let (($e47 (bvand (bvnot $e38) (bvnot BTOR_33488@__VLG_I_stallexX557)))) (let (($e48 (bvand (bvnot $e38) BTOR_33488@__VLG_I_stallexX557))) (let (($e49 (bvand RTL_if_id_valid (bvnot $e48)))) (let (($e50 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@____auxvar0__recorder_init__X557 __auxvar0__recorder))) (let (($e51 (bvand (bvnot BTOR_33488@dummy_resetX557) $e47))) (let (($e52 (ite (= #b1 (bvand (bvnot BTOR_33488@dummy_resetX557) $e49)) $e4 $e35))) (let (($e53 (ite (= #b1 $e51) $e35 $e14))) (let (($e54 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@____auxvar2__recorder_init__X557 __auxvar2__recorder))) (let (($e55 (bvand (bvnot BTOR_33488@dummy_resetX557) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e48)))))) (let (($e56 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@____auxvar3__recorder_init__X557 __auxvar3__recorder))) (let (($e57 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@ILA_r0_randinitX557 ILA_r0))) (let (($e58 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@ILA_r1_randinitX557 ILA_r1))) (let (($e59 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@ILA_r2_randinitX557 ILA_r2))) (let (($e60 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@ILA_r3_randinitX557 ILA_r3))) (let (($e61 (ite (= #b1 BTOR_33488@rstX429) BTOR_33488@____auxvar1__recorder_init__X557 __auxvar1__recorder))) (let (($e62 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e49)) (bvnot (bvand (bvnot $e45) (bvnot $e49)))) $e55))) (let (($e63 (bvand $e51 (bvand (bvnot (bvand (bvnot $e45) $e47)) (bvnot (bvand (bvnot $e37) (bvnot $e47))))))) (let (($e64 (bvand (bvnot __STARTED__) (bvnot BTOR_33488@rstX429)))) (let (($e65 (bvand (bvand (bvnot BTOR_33488@rstX429) $e47) (bvand $e51 (bvnot BTOR_33488@__VLG_I_stallwbX558))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_33488@rstX429 (bvnot (bvand BTOR_33488@__VLG_I_inst_validX558 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_33488@__VLG_I_inst_validX557 (bvnot (bvand RTL_if_id_valid $e48)))) (bvnot (bvand $e48 (bvand RTL_if_id_valid (bvnot BTOR_33488@dummy_resetX557)))))) (bvand $e55 (bvnot (bvand (bvnot BTOR_33488@__VLG_I_stallexX558) (bvnot (bvand $e51 BTOR_33488@__VLG_I_stallwbX558))))))))))) (bvnot (bvand BTOR_33488@rstX429 (bvnot (ite (= BTOR_33488@__VLG_I_instX558 BTOR_33488@__ILA_I_instX558) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e49)) (bvnot (bvand (bvnot $e49) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e47))))))) (bvand $e62 (ite (= #b00 $e52) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e35) #b1 #b0) $e46)) $e47)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e47))))) (bvand $e63 (ite (= #b00 $e53) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e49)) (bvnot (bvand (bvnot $e49) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e47))))))) (bvand $e62 (ite (= #b01 $e52) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e35) #b1 #b0) $e46)) $e47)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e47))))) (bvand $e63 (ite (= #b01 $e53) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e49)) (bvnot (bvand (bvnot $e49) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e47))))))) (bvand $e62 (ite (= #b10 $e52) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e35) #b1 #b0) $e46)) $e47)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e47))))) (bvand $e63 (ite (= #b10 $e53) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e49)) (bvnot (bvand (bvnot $e49) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e47))))))) (bvand $e62 (ite (= #b11 $e52) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_33488@dummy_resetX557) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e35) #b1 #b0) $e46)) $e47)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e47))))) (bvand $e63 (ite (= #b11 $e53) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_33488@rstX429 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_33488@__ILA_I_instX558)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_33488@rstX429))) BTOR_33488@dummy_resetX558))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_33488@rstX429))) (bvnot $e64)) $e65) (bvnot (ite (= $e44 $e50) #b1 #b0))))) (bvnot (bvand (bvand $e65 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_33488@rstX429))) (bvnot $e64))) (bvnot (ite (= $e42 $e61) #b1 #b0))))) (bvnot (bvand (bvand $e65 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_33488@rstX429))) (bvnot $e64))) (bvnot (ite (= $e41 $e54) #b1 #b0))))) (bvnot (bvand (bvand $e65 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_33488@rstX429))) (bvnot $e64))) (bvnot (ite (= $e43 $e56) #b1 #b0))))) (bvnot (bvand BTOR_33488@rstX429 (bvnot (bvand (bvnot (bvand BTOR_33488@rstX429 (bvnot (ite (= $e50 $e57) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_33488@rstX429) (bvnot (ite (= $e44 $e57) #b1 #b0))))))))) (bvnot (bvand BTOR_33488@rstX429 (bvnot (bvand (bvnot (bvand BTOR_33488@rstX429 (bvnot (ite (= $e58 $e61) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_33488@rstX429) (bvnot (ite (= $e42 $e58) #b1 #b0))))))))) (bvnot (bvand BTOR_33488@rstX429 (bvnot (bvand (bvnot (bvand BTOR_33488@rstX429 (bvnot (ite (= $e54 $e59) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_33488@rstX429) (bvnot (ite (= $e41 $e59) #b1 #b0))))))))) (bvnot (bvand BTOR_33488@rstX429 (bvnot (bvand (bvnot (bvand BTOR_33488@rstX429 (bvnot (ite (= $e56 $e60) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_33488@rstX429) (bvnot (ite (= $e43 $e60) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))) $e5)))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat (ite (and (= #b00 $e10) (not $e9)) #b1 #b0) v1))) (let (($e43 (concat (ite (and (= #b01 $e10) (not $e9)) #b1 #b0) v1))) (let (($e44 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e45 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (bvadd (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e29 (ite $e38 $e27 (ite $e39 $e28 (ite $e40 $e30 #b00000000)))) $e41) (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e29 (ite $e33 $e27 (ite $e34 $e28 (ite $e35 $e30 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_58@__VLG_I_stallexX23) (bvnot (bvand v2 BTOR_58@__VLG_I_stallwbX23)))))))) (ite (= inst BTOR_58@__ILA_I_instX23) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_58@__ILA_I_instX23)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_58@dummy_resetX23)))))))))
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_58@__VLG_I_stallexX23) (bvnot (bvand v2 BTOR_58@__VLG_I_stallwbX23)))))))@0
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_58@__VLG_I_stallexX23) (bvnot (bvand v2 BTOR_58@__VLG_I_stallwbX23)))))))
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_58@__VLG_I_stallexX23) (bvnot (bvand v2 BTOR_58@__VLG_I_stallwbX23)))))@0
A4: (bvnot (bvand v1 (bvand (bvnot BTOR_58@__VLG_I_stallexX23) (bvnot (bvand v2 BTOR_58@__VLG_I_stallwbX23)))))
A5: (bvand v2 (bvnot BTOR_58@__VLG_I_stallwbX23))@0
A5: (bvand v2 (bvnot BTOR_58@__VLG_I_stallwbX23))
A6: (bvnot BTOR_58@dummy_resetX23)@0
A6: (bvnot BTOR_58@dummy_resetX23)
A7: ts.asmpt @1
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_58@__VLG_I_stallwbX23))) (let (($e7 (bvand (bvnot BTOR_58@__VLG_I_stallexX23) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_58@__VLG_I_stallwbX23)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_58@dummy_resetX23) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_58@dummy_resetX23) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_58@dummy_resetX23) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_58@dummy_resetX23) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_58@dummy_resetX23) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_58@dummy_resetX24))))))))))))))))))
A8: ts.asmpt @0
A8: (let (($e1 (bvand w2 v1))) (bvand (ite (and (= v1 (bvand (ite (= #b01 rd2) #b1 #b0) $e1)) (= v1 (bvand (ite (= #b00 rd2) #b1 #b0) $e1)) (= v1 (bvand (ite (= #b10 rd2) #b1 #b0) $e1)) (= v1 (bvand (ite (= #b11 rd2) #b1 #b0) $e1))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1390@dummy_resetX107))))
A9: (bvand (bvnot (bvand v0 (bvand (bvnot BTOR_1390@__VLG_I_stallexX107) (bvnot (bvand v1 BTOR_1390@__VLG_I_stallwbX107))))) (bvand (bvnot BTOR_1390@rstX77) (bvnot BTOR_1390@dummy_resetX107)))@0
A9: (bvand (bvnot (bvand v0 (bvand (bvnot BTOR_1390@__VLG_I_stallexX107) (bvnot (bvand v1 BTOR_1390@__VLG_I_stallwbX107))))) (bvand (bvnot BTOR_1390@rstX77) (bvnot BTOR_1390@dummy_resetX107)))
A10: ts.asmpt @0
A10: (let (($e1 (bvand w2 v1))) (bvand (ite (and (= v1 (bvand (ite (= #b01 rd2) #b1 #b0) $e1)) (= v1 (bvand (ite (= #b00 rd2) #b1 #b0) $e1)) (= v1 (bvand (ite (= #b10 rd2) #b1 #b0) $e1)) (= v1 (bvand (ite (= #b11 rd2) #b1 #b0) $e1))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_5224@dummy_resetX183))))
A11: (bvand (bvand v0 (bvand (bvnot BTOR_5224@__VLG_I_stallexX183) (bvnot (bvand v1 BTOR_5224@__VLG_I_stallwbX183)))) (bvand (bvnot BTOR_5224@rstX136) (bvnot BTOR_5224@dummy_resetX183)))@0
A11: (bvand (bvand v0 (bvand (bvnot BTOR_5224@__VLG_I_stallexX183) (bvnot (bvand v1 BTOR_5224@__VLG_I_stallwbX183)))) (bvand (bvnot BTOR_5224@rstX136) (bvnot BTOR_5224@dummy_resetX183)))
A12: ts.asmpt @1
A12: (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (and (not (= #b01 $e5)) (not (= #b10 $e5)) (not (= #b11 $e5))))) (let (($e7 (bvand v0 (bvnot (ite $e6 #b1 #b0))))) (let (($e8 ((_ extract 1 0) inst_id))) (let (($e9 (bvand $e7 (ite (= #b00 $e8) #b1 #b0)))) (let (($e10 (bvand $e7 (ite (= #b01 $e8) #b1 #b0)))) (let (($e11 (bvand $e7 (ite (= #b10 $e8) #b1 #b0)))) (let (($e12 (bvand $e7 (ite (= #b11 $e8) #b1 #b0)))) (let (($e13 (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)))) (let (($e14 (and $e4 (not $e3) (not $e2)))) (let (($e15 (and $e3 (not $e2)))) (let (($e16 ((_ extract 7 6) inst))) (let (($e17 (and (not (= #b01 $e16)) (not (= #b10 $e16)) (not (= #b11 $e16))))) (let (($e18 ((_ extract 1 0) inst))) (let (($e19 (bvand v0 (bvnot (ite $e17 #b1 #b0))))) (let (($e20 (bvand v1 BTOR_5224@__VLG_I_stallwbX183))) (let (($e21 (bvand (bvnot BTOR_5224@__VLG_I_stallexX183) (bvnot $e20)))) (let (($e22 (bvand v0 $e21))) (let (($e23 (bvand (bvnot BTOR_5224@dummy_resetX183) $e22))) (let (($e24 (bvand v0 (bvnot $e21)))) (let (($e25 (bvand w2 (bvand v1 (bvnot BTOR_5224@__VLG_I_stallwbX183))))) (let (($e26 (ite (= #b1 $e23) $e18 $e8))) (let (($e27 (ite (= #b1 $e23) $e8 rd2))) (let (($e28 (bvand (bvnot BTOR_5224@dummy_resetX183) (bvnot (bvand (bvnot $e20) (bvnot $e22)))))) (let (($e29 (bvand v0 (bvnot BTOR_5224@dummy_resetX183)))) (let (($e30 (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@ILA_r0_randinitX183 ILA_r0))) (let (($e31 (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@ILA_r1_randinitX183 ILA_r1))) (let (($e32 (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@ILA_r2_randinitX183 ILA_r2))) (let (($e33 (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@ILA_r3_randinitX183 ILA_r3))) (let (($e34 (bvand (bvand (bvnot (bvand (ite $e17 #b1 #b0) $e22)) (bvnot (bvand (ite $e6 #b1 #b0) (bvnot $e22)))) $e29))) (let (($e35 (bvand $e28 (bvand (bvnot (bvand (ite $e6 #b1 #b0) $e22)) (bvnot (bvand (bvnot w2) (bvnot $e22))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_5224@rstX136 (bvnot (bvand BTOR_5224@__VLG_I_inst_validX184 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_5224@__VLG_I_inst_validX183 (bvnot $e24))) (bvnot (bvand (bvnot BTOR_5224@dummy_resetX183) $e24)))) (bvand $e29 (bvnot (bvand (bvnot BTOR_5224@__VLG_I_stallexX184) (bvnot (bvand $e28 BTOR_5224@__VLG_I_stallwbX184))))))))))) (bvnot (bvand BTOR_5224@rstX136 (bvnot (ite (= BTOR_5224@__VLG_I_instX184 BTOR_5224@__ILA_I_instX184) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_5224@dummy_resetX183) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e18) #b1 #b0) $e19)) $e22)) (bvnot (bvand (bvnot $e9) (bvnot $e22))))) (bvand $e34 (ite (= #b00 $e26) #b1 #b0))) #b1 #b0)) (ite (= (bvand $e35 (ite (= #b00 $e27) #b1 #b0)) (bvand (bvnot (bvand (bvnot $e9) $e22)) $e28)) #b1 #b0)) (ite (= (bvand (bvnot BTOR_5224@dummy_resetX183) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e18) #b1 #b0) $e19)) $e22)) (bvnot (bvand (bvnot $e10) (bvnot $e22))))) (bvand $e34 (ite (= #b01 $e26) #b1 #b0))) #b1 #b0)) (ite (= (bvand $e35 (ite (= #b01 $e27) #b1 #b0)) (bvand (bvnot (bvand (bvnot $e10) $e22)) $e28)) #b1 #b0)) (ite (= (bvand (bvnot BTOR_5224@dummy_resetX183) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e18) #b1 #b0) $e19)) $e22)) (bvnot (bvand (bvnot $e11) (bvnot $e22))))) (bvand $e34 (ite (= #b10 $e26) #b1 #b0))) #b1 #b0)) (ite (= (bvand $e35 (ite (= #b10 $e27) #b1 #b0)) (bvand (bvnot (bvand (bvnot $e11) $e22)) $e28)) #b1 #b0)) (ite (= (bvand (bvnot BTOR_5224@dummy_resetX183) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e18) #b1 #b0) $e19)) $e22)) (bvnot (bvand (bvnot $e12) (bvnot $e22))))) (bvand $e34 (ite (= #b11 $e26) #b1 #b0))) #b1 #b0)) (ite (= (bvand $e35 (ite (= #b11 $e27) #b1 #b0)) (bvand $e28 (bvnot (bvand (bvnot $e12) $e22)))) #b1 #b0)) (bvnot (bvand BTOR_5224@rstX136 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_5224@__ILA_I_instX184)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_5224@rstX136))) BTOR_5224@dummy_resetX184))) (bvnot (bvand BTOR_5224@rstX136 (bvnot (bvand (bvnot (bvand BTOR_5224@rstX136 (bvnot (ite (= (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@____auxvar0__recorder_init__X183 __auxvar0__recorder) $e30) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_5224@rstX136) (bvnot (ite (= (ite (= #b1 (bvand (bvnot (bvand $e1 (ite $e2 #b1 #b0))) (bvnot (bvand (ite $e2 #b1 #b0) $e25)))) reg0 ex_val) $e30) #b1 #b0))))))))) (bvnot (bvand BTOR_5224@rstX136 (bvnot (bvand (bvnot (bvand BTOR_5224@rstX136 (bvnot (ite (= $e31 (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@____auxvar1__recorder_init__X183 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_5224@rstX136) (bvnot (ite (= (ite (= #b1 (bvand (bvnot (bvand $e1 (ite $e15 #b1 #b0))) (bvnot (bvand (ite $e15 #b1 #b0) $e25)))) reg1 ex_val) $e31) #b1 #b0))))))))) (bvnot (bvand BTOR_5224@rstX136 (bvnot (bvand (bvnot (bvand BTOR_5224@rstX136 (bvnot (ite (= (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@____auxvar2__recorder_init__X183 __auxvar2__recorder) $e32) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_5224@rstX136) (bvnot (ite (= (ite (= #b1 (bvand (bvnot (bvand $e1 (ite $e14 #b1 #b0))) (bvnot (bvand (ite $e14 #b1 #b0) $e25)))) reg2 ex_val) $e32) #b1 #b0))))))))) (bvnot (bvand BTOR_5224@rstX136 (bvnot (bvand (bvnot (bvand BTOR_5224@rstX136 (bvnot (ite (= (ite (= #b1 BTOR_5224@rstX136) BTOR_5224@____auxvar3__recorder_init__X183 __auxvar3__recorder) $e33) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_5224@rstX136) (bvnot (ite (= (ite (= #b1 (bvand (bvnot (bvand $e1 (ite $e13 #b1 #b0))) (bvnot (bvand (ite $e13 #b1 #b0) $e25)))) reg3 ex_val) $e33) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))) (let (($e3 ((_ extract 1 0) inst_id))) (let (($e4 ((_ extract 1 0) inst))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand $e2 (ite (= #b00 $e3) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand v0 (ite (= #b00 $e4) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand v0 (ite (= #b01 $e4) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand $e2 (ite (= #b01 $e3) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand v0 (ite (= #b10 $e4) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand $e2 (ite (= #b10 $e3) #b1 #b0))) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand v0 (ite (= #b11 $e4) #b1 #b0))) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand $e2 (ite (= #b11 $e3) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_17274@dummy_resetX429)))))))
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot (bvand v0 BTOR_17274@__VLG_I_stallwbX429))))))))@0
A14: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v0 (bvnot (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot (bvand v0 BTOR_17274@__VLG_I_stallwbX429))))))))
A15: (bvnot (bvand v0 (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot (bvand v0 BTOR_17274@__VLG_I_stallwbX429)))))@0
A15: (bvnot (bvand v0 (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot (bvand v0 BTOR_17274@__VLG_I_stallwbX429)))))
A16: (bvand v0 (bvnot BTOR_17274@__VLG_I_stallwbX429))@0
A16: (bvand v0 (bvnot BTOR_17274@__VLG_I_stallwbX429))
A17: (bvand (bvnot BTOR_17274@dummy_resetX429) (bvnot (bvand v0 (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot (bvand v0 BTOR_17274@__VLG_I_stallwbX429))))))@0
A17: (bvand (bvnot BTOR_17274@dummy_resetX429) (bvnot (bvand v0 (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot (bvand v0 BTOR_17274@__VLG_I_stallwbX429))))))
A18: ts.asmpt @1
A18: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 (= #b01 rd2))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (= #b10 $e9))) (let (($e11 (= #b01 $e9))) (let (($e12 (= #b11 $e9))) (let (($e13 (and (not $e11) (not $e10) (not $e12)))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (= #b01 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e10 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 (ite $e11 (bvadd $e26 $e33) (ite $e10 $e18 (ite $e12 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e36 (bvand v0 BTOR_17274@__VLG_I_stallwbX429))) (let (($e37 (bvand (bvnot BTOR_17274@__VLG_I_stallexX429) (bvnot $e36)))) (let (($e38 (bvand v0 (bvnot $e37)))) (let (($e39 (bvand RTL_if_id_valid (bvnot $e38)))) (let (($e40 (bvand v0 $e37))) (let (($e41 (bvand v0 (bvnot BTOR_17274@__VLG_I_stallwbX429)))) (let (($e42 (bvand (bvnot (ite $e13 #b1 #b0)) $e41))) (let (($e43 (ite (= #b1 (bvand (bvnot BTOR_17274@dummy_resetX429) $e39)) $e4 $e34))) (let (($e44 (ite (= #b1 (bvand (bvnot BTOR_17274@dummy_resetX429) $e40)) $e34 $e14))) (let (($e45 (bvand (bvnot BTOR_17274@dummy_resetX429) (bvnot (bvand (bvnot $e36) (bvnot $e40)))))) (let (($e46 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e39)) (bvand (bvnot BTOR_17274@dummy_resetX429) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e38))))))) (let (($e47 (bvand $e45 (bvnot (bvand (ite $e13 #b1 #b0) (bvnot $e40)))))) (let (($e48 (bvand $e40 (bvand $e45 (bvnot BTOR_17274@__VLG_I_stallwbX430))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (ite (= #b00 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b00 $e44) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b00 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b01 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (ite (= #b01 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b01 $e44) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b10 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (ite (= #b10 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b10 $e44) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e39)) (bvnot (bvand (bvnot $e39) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e40))))))) (bvand $e46 (ite (= #b11 $e43) #b1 #b0))) (= (bvand (bvnot BTOR_17274@dummy_resetX429) (bvand (bvnot (bvand (bvnot (ite (= #b11 $e34) #b1 #b0)) $e40)) (bvnot (bvand (bvnot $e40) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e41))))))) (bvand $e47 (ite (= #b11 $e44) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_17274@dummy_resetX430))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e15 #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e16 (not $e15)) #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite (and $e7 (not $e6)) #b1 #b0))) ex_val reg1))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e17 (not $e16) (not $e15)) #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite (and $e8 (not $e7) (not $e6)) #b1 #b0))) ex_val reg2))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e48) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 $e14) (not $e17) (not $e16) (not $e15)) #b1 #b0) $e42)) $e35 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e8) (not $e7) (not $e6)) #b1 #b0))) ex_val reg3))) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))
A19: ts.asmpt @0
A19: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e2) #b1 #b0) $e3)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e2) #b1 #b0) $e3)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e2) #b1 #b0) $e3)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_35540@dummy_resetX563))))))
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot BTOR_35540@__VLG_I_stallexX563)) (bvand (bvnot BTOR_35540@rstX435) (bvnot BTOR_35540@dummy_resetX563)))@0
A20: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0))) (bvnot BTOR_35540@__VLG_I_stallexX563)) (bvand (bvnot BTOR_35540@rstX435) (bvnot BTOR_35540@dummy_resetX563)))
A21: ts.asmpt @1
A21: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 (= #b01 rd2))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (= #b10 $e9))) (let (($e11 (= #b01 $e9))) (let (($e12 (= #b11 $e9))) (let (($e13 (and (not $e11) (not $e10) (not $e12)))) (let (($e14 (bvand v0 (bvnot (ite $e13 #b1 #b0))))) (let (($e15 ((_ extract 1 0) inst_id))) (let (($e16 (= #b00 $e15))) (let (($e17 (= #b01 $e15))) (let (($e18 (= #b10 $e15))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e10 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 (ite $e11 (bvadd $e27 $e34) (ite $e10 $e19 (ite $e12 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e37 (ite (= #b1 (bvand $e14 (ite (and $e18 (not $e17) (not $e16)) #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite (and $e8 (not $e7) (not $e6)) #b1 #b0))) ex_val reg2)))) (let (($e38 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e39 (ite (= #b1 (bvand $e14 (ite (and $e17 (not $e16)) #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite (and $e7 (not $e6)) #b1 #b0))) ex_val reg1)))) (let (($e40 (ite (= #b1 (bvand $e14 (ite (and (= #b11 $e15) (not $e18) (not $e17) (not $e16)) #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e8) (not $e7) (not $e6)) #b1 #b0))) ex_val reg3)))) (let (($e41 (ite (= #b1 (bvand $e14 (ite $e16 #b1 #b0))) $e36 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0)))) (let (($e42 (bvand (ite $e2 #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (let (($e43 (bvand (bvnot $e38) (bvnot $e42)))) (let (($e44 (bvand (bvnot $e38) (bvnot BTOR_35540@__VLG_I_stallexX563)))) (let (($e45 (bvand (bvnot $e38) BTOR_35540@__VLG_I_stallexX563))) (let (($e46 (bvand RTL_if_id_valid (bvnot $e45)))) (let (($e47 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@____auxvar0__recorder_init__X563 __auxvar0__recorder))) (let (($e48 (bvand (bvnot BTOR_35540@dummy_resetX563) $e44))) (let (($e49 (ite (= #b1 (bvand (bvnot BTOR_35540@dummy_resetX563) $e46)) $e4 $e35))) (let (($e50 (ite (= #b1 $e48) $e35 $e15))) (let (($e51 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@____auxvar2__recorder_init__X563 __auxvar2__recorder))) (let (($e52 (bvand (bvnot BTOR_35540@dummy_resetX563) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e45)))))) (let (($e53 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@____auxvar3__recorder_init__X563 __auxvar3__recorder))) (let (($e54 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@ILA_r0_randinitX563 ILA_r0))) (let (($e55 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@ILA_r1_randinitX563 ILA_r1))) (let (($e56 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@ILA_r2_randinitX563 ILA_r2))) (let (($e57 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@ILA_r3_randinitX563 ILA_r3))) (let (($e58 (ite (= #b1 BTOR_35540@rstX435) BTOR_35540@____auxvar1__recorder_init__X563 __auxvar1__recorder))) (let (($e59 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e46)) (bvnot (bvand $e42 (bvnot $e46)))) $e52))) (let (($e60 (bvand $e48 (bvand (bvnot (bvand $e42 $e44)) (bvnot (bvand (ite $e13 #b1 #b0) (bvnot $e44))))))) (let (($e61 (bvand (bvnot __STARTED__) (bvnot BTOR_35540@rstX435)))) (let (($e62 (bvand (bvand (bvnot BTOR_35540@rstX435) $e44) (bvand $e48 (bvnot BTOR_35540@__VLG_I_stallwbX564))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_35540@rstX435 (bvnot (bvand BTOR_35540@__VLG_I_inst_validX564 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_35540@__VLG_I_inst_validX563 (bvnot (bvand RTL_if_id_valid $e45)))) (bvnot (bvand $e45 (bvand RTL_if_id_valid (bvnot BTOR_35540@dummy_resetX563)))))) (bvand $e52 (bvnot (bvand (bvnot BTOR_35540@__VLG_I_stallexX564) (bvnot (bvand $e48 BTOR_35540@__VLG_I_stallwbX564))))))))))) (bvnot (bvand BTOR_35540@rstX435 (bvnot (ite (= BTOR_35540@__VLG_I_instX564 BTOR_35540@__ILA_I_instX564) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b00 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b00 $e50) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b01 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b01 $e50) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b10 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b10 $e50) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e46)) (bvnot (bvand (bvnot $e46) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e44))))))) (bvand $e59 (ite (= #b11 $e49) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_35540@dummy_resetX563) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e35) #b1 #b0) $e43)) $e44)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e44))))) (bvand $e60 (ite (= #b11 $e50) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_35540@rstX435 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_35540@__ILA_I_instX564)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_35540@rstX435))) BTOR_35540@dummy_resetX564))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_35540@rstX435))) (bvnot $e61)) $e62) (bvnot (ite (= $e41 $e47) #b1 #b0))))) (bvnot (bvand (bvand $e62 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_35540@rstX435))) (bvnot $e61))) (bvnot (ite (= $e39 $e58) #b1 #b0))))) (bvnot (bvand (bvand $e62 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_35540@rstX435))) (bvnot $e61))) (bvnot (ite (= $e37 $e51) #b1 #b0))))) (bvnot (bvand (bvand $e62 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_35540@rstX435))) (bvnot $e61))) (bvnot (ite (= $e40 $e53) #b1 #b0))))) (bvnot (bvand BTOR_35540@rstX435 (bvnot (bvand (bvnot (bvand BTOR_35540@rstX435 (bvnot (ite (= $e47 $e54) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_35540@rstX435) (bvnot (ite (= $e41 $e54) #b1 #b0))))))))) (bvnot (bvand BTOR_35540@rstX435 (bvnot (bvand (bvnot (bvand BTOR_35540@rstX435 (bvnot (ite (= $e55 $e58) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_35540@rstX435) (bvnot (ite (= $e39 $e55) #b1 #b0))))))))) (bvnot (bvand BTOR_35540@rstX435 (bvnot (bvand (bvnot (bvand BTOR_35540@rstX435 (bvnot (ite (= $e51 $e56) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_35540@rstX435) (bvnot (ite (= $e37 $e56) #b1 #b0))))))))) (bvnot (bvand BTOR_35540@rstX435 (bvnot (bvand (bvnot (bvand BTOR_35540@rstX435 (bvnot (ite (= $e53 $e57) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_35540@rstX435) (bvnot (ite (= $e40 $e57) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e32 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e33 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e34 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e46 (ite $e36 $e33 (ite $e37 $e32 (ite $e38 $e31 (ite $e39 $e34 #b00)))))) (let (($e47 (ite $e41 $e33 (ite $e42 $e32 (ite $e43 $e31 (ite $e44 $e34 #b00)))))) (bvadd (ite (= #b00 $e46) (ite $e36 $e29 (ite $e37 $e27 (ite $e38 $e28 (ite $e39 $e30 #b00000000)))) (ite (= #b01 $e46) $e18 $e45)) (ite (= #b00 $e47) (ite $e41 $e29 (ite $e42 $e27 (ite $e43 $e28 (ite $e44 $e30 #b00000000)))) (ite (= #b01 $e47) $e18 $e45))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e8 (ite $e12 $e6 (ite $e13 $e7 (ite $e14 $e9 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25)))))))) (ite (= inst BTOR_74@__ILA_I_instX25) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_74@__ILA_I_instX25)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_74@dummy_resetX25)))))))))
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25)))))))@0
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25)))))))
A4: (bvand v1 (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25))))@0
A4: (bvand v1 (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25))))
A5: (bvnot BTOR_74@dummy_resetX25)@0
A5: (bvnot BTOR_74@dummy_resetX25)
A6: ts.asmpt @1
A6: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_74@__VLG_I_stallwbX25))) (let (($e7 (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_74@__VLG_I_stallwbX25)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_74@dummy_resetX25) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_74@dummy_resetX25) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_74@dummy_resetX25) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_74@dummy_resetX25) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_74@dummy_resetX26))))))))))))))))))
A7: ts.asmpt @0
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 1 0) inst_id))) (let (($e5 (and (= #b00 $e4) (not $e3)))) (let (($e6 (and (= #b01 $e4) (not $e3)))) (let (($e7 (and (= #b10 $e4) (not $e3)))) (let (($e8 (and (= #b11 $e4) (not $e3)))) (bvand (ite (and (= (bvand $e1 (ite (= #b00 rd1) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) (= (bvand v0 (ite $e5 #b1 #b0)) (bvand v1 (ite $e5 #b1 #b0))) (= (bvand v0 (ite $e6 #b1 #b0)) (bvand v1 (ite $e6 #b1 #b0))) (= (bvand $e1 (ite (= #b01 rd1) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (= (bvand v0 (ite $e7 #b1 #b0)) (bvand v1 (ite $e7 #b1 #b0))) (= (bvand $e1 (ite (= #b10 rd1) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (= (bvand v0 (ite $e8 #b1 #b0)) (bvand v1 (ite $e8 #b1 #b0))) (= (bvand $e1 (ite (= #b11 rd1) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1554@dummy_resetX112)))))))))))
A8: (bvand (bvnot (bvand v1 (bvand (bvnot BTOR_1554@__VLG_I_stallexX112) (bvnot (bvand v1 BTOR_1554@__VLG_I_stallwbX112))))) (bvand (bvnot BTOR_1554@rstX82) (bvnot BTOR_1554@dummy_resetX112)))@0
A8: (bvand (bvnot (bvand v1 (bvand (bvnot BTOR_1554@__VLG_I_stallexX112) (bvnot (bvand v1 BTOR_1554@__VLG_I_stallwbX112))))) (bvand (bvnot BTOR_1554@rstX82) (bvnot BTOR_1554@dummy_resetX112)))
A9: ts.asmpt @0
A9: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 1 0) inst_id))) (let (($e5 (and (= #b00 $e4) (not $e3)))) (let (($e6 (and (= #b01 $e4) (not $e3)))) (let (($e7 (and (= #b10 $e4) (not $e3)))) (let (($e8 (and (= #b11 $e4) (not $e3)))) (bvand (ite (and (= (bvand $e1 (ite (= #b00 rd1) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) (= (bvand v0 (ite $e5 #b1 #b0)) (bvand v1 (ite $e5 #b1 #b0))) (= (bvand v0 (ite $e6 #b1 #b0)) (bvand v1 (ite $e6 #b1 #b0))) (= (bvand $e1 (ite (= #b01 rd1) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (= (bvand v0 (ite $e7 #b1 #b0)) (bvand v1 (ite $e7 #b1 #b0))) (= (bvand $e1 (ite (= #b10 rd1) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (= (bvand v0 (ite $e8 #b1 #b0)) (bvand v1 (ite $e8 #b1 #b0))) (= (bvand $e1 (ite (= #b11 rd1) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_6276@dummy_resetX186)))))))))))
A10: (bvand (bvand v1 (bvand (bvnot BTOR_6276@__VLG_I_stallexX186) (bvnot (bvand v1 BTOR_6276@__VLG_I_stallwbX186)))) (bvand (bvnot BTOR_6276@rstX139) (bvnot BTOR_6276@dummy_resetX186)))@0
A10: (bvand (bvand v1 (bvand (bvnot BTOR_6276@__VLG_I_stallexX186) (bvnot (bvand v1 BTOR_6276@__VLG_I_stallwbX186)))) (bvand (bvnot BTOR_6276@rstX139) (bvnot BTOR_6276@dummy_resetX186)))
A11: ts.asmpt @1
A11: (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (and (not (= #b01 $e8)) (not (= #b10 $e8)) (not (= #b11 $e8))))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b00 $e11))) (let (($e13 (= #b01 $e11))) (let (($e14 (= #b10 $e11))) (let (($e15 (= #b11 $e11))) (let (($e16 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e17 ((_ extract 7 6) inst))) (let (($e18 (and (not (= #b01 $e17)) (not (= #b10 $e17)) (not (= #b11 $e17))))) (let (($e19 ((_ extract 1 0) inst))) (let (($e20 (bvand v1 (bvnot (ite $e18 #b1 #b0))))) (let (($e21 (bvand v1 (bvnot (ite $e9 #b1 #b0))))) (let (($e22 (bvand v1 BTOR_6276@__VLG_I_stallwbX186))) (let (($e23 (bvand (bvnot BTOR_6276@__VLG_I_stallexX186) (bvnot $e22)))) (let (($e24 (bvand v1 $e23))) (let (($e25 (bvand (bvnot BTOR_6276@dummy_resetX186) $e24))) (let (($e26 (bvand v1 (bvnot $e23)))) (let (($e27 (bvand v1 (bvnot BTOR_6276@__VLG_I_stallwbX186)))) (let (($e28 (bvand w1 $e27))) (let (($e29 (ite (= #b1 $e25) $e19 $e11))) (let (($e30 (ite (= #b1 $e25) $e11 rd1))) (let (($e31 (bvand (bvnot BTOR_6276@dummy_resetX186) (bvnot (bvand (bvnot $e22) (bvnot $e24)))))) (let (($e32 (bvand v1 (bvnot BTOR_6276@dummy_resetX186)))) (let (($e33 (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@ILA_r0_randinitX186 ILA_r0))) (let (($e34 (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@ILA_r1_randinitX186 ILA_r1))) (let (($e35 (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@ILA_r2_randinitX186 ILA_r2))) (let (($e36 (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@ILA_r3_randinitX186 ILA_r3))) (let (($e37 (bvand (bvand (bvnot (bvand (ite $e18 #b1 #b0) $e24)) (bvnot (bvand (ite $e9 #b1 #b0) (bvnot $e24)))) $e32))) (let (($e38 (bvand $e31 (bvand (bvnot (bvand (ite $e9 #b1 #b0) $e24)) (bvnot (bvand (bvnot w1) (bvnot $e24))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_6276@rstX139 (bvnot (bvand BTOR_6276@__VLG_I_inst_validX187 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_6276@__VLG_I_inst_validX186 (bvnot $e26))) (bvnot (bvand (bvnot BTOR_6276@dummy_resetX186) $e26)))) (bvand $e32 (bvnot (bvand (bvnot BTOR_6276@__VLG_I_stallexX187) (bvnot (bvand $e31 BTOR_6276@__VLG_I_stallwbX187))))))))))) (bvnot (bvand BTOR_6276@rstX139 (bvnot (ite (= BTOR_6276@__VLG_I_instX187 BTOR_6276@__ILA_I_instX187) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e19) #b1 #b0) $e20)) $e24)) (bvnot (bvand (bvnot (bvand $e10 (ite $e12 #b1 #b0))) (bvnot $e24))))) (bvand $e37 (ite (= #b00 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite $e12 #b1 #b0) $e21)) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand (ite (bvult #b01 s0) #b1 #b0) (bvnot $e27))))))) (bvand $e38 (ite (= #b00 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e19) #b1 #b0) $e20)) $e24)) (bvnot (bvand (bvnot (bvand $e10 (ite $e13 #b1 #b0))) (bvnot $e24))))) (bvand $e37 (ite (= #b01 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite $e13 #b1 #b0) $e21)) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand (ite (bvult #b01 s1) #b1 #b0) (bvnot $e27))))))) (bvand $e38 (ite (= #b01 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e19) #b1 #b0) $e20)) $e24)) (bvnot (bvand (bvnot (bvand $e10 (ite $e14 #b1 #b0))) (bvnot $e24))))) (bvand $e37 (ite (= #b10 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite $e14 #b1 #b0) $e21)) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand (ite (bvult #b01 s2) #b1 #b0) (bvnot $e27))))))) (bvand $e38 (ite (= #b10 $e30) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e19) #b1 #b0) $e20)) $e24)) (bvnot (bvand (bvnot (bvand $e10 (ite $e15 #b1 #b0))) (bvnot $e24))))) (bvand $e37 (ite (= #b11 $e29) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_6276@dummy_resetX186) (bvand (bvnot (bvand (bvnot (bvand (ite $e15 #b1 #b0) $e21)) $e24)) (bvnot (bvand (bvnot $e24) (bvnot (bvand (ite (bvult #b01 s3) #b1 #b0) (bvnot $e27))))))) (bvand $e38 (ite (= #b11 $e30) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_6276@rstX139 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_6276@__ILA_I_instX187)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_6276@rstX139))) BTOR_6276@dummy_resetX187))) (bvnot (bvand BTOR_6276@rstX139 (bvnot (bvand (bvnot (bvand BTOR_6276@rstX139 (bvnot (ite (= (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@____auxvar0__recorder_init__X186 __auxvar0__recorder) $e33) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_6276@rstX139) (bvnot (ite (= (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e28)) $e16 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) $e33) #b1 #b0))))))))) (bvnot (bvand BTOR_6276@rstX139 (bvnot (bvand (bvnot (bvand BTOR_6276@rstX139 (bvnot (ite (= $e34 (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@____auxvar1__recorder_init__X186 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_6276@rstX139) (bvnot (ite (= (ite (= #b1 (bvand (ite (and $e4 (not $e1)) #b1 #b0) $e28)) $e16 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) $e34) #b1 #b0))))))))) (bvnot (bvand BTOR_6276@rstX139 (bvnot (bvand (bvnot (bvand BTOR_6276@rstX139 (bvnot (ite (= (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@____auxvar2__recorder_init__X186 __auxvar2__recorder) $e35) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_6276@rstX139) (bvnot (ite (= (ite (= #b1 (bvand (ite (and $e6 (not $e4) (not $e1)) #b1 #b0) $e28)) $e16 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) $e35) #b1 #b0))))))))) (bvnot (bvand BTOR_6276@rstX139 (bvnot (bvand (bvnot (bvand BTOR_6276@rstX139 (bvnot (ite (= (ite (= #b1 BTOR_6276@rstX139) BTOR_6276@____auxvar3__recorder_init__X186 __auxvar3__recorder) $e36) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_6276@rstX139) (bvnot (ite (= (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0) $e28)) $e16 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) $e36) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))
A12: ts.asmpt @0
A12: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 1 0) inst_id))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 ((_ extract 1 0) inst))) (let (($e6 (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (let (($e7 (bvand v1 (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e5) #b1 #b0) $e6)) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e3) #b1 #b0) $e7))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_20526@dummy_resetX465))))))))))
A13: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot (bvand v1 BTOR_20526@__VLG_I_stallwbX465))))))))@0
A13: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot (bvand v1 BTOR_20526@__VLG_I_stallwbX465))))))))
A14: (bvnot (bvand v1 (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot (bvand v1 BTOR_20526@__VLG_I_stallwbX465)))))@0
A14: (bvnot (bvand v1 (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot (bvand v1 BTOR_20526@__VLG_I_stallwbX465)))))
A15: (bvand v1 (bvnot BTOR_20526@__VLG_I_stallwbX465))@0
A15: (bvand v1 (bvnot BTOR_20526@__VLG_I_stallwbX465))
A16: (bvand (bvnot BTOR_20526@dummy_resetX465) (bvnot (bvand v1 (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot (bvand v1 BTOR_20526@__VLG_I_stallwbX465))))))@0
A16: (bvand (bvnot BTOR_20526@dummy_resetX465) (bvnot (bvand v1 (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot (bvand v1 BTOR_20526@__VLG_I_stallwbX465))))))
A17: ts.asmpt @1
A17: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 ((_ extract 7 6) inst_id))) (let (($e14 (= #b10 $e13))) (let (($e15 (= #b01 $e13))) (let (($e16 (= #b11 $e13))) (let (($e17 (and (not $e15) (not $e14) (not $e16)))) (let (($e18 ((_ extract 1 0) inst_id))) (let (($e19 (= #b00 $e18))) (let (($e20 (= #b01 $e18))) (let (($e21 (= #b10 $e18))) (let (($e22 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e23 ((_ extract 5 4) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e30 (ite $e14 $e22 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e29))))) (let (($e31 ((_ extract 3 2) inst_id))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e32 s3 (ite $e33 s2 (ite $e34 s1 (ite $e35 s0 #b00)))))) (let (($e37 (ite (= #b00 $e36) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e36) ex_val $e29)))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 (ite $e15 (bvadd $e30 $e37) (ite $e14 $e22 (ite $e16 (bvnot (bvand $e30 $e37)) #b00000000))))) (let (($e41 (bvand (bvnot (bvand v1 (ite $e17 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e42 (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e17 #b1 #b0)))))) (let (($e43 (bvand v1 $e42))) (let (($e44 (bvand v1 BTOR_20526@__VLG_I_stallwbX465))) (let (($e45 (bvand (bvnot BTOR_20526@__VLG_I_stallexX465) (bvnot $e44)))) (let (($e46 (bvand v1 (bvnot $e45)))) (let (($e47 (bvand RTL_if_id_valid (bvnot $e46)))) (let (($e48 (bvand v1 $e45))) (let (($e49 (bvand v1 (bvnot BTOR_20526@__VLG_I_stallwbX465)))) (let (($e50 (bvand $e41 $e49))) (let (($e51 (ite (= #b1 (bvand (bvnot BTOR_20526@dummy_resetX465) $e47)) $e4 $e39))) (let (($e52 (ite (= #b1 (bvand (bvnot BTOR_20526@dummy_resetX465) $e48)) $e39 $e18))) (let (($e53 (bvand (bvnot BTOR_20526@dummy_resetX465) (bvnot (bvand (bvnot $e44) (bvnot $e48)))))) (let (($e54 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e47)) (bvnot (bvand (bvnot $e42) (bvnot $e47)))) (bvand (bvnot BTOR_20526@dummy_resetX465) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e46))))))) (let (($e55 (bvand $e53 (bvand (bvnot (bvand (bvnot $e42) $e48)) (bvnot (bvand (bvnot $e41) (bvnot $e48))))))) (let (($e56 (bvand $e48 (bvand $e53 (bvnot BTOR_20526@__VLG_I_stallwbX466))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b00 $e52) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b00 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b01 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b01 $e52) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b10 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b10 $e52) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b11 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_20526@dummy_resetX465) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b11 $e52) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_20526@dummy_resetX466))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e19 #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0)))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e20 (not $e19)) #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1)))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e21 (not $e20) (not $e19)) #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e11 (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2)))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 $e18) (not $e21) (not $e20) (not $e19)) #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3)))) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
A18: ts.asmpt @0
A18: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 ((_ extract 1 0) inst))) (let (($e5 (bvand RTL_if_id_valid (bvnot v1)))) (let (($e6 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e5)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))))) (bvnot $e5))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e4) #b1 #b0) $e6)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e4) #b1 #b0) $e6)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e4) #b1 #b0) $e6)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e4) #b1 #b0) $e6)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_37720@dummy_resetX569)))))))))
A19: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_37720@__VLG_I_stallexX569)) (bvand (bvnot BTOR_37720@rstX441) (bvnot BTOR_37720@dummy_resetX569)))@0
A19: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_37720@__VLG_I_stallexX569)) (bvand (bvnot BTOR_37720@rstX441) (bvnot BTOR_37720@dummy_resetX569)))
A20: ts.asmpt @1
A20: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 ((_ extract 7 6) inst_id))) (let (($e14 (= #b10 $e13))) (let (($e15 (= #b01 $e13))) (let (($e16 (= #b11 $e13))) (let (($e17 (and (not $e15) (not $e14) (not $e16)))) (let (($e18 ((_ extract 1 0) inst_id))) (let (($e19 (= #b00 $e18))) (let (($e20 (= #b01 $e18))) (let (($e21 (= #b10 $e18))) (let (($e22 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e23 ((_ extract 5 4) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e30 (ite $e14 $e22 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e29))))) (let (($e31 ((_ extract 3 2) inst_id))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e32 s3 (ite $e33 s2 (ite $e34 s1 (ite $e35 s0 #b00)))))) (let (($e37 (ite (= #b00 $e36) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e36) ex_val $e29)))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 (ite $e15 (bvadd $e30 $e37) (ite $e14 $e22 (ite $e16 (bvnot (bvand $e30 $e37)) #b00000000))))) (let (($e41 (bvand (bvnot (bvand v1 (ite $e17 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e42 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e43 (bvand RTL_if_id_valid (bvnot v1)))) (let (($e44 (bvand v1 $e41))) (let (($e45 (ite (= #b1 (bvand (ite (and $e21 (not $e20) (not $e19)) #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e11 (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2))))) (let (($e46 (ite (= #b1 (bvand (ite (and $e20 (not $e19)) #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1))))) (let (($e47 (ite (= #b1 (bvand (ite (and (= #b11 $e18) (not $e21) (not $e20) (not $e19)) #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3))))) (let (($e48 (ite (= #b1 (bvand (ite $e19 #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0))))) (let (($e49 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e43)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e17 #b1 #b0))))) (bvnot $e43)))))) (let (($e50 (bvand (bvnot $e42) $e49))) (let (($e51 (bvand (bvnot $e42) (bvnot BTOR_37720@__VLG_I_stallexX569)))) (let (($e52 (bvand (bvnot $e42) BTOR_37720@__VLG_I_stallexX569))) (let (($e53 (bvand RTL_if_id_valid (bvnot $e52)))) (let (($e54 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@____auxvar0__recorder_init__X569 __auxvar0__recorder))) (let (($e55 (bvand (bvnot BTOR_37720@dummy_resetX569) $e51))) (let (($e56 (ite (= #b1 (bvand (bvnot BTOR_37720@dummy_resetX569) $e53)) $e4 $e39))) (let (($e57 (ite (= #b1 $e55) $e39 $e18))) (let (($e58 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@____auxvar2__recorder_init__X569 __auxvar2__recorder))) (let (($e59 (bvand (bvnot BTOR_37720@dummy_resetX569) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e52)))))) (let (($e60 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@____auxvar3__recorder_init__X569 __auxvar3__recorder))) (let (($e61 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@ILA_r0_randinitX569 ILA_r0))) (let (($e62 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@ILA_r1_randinitX569 ILA_r1))) (let (($e63 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@ILA_r2_randinitX569 ILA_r2))) (let (($e64 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@ILA_r3_randinitX569 ILA_r3))) (let (($e65 (ite (= #b1 BTOR_37720@rstX441) BTOR_37720@____auxvar1__recorder_init__X569 __auxvar1__recorder))) (let (($e66 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e53)) (bvnot (bvand (bvnot $e49) (bvnot $e53)))) $e59))) (let (($e67 (bvand $e55 (bvand (bvnot (bvand (bvnot $e49) $e51)) (bvnot (bvand (bvnot $e41) (bvnot $e51))))))) (let (($e68 (bvand (bvnot __STARTED__) (bvnot BTOR_37720@rstX441)))) (let (($e69 (bvand (bvand (bvnot BTOR_37720@rstX441) $e51) (bvand $e55 (bvnot BTOR_37720@__VLG_I_stallwbX570))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_37720@rstX441 (bvnot (bvand BTOR_37720@__VLG_I_inst_validX570 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_37720@__VLG_I_inst_validX569 (bvnot (bvand RTL_if_id_valid $e52)))) (bvnot (bvand $e52 (bvand RTL_if_id_valid (bvnot BTOR_37720@dummy_resetX569)))))) (bvand $e59 (bvnot (bvand (bvnot BTOR_37720@__VLG_I_stallexX570) (bvnot (bvand $e55 BTOR_37720@__VLG_I_stallwbX570))))))))))) (bvnot (bvand BTOR_37720@rstX441 (bvnot (ite (= BTOR_37720@__VLG_I_instX570 BTOR_37720@__ILA_I_instX570) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b00 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b00 $e57) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b01 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b01 $e57) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b10 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b10 $e57) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b11 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_37720@dummy_resetX569) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b11 $e57) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_37720@rstX441 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_37720@__ILA_I_instX570)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_37720@rstX441))) BTOR_37720@dummy_resetX570))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_37720@rstX441))) (bvnot $e68)) $e69) (bvnot (ite (= $e48 $e54) #b1 #b0))))) (bvnot (bvand (bvand $e69 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_37720@rstX441))) (bvnot $e68))) (bvnot (ite (= $e46 $e65) #b1 #b0))))) (bvnot (bvand (bvand $e69 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_37720@rstX441))) (bvnot $e68))) (bvnot (ite (= $e45 $e58) #b1 #b0))))) (bvnot (bvand (bvand $e69 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_37720@rstX441))) (bvnot $e68))) (bvnot (ite (= $e47 $e60) #b1 #b0))))) (bvnot (bvand BTOR_37720@rstX441 (bvnot (bvand (bvnot (bvand BTOR_37720@rstX441 (bvnot (ite (= $e54 $e61) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_37720@rstX441) (bvnot (ite (= $e48 $e61) #b1 #b0))))))))) (bvnot (bvand BTOR_37720@rstX441 (bvnot (bvand (bvnot (bvand BTOR_37720@rstX441 (bvnot (ite (= $e62 $e65) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_37720@rstX441) (bvnot (ite (= $e46 $e62) #b1 #b0))))))))) (bvnot (bvand BTOR_37720@rstX441 (bvnot (bvand (bvnot (bvand BTOR_37720@rstX441 (bvnot (ite (= $e58 $e63) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_37720@rstX441) (bvnot (ite (= $e45 $e63) #b1 #b0))))))))) (bvnot (bvand BTOR_37720@rstX441 (bvnot (bvand (bvnot (bvand BTOR_37720@rstX441 (bvnot (ite (= $e60 $e64) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_37720@rstX441) (bvnot (ite (= $e47 $e64) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e8 (ite $e12 $e6 (ite $e13 $e7 (ite $e14 $e9 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b01 $e5) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 #b0)))) (let (($e50 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)))) (let (($e51 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)))) (let (($e52 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)))) (bvadd (ite (= #b00 (ite $e35 $e52 (ite $e36 $e51 (ite $e37 $e50 (ite $e38 $e49 #b00))))) (ite $e35 $e48 (ite $e36 $e47 (ite $e37 $e46 (ite $e38 $e45 #b00000000)))) $e44) (ite (= #b00 (ite $e40 $e52 (ite $e41 $e51 (ite $e42 $e50 (ite $e43 $e49 #b00))))) (ite $e40 $e48 (ite $e41 $e47 (ite $e42 $e46 (ite $e43 $e45 #b00000000)))) $e44))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar3__recorder1 ILA_r31) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
A2: ts.asmpt @0
A2: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (bvand (ite (= ILA_r3 __auxvar3__recorder) #b1 #b0) (bvand (ite (= ILA_r2 __auxvar2__recorder) #b1 #b0) (bvand (ite (= ILA_r1 __auxvar1__recorder) #b1 #b0) (bvand (ite (= ILA_r0 __auxvar0__recorder) #b1 #b0) (bvand (bvand (bvand (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0) (bvand (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0) (bvand (bvand inst_v (bvnot (bvand v0 (bvand v1 (bvnot (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25)))))))) (ite (= inst BTOR_74@__ILA_I_instX25) #b1 #b0)))))))))) (ite (= #b01 ((_ extract 7 6) BTOR_74@__ILA_I_instX25)) #b1 #b0)) (bvnot (bvand __RESETED__ BTOR_74@dummy_resetX25)))))))))
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25)))))))@0
A3: (bvand v0 (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25)))))))
A4: (bvand v1 (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25))))@0
A4: (bvand v1 (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot (bvand v2 BTOR_74@__VLG_I_stallwbX25))))
A5: (bvnot BTOR_74@dummy_resetX25)@0
A5: (bvnot BTOR_74@dummy_resetX25)
A6: ts.asmpt @1
A6: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand v0 (bvnot (ite $e3 #b1 #b0))))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (bvand v2 BTOR_74@__VLG_I_stallwbX25))) (let (($e7 (bvand (bvnot BTOR_74@__VLG_I_stallexX25) (bvnot $e6)))) (let (($e8 (bvand v1 (bvnot $e7)))) (let (($e9 (bvand v0 (bvnot $e8)))) (let (($e10 (bvand v1 $e7))) (let (($e11 (bvand v2 (bvnot BTOR_74@__VLG_I_stallwbX25)))) (let (($e12 (ite (= #b1 (bvand (bvnot BTOR_74@dummy_resetX25) $e9)) $e5 rd1))) (let (($e13 (ite (= #b1 (bvand (bvnot BTOR_74@dummy_resetX25) $e10)) rd1 rd2))) (let (($e14 (bvand (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e9)) (bvnot (bvand (bvnot w1) (bvnot $e9)))) (bvand (bvnot BTOR_74@dummy_resetX25) (bvnot (bvand (bvnot v0) (bvnot $e8))))))) (let (($e15 (bvand (bvand (bvnot BTOR_74@dummy_resetX25) (bvnot (bvand (bvnot $e6) (bvnot $e10)))) (bvand (bvnot (bvand (bvnot w1) $e10)) (bvnot (bvand (bvnot w2) (bvnot $e10))))))) (bvand (ite (and (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s0) (bvnot $e11))))))) (bvand $e15 (ite (= #b00 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b00 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s0) (bvnot $e10))))))) (bvand $e14 (ite (= #b00 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b01 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s1) (bvnot $e10))))))) (bvand $e14 (ite (= #b01 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s1) (bvnot $e11))))))) (bvand $e15 (ite (= #b01 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b10 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s2) (bvnot $e10))))))) (bvand $e14 (ite (= #b10 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s2) (bvnot $e11))))))) (bvand $e15 (ite (= #b10 $e13) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e4 (ite (= #b11 $e5) #b1 #b0))) $e9)) (bvnot (bvand (bvnot $e9) (bvnot (bvand ((_ extract 1 1) s3) (bvnot $e10))))))) (bvand $e14 (ite (= #b11 $e12) #b1 #b0))) (= (bvand (bvnot BTOR_74@dummy_resetX25) (bvand (bvnot (bvand (bvnot (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) $e10)) (bvnot (bvand (bvnot $e10) (bvnot (bvand ((_ extract 0 0) s3) (bvnot $e11))))))) (bvand $e15 (ite (= #b11 $e13) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_74@dummy_resetX26))))))))))))))))))
A7: ts.asmpt @0
A7: (let (($e1 (bvand w1 v1))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 1 0) inst_id))) (let (($e5 (and (= #b00 $e4) (not $e3)))) (let (($e6 (and (= #b01 $e4) (not $e3)))) (let (($e7 (and (= #b10 $e4) (not $e3)))) (let (($e8 (and (= #b11 $e4) (not $e3)))) (bvand (ite (and (= (bvand $e1 (ite (= #b00 rd1) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) (= (bvand v0 (ite $e5 #b1 #b0)) (bvand v1 (ite $e5 #b1 #b0))) (= (bvand v0 (ite $e6 #b1 #b0)) (bvand v1 (ite $e6 #b1 #b0))) (= (bvand $e1 (ite (= #b01 rd1) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (= (bvand v0 (ite $e7 #b1 #b0)) (bvand v1 (ite $e7 #b1 #b0))) (= (bvand $e1 (ite (= #b10 rd1) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (= (bvand v0 (ite $e8 #b1 #b0)) (bvand v1 (ite $e8 #b1 #b0))) (= (bvand $e1 (ite (= #b11 rd1) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1570@dummy_resetX129)))))))))))
A8: (bvnot (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot (bvand v1 BTOR_1570@__VLG_I_stallwbX129)))))@0
A8: (bvnot (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot (bvand v1 BTOR_1570@__VLG_I_stallwbX129)))))
A9: (bvnot (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot (bvand v1 BTOR_1570@__VLG_I_stallwbX129)))))@0
A9: (bvnot (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot (bvand v1 BTOR_1570@__VLG_I_stallwbX129)))))
A10: (bvand v1 (bvnot BTOR_1570@__VLG_I_stallwbX129))@0
A10: (bvand v1 (bvnot BTOR_1570@__VLG_I_stallwbX129))
A11: (bvand (bvnot BTOR_1570@dummy_resetX129) (bvnot (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot (bvand v1 BTOR_1570@__VLG_I_stallwbX129))))))@0
A11: (bvand (bvnot BTOR_1570@dummy_resetX129) (bvnot (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot (bvand v1 BTOR_1570@__VLG_I_stallwbX129))))))
A12: ts.asmpt @1
A12: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand v0 (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) inst_id))) (let (($e5 (= #b00 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b10 $e4))) (let (($e8 (= #b11 $e4))) (let (($e9 ((_ extract 7 6) inst))) (let (($e10 (and (not (= #b01 $e9)) (not (= #b10 $e9)) (not (= #b11 $e9))))) (let (($e11 ((_ extract 1 0) inst))) (let (($e12 (bvand v1 (bvnot (ite $e10 #b1 #b0))))) (let (($e13 (bvand v1 (bvnot (ite $e2 #b1 #b0))))) (let (($e14 (bvand v1 BTOR_1570@__VLG_I_stallwbX129))) (let (($e15 (bvand v1 (bvand (bvnot BTOR_1570@__VLG_I_stallexX129) (bvnot $e14))))) (let (($e16 (bvand v1 (bvnot BTOR_1570@__VLG_I_stallwbX129)))) (let (($e17 (bvand (bvnot BTOR_1570@dummy_resetX129) $e15))) (let (($e18 (ite (= #b1 $e17) $e11 $e4))) (let (($e19 (ite (= #b1 $e17) $e4 rd1))) (let (($e20 (bvand (bvand (bvnot (bvand (ite $e10 #b1 #b0) $e15)) (bvnot (bvand (ite $e2 #b1 #b0) (bvnot $e15)))) (bvand v1 (bvnot BTOR_1570@dummy_resetX129))))) (let (($e21 (bvand (bvand (bvnot BTOR_1570@dummy_resetX129) (bvnot (bvand (bvnot $e14) (bvnot $e15)))) (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e15)) (bvnot (bvand (bvnot w1) (bvnot $e15))))))) (bvand (ite (and (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite $e5 #b1 #b0) $e13)) $e15)) (bvnot (bvand (bvnot $e15) (bvnot (bvand (ite (bvult #b01 s0) #b1 #b0) (bvnot $e16))))))) (bvand $e21 (ite (= #b00 $e19) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e11) #b1 #b0) $e12)) $e15)) (bvnot (bvand (bvnot (bvand $e3 (ite $e5 #b1 #b0))) (bvnot $e15))))) (bvand $e20 (ite (= #b00 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e11) #b1 #b0) $e12)) $e15)) (bvnot (bvand (bvnot (bvand $e3 (ite $e6 #b1 #b0))) (bvnot $e15))))) (bvand $e20 (ite (= #b01 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite $e6 #b1 #b0) $e13)) $e15)) (bvnot (bvand (bvnot $e15) (bvnot (bvand (ite (bvult #b01 s1) #b1 #b0) (bvnot $e16))))))) (bvand $e21 (ite (= #b01 $e19) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e11) #b1 #b0) $e12)) $e15)) (bvnot (bvand (bvnot (bvand $e3 (ite $e7 #b1 #b0))) (bvnot $e15))))) (bvand $e20 (ite (= #b10 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite $e7 #b1 #b0) $e13)) $e15)) (bvnot (bvand (bvnot $e15) (bvnot (bvand (ite (bvult #b01 s2) #b1 #b0) (bvnot $e16))))))) (bvand $e21 (ite (= #b10 $e19) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e11) #b1 #b0) $e12)) $e15)) (bvnot (bvand (bvnot (bvand $e3 (ite $e8 #b1 #b0))) (bvnot $e15))))) (bvand $e20 (ite (= #b11 $e18) #b1 #b0))) (= (bvand (bvnot BTOR_1570@dummy_resetX129) (bvand (bvnot (bvand (bvnot (bvand (ite $e8 #b1 #b0) $e13)) $e15)) (bvnot (bvand (bvnot $e15) (bvnot (bvand (ite (bvult #b01 s3) #b1 #b0) (bvnot $e16))))))) (bvand $e21 (ite (= #b11 $e19) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_1570@dummy_resetX130))))))))))))))))))))))))
A13: ts.asmpt @0
A13: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand v0 (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) inst_id))) (let (($e5 (= #b00 $e4))) (let (($e6 (bvand $e3 (ite $e5 #b1 #b0)))) (let (($e7 (= #b01 $e4))) (let (($e8 (bvand $e3 (ite $e7 #b1 #b0)))) (let (($e9 (= #b10 $e4))) (let (($e10 (bvand $e3 (ite $e9 #b1 #b0)))) (let (($e11 (= #b11 $e4))) (let (($e12 (bvand $e3 (ite $e11 #b1 #b0)))) (let (($e13 (bvand v1 (bvnot (ite $e2 #b1 #b0))))) (let (($e14 (bvand (concat $e8 (ite (bvult #b01 s1) #b1 #b0)) (concat $e8 (bvnot v1))))) (let (($e15 (bvand (concat $e10 (ite (bvult #b01 s2) #b1 #b0)) (concat $e10 (bvnot v1))))) (let (($e16 (bvand (concat $e12 (ite (bvult #b01 s3) #b1 #b0)) (concat $e12 (bvnot v1))))) (let (($e17 (bvand (concat $e6 (ite (bvult #b01 s0) #b1 #b0)) (concat $e6 (bvnot v1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (ite (= (bvand (ite $e5 #b1 #b0) $e13) ((_ extract 1 1) $e17)) #b1 #b0) (bvnot ((_ extract 0 0) $e17))) (ite (= (bvand (ite $e7 #b1 #b0) $e13) ((_ extract 1 1) $e14)) #b1 #b0)) (bvnot ((_ extract 0 0) $e14))) (ite (= (bvand (ite $e9 #b1 #b0) $e13) ((_ extract 1 1) $e15)) #b1 #b0)) (bvnot ((_ extract 0 0) $e15))) (ite (= (bvand (ite $e11 #b1 #b0) $e13) ((_ extract 1 1) $e16)) #b1 #b0)) (bvnot ((_ extract 0 0) $e16))) (bvnot (bvand __RESETED__ BTOR_7448@dummy_resetX189))))))))))))))))))))
A14: (bvand (bvand v1 (bvnot BTOR_7448@__VLG_I_stallexX189)) (bvand (bvnot BTOR_7448@rstX142) (bvnot BTOR_7448@dummy_resetX189)))@0
A14: (bvand (bvand v1 (bvnot BTOR_7448@__VLG_I_stallexX189)) (bvand (bvnot BTOR_7448@rstX142) (bvnot BTOR_7448@dummy_resetX189)))
A15: ts.asmpt @1
A15: (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 ((_ extract 7 6) inst_id))) (let (($e10 (and (not (= #b01 $e9)) (not (= #b10 $e9)) (not (= #b11 $e9))))) (let (($e11 (bvand v0 (bvnot (ite $e10 #b1 #b0))))) (let (($e12 ((_ extract 1 0) inst_id))) (let (($e13 (= #b00 $e12))) (let (($e14 (bvand $e11 (ite $e13 #b1 #b0)))) (let (($e15 (= #b01 $e12))) (let (($e16 (bvand $e11 (ite $e15 #b1 #b0)))) (let (($e17 (= #b10 $e12))) (let (($e18 (bvand $e11 (ite $e17 #b1 #b0)))) (let (($e19 (= #b11 $e12))) (let (($e20 (bvand $e11 (ite $e19 #b1 #b0)))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 ((_ extract 7 6) inst))) (let (($e23 (and (not (= #b01 $e22)) (not (= #b10 $e22)) (not (= #b11 $e22))))) (let (($e24 ((_ extract 1 0) inst))) (let (($e25 (bvand v1 (bvnot (ite $e23 #b1 #b0))))) (let (($e26 (bvand v1 (bvnot (ite $e10 #b1 #b0))))) (let (($e27 (bvand (concat $e16 (ite (bvult #b01 s1) #b1 #b0)) (concat $e16 (bvnot v1))))) (let (($e28 (bvand (concat $e18 (ite (bvult #b01 s2) #b1 #b0)) (concat $e18 (bvnot v1))))) (let (($e29 (bvand (concat $e20 (ite (bvult #b01 s3) #b1 #b0)) (concat $e20 (bvnot v1))))) (let (($e30 (bvand (concat $e14 (ite (bvult #b01 s0) #b1 #b0)) (concat $e14 (bvnot v1))))) (let (($e31 (bvand v1 (bvnot BTOR_7448@__VLG_I_stallexX189)))) (let (($e32 (bvand (bvnot BTOR_7448@dummy_resetX189) $e31))) (let (($e33 (bvand v1 BTOR_7448@__VLG_I_stallexX189))) (let (($e34 (ite (= #b1 $e32) $e24 $e12))) (let (($e35 (ite (= #b1 $e32) $e12 rd1))) (let (($e36 (bvand v1 (bvnot BTOR_7448@dummy_resetX189)))) (let (($e37 (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@ILA_r0_randinitX189 ILA_r0))) (let (($e38 (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@ILA_r1_randinitX189 ILA_r1))) (let (($e39 (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@ILA_r2_randinitX189 ILA_r2))) (let (($e40 (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@ILA_r3_randinitX189 ILA_r3))) (let (($e41 (bvand (bvand (bvnot (bvand (ite $e23 #b1 #b0) $e31)) (bvnot (bvand (ite $e10 #b1 #b0) (bvnot $e31)))) $e36))) (let (($e42 (bvand $e32 (bvand (bvnot (bvand (ite $e10 #b1 #b0) $e31)) (bvnot (bvand (bvnot w1) (bvnot $e31))))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_7448@rstX142 (bvnot (bvand BTOR_7448@__VLG_I_inst_validX190 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_7448@__VLG_I_inst_validX189 (bvnot $e33))) (bvnot (bvand (bvnot BTOR_7448@dummy_resetX189) $e33)))) (bvand $e36 (bvnot (bvand (bvnot BTOR_7448@__VLG_I_stallexX190) (bvnot (bvand $e32 BTOR_7448@__VLG_I_stallwbX190))))))))))) (bvnot (bvand BTOR_7448@rstX142 (bvnot (ite (= BTOR_7448@__VLG_I_instX190 BTOR_7448@__ILA_I_instX190) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e24) #b1 #b0) $e25)) $e31)) (bvnot (bvand (bvnot ((_ extract 1 1) $e30)) (bvnot $e31))))) (bvand $e41 (ite (= #b00 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite $e13 #b1 #b0) $e26)) $e31)) (bvnot (bvand (bvnot ((_ extract 0 0) $e30)) (bvnot $e31))))) (bvand $e42 (ite (= #b00 $e35) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e24) #b1 #b0) $e25)) $e31)) (bvnot (bvand (bvnot ((_ extract 1 1) $e27)) (bvnot $e31))))) (bvand $e41 (ite (= #b01 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite $e15 #b1 #b0) $e26)) $e31)) (bvnot (bvand (bvnot ((_ extract 0 0) $e27)) (bvnot $e31))))) (bvand $e42 (ite (= #b01 $e35) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e24) #b1 #b0) $e25)) $e31)) (bvnot (bvand (bvnot ((_ extract 1 1) $e28)) (bvnot $e31))))) (bvand $e41 (ite (= #b10 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite $e17 #b1 #b0) $e26)) $e31)) (bvnot (bvand (bvnot ((_ extract 0 0) $e28)) (bvnot $e31))))) (bvand $e42 (ite (= #b10 $e35) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e24) #b1 #b0) $e25)) $e31)) (bvnot (bvand (bvnot ((_ extract 1 1) $e29)) (bvnot $e31))))) (bvand $e41 (ite (= #b11 $e34) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_7448@dummy_resetX189) (bvand (bvnot (bvand (bvnot (bvand (ite $e19 #b1 #b0) $e26)) $e31)) (bvnot (bvand (bvnot ((_ extract 0 0) $e29)) (bvnot $e31))))) (bvand $e42 (ite (= #b11 $e35) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_7448@rstX142 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_7448@__ILA_I_instX190)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_7448@rstX142))) BTOR_7448@dummy_resetX190))) (bvnot (bvand BTOR_7448@rstX142 (bvnot (bvand (bvnot (bvand BTOR_7448@rstX142 (bvnot (ite (= (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@____auxvar0__recorder_init__X189 __auxvar0__recorder) $e37) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_7448@rstX142) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e21 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)) $e37) #b1 #b0))))))))) (bvnot (bvand BTOR_7448@rstX142 (bvnot (bvand (bvnot (bvand BTOR_7448@rstX142 (bvnot (ite (= $e38 (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@____auxvar1__recorder_init__X189 __auxvar1__recorder)) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_7448@rstX142) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e21 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)) $e38) #b1 #b0))))))))) (bvnot (bvand BTOR_7448@rstX142 (bvnot (bvand (bvnot (bvand BTOR_7448@rstX142 (bvnot (ite (= (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@____auxvar2__recorder_init__X189 __auxvar2__recorder) $e39) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_7448@rstX142) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e21 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)) $e39) #b1 #b0))))))))) (bvnot (bvand BTOR_7448@rstX142 (bvnot (bvand (bvnot (bvand BTOR_7448@rstX142 (bvnot (ite (= (ite (= #b1 BTOR_7448@rstX142) BTOR_7448@____auxvar3__recorder_init__X189 __auxvar3__recorder) $e40) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_7448@rstX142) (bvnot (ite (= (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e21 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)) $e40) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))
A16: ts.asmpt @0
A16: (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 1 0) inst_id))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 ((_ extract 1 0) inst))) (let (($e6 (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (let (($e7 (bvand v1 (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (bvand (ite (and (= ((_ extract 0 0) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e5) #b1 #b0) $e6)) (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e3) #b1 #b0) $e7)) (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e5) #b1 #b0) $e6)) (= ((_ extract 0 0) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e3) #b1 #b0) $e7))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_24034@dummy_resetX501))))))))))
A17: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot (bvand v1 BTOR_24034@__VLG_I_stallwbX501))))))))@0
A17: (bvnot (bvand RTL_if_id_valid (bvnot (bvand v1 (bvnot (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot (bvand v1 BTOR_24034@__VLG_I_stallwbX501))))))))
A18: (bvnot (bvand v1 (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot (bvand v1 BTOR_24034@__VLG_I_stallwbX501)))))@0
A18: (bvnot (bvand v1 (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot (bvand v1 BTOR_24034@__VLG_I_stallwbX501)))))
A19: (bvand v1 (bvnot BTOR_24034@__VLG_I_stallwbX501))@0
A19: (bvand v1 (bvnot BTOR_24034@__VLG_I_stallwbX501))
A20: (bvand (bvnot BTOR_24034@dummy_resetX501) (bvnot (bvand v1 (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot (bvand v1 BTOR_24034@__VLG_I_stallwbX501))))))@0
A20: (bvand (bvnot BTOR_24034@dummy_resetX501) (bvnot (bvand v1 (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot (bvand v1 BTOR_24034@__VLG_I_stallwbX501))))))
A21: ts.asmpt @1
A21: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 ((_ extract 7 6) inst_id))) (let (($e14 (= #b10 $e13))) (let (($e15 (= #b01 $e13))) (let (($e16 (= #b11 $e13))) (let (($e17 (and (not $e15) (not $e14) (not $e16)))) (let (($e18 ((_ extract 1 0) inst_id))) (let (($e19 (= #b00 $e18))) (let (($e20 (= #b01 $e18))) (let (($e21 (= #b10 $e18))) (let (($e22 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e23 ((_ extract 5 4) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e30 (ite $e14 $e22 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e29))))) (let (($e31 ((_ extract 3 2) inst_id))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e32 s3 (ite $e33 s2 (ite $e34 s1 (ite $e35 s0 #b00)))))) (let (($e37 (ite (= #b00 $e36) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e36) ex_val $e29)))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 (ite $e15 (bvadd $e30 $e37) (ite $e14 $e22 (ite $e16 (bvnot (bvand $e30 $e37)) #b00000000))))) (let (($e41 (bvand (bvnot (bvand v1 (ite $e17 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e42 (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e17 #b1 #b0)))))) (let (($e43 (bvand v1 $e42))) (let (($e44 (bvand v1 BTOR_24034@__VLG_I_stallwbX501))) (let (($e45 (bvand (bvnot BTOR_24034@__VLG_I_stallexX501) (bvnot $e44)))) (let (($e46 (bvand v1 (bvnot $e45)))) (let (($e47 (bvand RTL_if_id_valid (bvnot $e46)))) (let (($e48 (bvand v1 $e45))) (let (($e49 (bvand v1 (bvnot BTOR_24034@__VLG_I_stallwbX501)))) (let (($e50 (bvand $e41 $e49))) (let (($e51 (ite (= #b1 (bvand (bvnot BTOR_24034@dummy_resetX501) $e47)) $e4 $e39))) (let (($e52 (ite (= #b1 (bvand (bvnot BTOR_24034@dummy_resetX501) $e48)) $e39 $e18))) (let (($e53 (bvand (bvnot BTOR_24034@dummy_resetX501) (bvnot (bvand (bvnot $e44) (bvnot $e48)))))) (let (($e54 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e47)) (bvnot (bvand (bvnot $e42) (bvnot $e47)))) (bvand (bvnot BTOR_24034@dummy_resetX501) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e46))))))) (let (($e55 (bvand $e53 (bvand (bvnot (bvand (bvnot $e42) $e48)) (bvnot (bvand (bvnot $e41) (bvnot $e48))))))) (let (($e56 (bvand $e48 (bvand $e53 (bvnot BTOR_24034@__VLG_I_stallwbX502))))) (bvand (bvand (bvand (bvand (bvand (ite (and (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[0]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b00 $e52) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b00 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b01 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[1]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b01 $e52) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b10 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[2]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b10 $e52) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e47)) (bvnot (bvand (bvnot $e47) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e48))))))) (bvand $e54 (ite (= #b11 $e51) #b1 #b0))) (= (bvand (bvnot BTOR_24034@dummy_resetX501) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e39) #b1 #b0) $e43)) $e48)) (bvnot (bvand (bvnot $e48) (bvnot (bvand ((_ extract 0 0) |RTL_scoreboard[3]|) (bvnot $e49))))))) (bvand $e55 (ite (= #b11 $e52) #b1 #b0)))) #b1 #b0) (bvnot (bvand __RESETED__ BTOR_24034@dummy_resetX502))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar0__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar0__recorder (ite (= #b1 (bvand (ite $e19 #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0)))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar1__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar1__recorder (ite (= #b1 (bvand (ite (and $e20 (not $e19)) #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1)))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar2__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar2__recorder (ite (= #b1 (bvand (ite (and $e21 (not $e20) (not $e19)) #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e11 (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2)))) #b1 #b0))))) (bvnot (bvand (bvand (bvand __STARTED__ (bvnot __auxvar3__recorder_sn_condmet)) $e56) (bvnot (ite (= __auxvar3__recorder (ite (= #b1 (bvand (ite (and (= #b11 $e18) (not $e21) (not $e20) (not $e19)) #b1 #b0) $e50)) $e40 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3)))) #b1 #b0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
A22: ts.asmpt @0
A22: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 ((_ extract 7 6) inst))) (let (($e4 ((_ extract 1 0) inst))) (let (($e5 (bvand RTL_if_id_valid (bvnot v1)))) (let (($e6 (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e5)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))))) (bvnot $e5))))))) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvand (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (ite (= ((_ extract 1 1) |RTL_scoreboard[0]|) (bvand (ite (= #b00 $e4) #b1 #b0) $e6)) #b1 #b0)) (ite (= ((_ extract 1 1) |RTL_scoreboard[1]|) (bvand (ite (= #b01 $e4) #b1 #b0) $e6)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[2]|) (bvand (ite (= #b10 $e4) #b1 #b0) $e6)) #b1 #b0))) (ite (= ((_ extract 1 1) |RTL_scoreboard[3]|) (bvand (ite (= #b11 $e4) #b1 #b0) $e6)) #b1 #b0))) (bvnot (bvand __RESETED__ BTOR_40136@dummy_resetX575)))))))))
A23: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_40136@__VLG_I_stallexX575)) (bvand (bvnot BTOR_40136@rstX447) (bvnot BTOR_40136@dummy_resetX575)))@0
A23: (bvand (bvand (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))) (bvnot BTOR_40136@__VLG_I_stallexX575)) (bvand (bvnot BTOR_40136@rstX447) (bvnot BTOR_40136@dummy_resetX575)))
A24: ts.asmpt @1
A24: (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))))) (let (($e3 (bvand RTL_if_id_valid (bvnot (ite $e2 #b1 #b0))))) (let (($e4 ((_ extract 1 0) RTL_if_id_inst))) (let (($e5 (bvand w1 v1))) (let (($e6 (= #b00 rd1))) (let (($e7 (bvand w2 v2))) (let (($e8 (= #b00 rd2))) (let (($e9 (= #b01 rd1))) (let (($e10 (= #b01 rd2))) (let (($e11 (= #b10 rd1))) (let (($e12 (= #b10 rd2))) (let (($e13 ((_ extract 7 6) inst_id))) (let (($e14 (= #b10 $e13))) (let (($e15 (= #b01 $e13))) (let (($e16 (= #b11 $e13))) (let (($e17 (and (not $e15) (not $e14) (not $e16)))) (let (($e18 ((_ extract 1 0) inst_id))) (let (($e19 (= #b00 $e18))) (let (($e20 (= #b01 $e18))) (let (($e21 (= #b10 $e18))) (let (($e22 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e23 ((_ extract 5 4) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e30 (ite $e14 $e22 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e29))))) (let (($e31 ((_ extract 3 2) inst_id))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e32 s3 (ite $e33 s2 (ite $e34 s1 (ite $e35 s0 #b00)))))) (let (($e37 (ite (= #b00 $e36) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e36) ex_val $e29)))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 (ite $e15 (bvadd $e30 $e37) (ite $e14 $e22 (ite $e16 (bvnot (bvand $e30 $e37)) #b00000000))))) (let (($e41 (bvand (bvnot (bvand v1 (ite $e17 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e42 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e43 (bvand RTL_if_id_valid (bvnot v1)))) (let (($e44 (bvand v1 $e41))) (let (($e45 (ite (= #b1 (bvand (ite (and $e21 (not $e20) (not $e19)) #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e11 (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e12 (not $e10) (not $e8)) #b1 #b0))) ex_val reg2))))) (let (($e46 (ite (= #b1 (bvand (ite (and $e20 (not $e19)) #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and $e10 (not $e8)) #b1 #b0))) ex_val reg1))))) (let (($e47 (ite (= #b1 (bvand (ite (and (= #b11 $e18) (not $e21) (not $e20) (not $e19)) #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd1) (not $e11) (not $e9) (not $e6)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite (and (= #b11 rd2) (not $e12) (not $e10) (not $e8)) #b1 #b0))) ex_val reg3))))) (let (($e48 (ite (= #b1 (bvand (ite $e19 #b1 #b0) $e44)) $e40 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) $e29 (ite (= #b1 (bvand $e7 (ite $e8 #b1 #b0))) ex_val reg0))))) (let (($e49 (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e43)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e17 #b1 #b0))))) (bvnot $e43)))))) (let (($e50 (bvand (bvnot $e42) $e49))) (let (($e51 (bvand (bvnot $e42) (bvnot BTOR_40136@__VLG_I_stallexX575)))) (let (($e52 (bvand (bvnot $e42) BTOR_40136@__VLG_I_stallexX575))) (let (($e53 (bvand RTL_if_id_valid (bvnot $e52)))) (let (($e54 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@____auxvar0__recorder_init__X575 __auxvar0__recorder))) (let (($e55 (bvand (bvnot BTOR_40136@dummy_resetX575) $e51))) (let (($e56 (ite (= #b1 (bvand (bvnot BTOR_40136@dummy_resetX575) $e53)) $e4 $e39))) (let (($e57 (ite (= #b1 $e55) $e39 $e18))) (let (($e58 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@____auxvar2__recorder_init__X575 __auxvar2__recorder))) (let (($e59 (bvand (bvnot BTOR_40136@dummy_resetX575) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot $e52)))))) (let (($e60 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@____auxvar3__recorder_init__X575 __auxvar3__recorder))) (let (($e61 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@ILA_r0_randinitX575 ILA_r0))) (let (($e62 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@ILA_r1_randinitX575 ILA_r1))) (let (($e63 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@ILA_r2_randinitX575 ILA_r2))) (let (($e64 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@ILA_r3_randinitX575 ILA_r3))) (let (($e65 (ite (= #b1 BTOR_40136@rstX447) BTOR_40136@____auxvar1__recorder_init__X575 __auxvar1__recorder))) (let (($e66 (bvand (bvand (bvnot (bvand (ite $e2 #b1 #b0) $e53)) (bvnot (bvand (bvnot $e49) (bvnot $e53)))) $e59))) (let (($e67 (bvand $e55 (bvand (bvnot (bvand (bvnot $e49) $e51)) (bvnot (bvand (bvnot $e41) (bvnot $e51))))))) (let (($e68 (bvand (bvnot __STARTED__) (bvnot BTOR_40136@rstX447)))) (let (($e69 (bvand (bvand (bvnot BTOR_40136@rstX447) $e51) (bvand $e55 (bvnot BTOR_40136@__VLG_I_stallwbX576))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand BTOR_40136@rstX447 (bvnot (bvand BTOR_40136@__VLG_I_inst_validX576 (bvnot (bvand (bvnot (bvand (bvnot (bvand BTOR_40136@__VLG_I_inst_validX575 (bvnot (bvand RTL_if_id_valid $e52)))) (bvnot (bvand $e52 (bvand RTL_if_id_valid (bvnot BTOR_40136@dummy_resetX575)))))) (bvand $e59 (bvnot (bvand (bvnot BTOR_40136@__VLG_I_stallexX576) (bvnot (bvand $e55 BTOR_40136@__VLG_I_stallwbX576))))))))))) (bvnot (bvand BTOR_40136@rstX447 (bvnot (ite (= BTOR_40136@__VLG_I_instX576 BTOR_40136@__ILA_I_instX576) #b1 #b0))))) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b00 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[0]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b00 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b00 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[0]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b00 $e57) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b01 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[1]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b01 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b01 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[1]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b01 $e57) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b10 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[2]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b10 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b10 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[2]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b10 $e57) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand $e3 (ite (= #b11 $e4) #b1 #b0))) $e53)) (bvnot (bvand (bvnot $e53) (bvnot (bvand ((_ extract 1 1) |RTL_scoreboard[3]|) (bvnot $e51))))))) (bvand $e66 (ite (= #b11 $e56) #b1 #b0))) #b1 #b0)) (ite (= (bvand (bvnot BTOR_40136@dummy_resetX575) (bvand (bvnot (bvand (bvnot (bvand (ite (= #b11 $e39) #b1 #b0) $e50)) $e51)) (bvnot (bvand (bvnot ((_ extract 0 0) |RTL_scoreboard[3]|)) (bvnot $e51))))) (bvand $e67 (ite (= #b11 $e57) #b1 #b0))) #b1 #b0)) (bvnot (bvand BTOR_40136@rstX447 (bvnot (ite (= #b01 ((_ extract 7 6) BTOR_40136@__ILA_I_instX576)) #b1 #b0))))) (bvnot (bvand (bvnot (bvand (bvnot __RESETED__) (bvnot BTOR_40136@rstX447))) BTOR_40136@dummy_resetX576))) (bvnot (bvand (bvand (bvand (bvnot (bvand __auxvar0__recorder_sn_condmet (bvnot BTOR_40136@rstX447))) (bvnot $e68)) $e69) (bvnot (ite (= $e48 $e54) #b1 #b0))))) (bvnot (bvand (bvand $e69 (bvand (bvnot (bvand __auxvar1__recorder_sn_condmet (bvnot BTOR_40136@rstX447))) (bvnot $e68))) (bvnot (ite (= $e46 $e65) #b1 #b0))))) (bvnot (bvand (bvand $e69 (bvand (bvnot (bvand __auxvar2__recorder_sn_condmet (bvnot BTOR_40136@rstX447))) (bvnot $e68))) (bvnot (ite (= $e45 $e58) #b1 #b0))))) (bvnot (bvand (bvand $e69 (bvand (bvnot (bvand __auxvar3__recorder_sn_condmet (bvnot BTOR_40136@rstX447))) (bvnot $e68))) (bvnot (ite (= $e47 $e60) #b1 #b0))))) (bvnot (bvand BTOR_40136@rstX447 (bvnot (bvand (bvnot (bvand BTOR_40136@rstX447 (bvnot (ite (= $e54 $e61) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_40136@rstX447) (bvnot (ite (= $e48 $e61) #b1 #b0))))))))) (bvnot (bvand BTOR_40136@rstX447 (bvnot (bvand (bvnot (bvand BTOR_40136@rstX447 (bvnot (ite (= $e62 $e65) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_40136@rstX447) (bvnot (ite (= $e46 $e62) #b1 #b0))))))))) (bvnot (bvand BTOR_40136@rstX447 (bvnot (bvand (bvnot (bvand BTOR_40136@rstX447 (bvnot (ite (= $e58 $e63) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_40136@rstX447) (bvnot (ite (= $e45 $e63) #b1 #b0))))))))) (bvnot (bvand BTOR_40136@rstX447 (bvnot (bvand (bvnot (bvand BTOR_40136@rstX447 (bvnot (ite (= $e60 $e64) #b1 #b0)))) (bvnot (bvand (bvnot BTOR_40136@rstX447) (bvnot (ite (= $e47 $e64) #b1 #b0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
number of state wb-wb in total: 19 --> 19
step: wb --> finish
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (and (= #b10 $e2) (not (= #b01 $e2)) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))
| RTL_registers[0]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))
| RTL_registers[3]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (and (= #b11 $e2) (not (= #b10 $e2)) (not (= #b01 $e2)) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))
| RTL_registers[1]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (and (= #b01 $e2) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 7 6) inst))) (let (($e11 (and (not (= #b01 $e10)) (not (= #b10 $e10)) (not (= #b11 $e10))))) (let (($e12 ((_ extract 1 0) inst))) (let (($e13 (= #b00 $e12))) (let (($e14 (= #b01 $e12))) (let (($e15 (= #b10 $e12))) (let (($e16 (bvand (bvnot v1) inst_v))) (let (($e17 (bvand (bvnot (bvand (ite $e11 #b1 #b0) $e16)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e16)))))) (let (($e18 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e19 ((_ extract 5 4) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 ((_ extract 3 2) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (bvand (bvnot (bvand (bvnot $e17) (bvnot $e18))) (bvnot (bvand (bvnot w2) $e18))))) (let (($e30 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e13 #b1 #b0))))))) (let (($e31 (bvand (concat $e30 (bvnot v2)) (concat $e30 ((_ extract 0 0) s0))))) (let (($e32 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e14 #b1 #b0))))))) (let (($e33 (bvand (concat $e32 (bvnot v2)) (concat $e32 ((_ extract 0 0) s1))))) (let (($e34 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e15 #b1 #b0))))))) (let (($e35 (bvand (concat $e34 (bvnot v2)) (concat $e34 ((_ extract 0 0) s2))))) (let (($e36 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b11 $e12) #b1 #b0))))))) (let (($e37 (bvand (concat $e36 (bvnot v2)) (concat $e36 ((_ extract 0 0) s3))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite $e11 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e17))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e29))))) (ite (and $e15 (not $e14) (not $e13)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e25 $e37 (ite $e26 $e35 (ite $e27 $e33 (ite $e28 $e31 #b00))))) (ite $e25 $e8 (ite $e26 $e6 (ite $e27 $e7 (ite $e28 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e37 (ite $e21 $e35 (ite $e22 $e33 (ite $e23 $e31 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e18) $e29))) $e5 $e6)))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 7 6) inst))) (let (($e11 (and (not (= #b01 $e10)) (not (= #b10 $e10)) (not (= #b11 $e10))))) (let (($e12 ((_ extract 1 0) inst))) (let (($e13 (= #b00 $e12))) (let (($e14 (bvand (bvnot v1) inst_v))) (let (($e15 (bvand (bvnot (bvand (ite $e11 #b1 #b0) $e14)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e14)))))) (let (($e16 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e17 ((_ extract 5 4) inst))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 ((_ extract 3 2) inst))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (bvand (bvnot (bvand (bvnot $e15) (bvnot $e16))) (bvnot (bvand (bvnot w2) $e16))))) (let (($e28 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e13 #b1 #b0))))))) (let (($e29 (bvand (concat $e28 (bvnot v2)) (concat $e28 ((_ extract 0 0) s0))))) (let (($e30 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b01 $e12) #b1 #b0))))))) (let (($e31 (bvand (concat $e30 (bvnot v2)) (concat $e30 ((_ extract 0 0) s1))))) (let (($e32 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b10 $e12) #b1 #b0))))))) (let (($e33 (bvand (concat $e32 (bvnot v2)) (concat $e32 ((_ extract 0 0) s2))))) (let (($e34 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b11 $e12) #b1 #b0))))))) (let (($e35 (bvand (concat $e34 (bvnot v2)) (concat $e34 ((_ extract 0 0) s3))))) (ite (= #b1 (bvand (ite $e13 #b1 #b0) (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite $e11 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e15))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e27))))))) (bvadd (ite (= #b00 (ite $e23 $e35 (ite $e24 $e33 (ite $e25 $e31 (ite $e26 $e29 #b00))))) (ite $e23 $e8 (ite $e24 $e6 (ite $e25 $e7 (ite $e26 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e18 $e35 (ite $e19 $e33 (ite $e20 $e31 (ite $e21 $e29 #b00))))) (ite $e18 $e8 (ite $e19 $e6 (ite $e20 $e7 (ite $e21 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand (bvnot $e16) $e27))) $e5 $e9)))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 7 6) inst))) (let (($e11 (and (not (= #b01 $e10)) (not (= #b10 $e10)) (not (= #b11 $e10))))) (let (($e12 ((_ extract 1 0) inst))) (let (($e13 (= #b00 $e12))) (let (($e14 (= #b01 $e12))) (let (($e15 (= #b10 $e12))) (let (($e16 (= #b11 $e12))) (let (($e17 (bvand (bvnot v1) inst_v))) (let (($e18 (bvand (bvnot (bvand (ite $e11 #b1 #b0) $e17)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e17)))))) (let (($e19 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e20 ((_ extract 5 4) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 ((_ extract 3 2) inst))) (let (($e26 (= #b11 $e25))) (let (($e27 (= #b10 $e25))) (let (($e28 (= #b01 $e25))) (let (($e29 (= #b00 $e25))) (let (($e30 (bvand (bvnot (bvand (bvnot $e18) (bvnot $e19))) (bvnot (bvand (bvnot w2) $e19))))) (let (($e31 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e13 #b1 #b0))))))) (let (($e32 (bvand (concat $e31 (bvnot v2)) (concat $e31 ((_ extract 0 0) s0))))) (let (($e33 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e14 #b1 #b0))))))) (let (($e34 (bvand (concat $e33 (bvnot v2)) (concat $e33 ((_ extract 0 0) s1))))) (let (($e35 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e15 #b1 #b0))))))) (let (($e36 (bvand (concat $e35 (bvnot v2)) (concat $e35 ((_ extract 0 0) s2))))) (let (($e37 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e16 #b1 #b0))))))) (let (($e38 (bvand (concat $e37 (bvnot v2)) (concat $e37 ((_ extract 0 0) s3))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite $e11 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e18))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e30))))) (ite (and $e16 (not $e15) (not $e14) (not $e13)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e26 $e38 (ite $e27 $e36 (ite $e28 $e34 (ite $e29 $e32 #b00))))) (ite $e26 $e8 (ite $e27 $e6 (ite $e28 $e7 (ite $e29 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e38 (ite $e22 $e36 (ite $e23 $e34 (ite $e24 $e32 #b00))))) (ite $e21 $e8 (ite $e22 $e6 (ite $e23 $e7 (ite $e24 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e19) $e30))) $e5 $e8))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 7 6) inst))) (let (($e11 (and (not (= #b01 $e10)) (not (= #b10 $e10)) (not (= #b11 $e10))))) (let (($e12 ((_ extract 1 0) inst))) (let (($e13 (= #b00 $e12))) (let (($e14 (= #b01 $e12))) (let (($e15 (bvand (bvnot v1) inst_v))) (let (($e16 (bvand (bvnot (bvand (ite $e11 #b1 #b0) $e15)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e15)))))) (let (($e17 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e18 ((_ extract 5 4) inst))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (bvand (bvnot (bvand (bvnot $e16) (bvnot $e17))) (bvnot (bvand (bvnot w2) $e17))))) (let (($e29 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s0)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e13 #b1 #b0))))))) (let (($e30 (bvand (concat $e29 (bvnot v2)) (concat $e29 ((_ extract 0 0) s0))))) (let (($e31 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s1)))) (bvnot (bvand (bvnot v1) (bvnot (ite $e14 #b1 #b0))))))) (let (($e32 (bvand (concat $e31 (bvnot v2)) (concat $e31 ((_ extract 0 0) s1))))) (let (($e33 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s2)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b10 $e12) #b1 #b0))))))) (let (($e34 (bvand (concat $e33 (bvnot v2)) (concat $e33 ((_ extract 0 0) s2))))) (let (($e35 (bvand (bvnot (bvand v1 (bvnot ((_ extract 1 1) s3)))) (bvnot (bvand (bvnot v1) (bvnot (ite (= #b11 $e12) #b1 #b0))))))) (let (($e36 (bvand (concat $e35 (bvnot v2)) (concat $e35 ((_ extract 0 0) s3))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite $e11 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e16))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e28))))) (ite (and $e14 (not $e13)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e24 $e36 (ite $e25 $e34 (ite $e26 $e32 (ite $e27 $e30 #b00))))) (ite $e24 $e8 (ite $e25 $e6 (ite $e26 $e7 (ite $e27 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e19 $e36 (ite $e20 $e34 (ite $e21 $e32 (ite $e22 $e30 #b00))))) (ite $e19 $e8 (ite $e20 $e6 (ite $e21 $e7 (ite $e22 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand (bvnot $e17) $e28))) $e5 $e7))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 (bvand (bvnot v1) inst_v))) (let (($e5 (bvand (bvnot (bvand (ite $e3 #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand w1 (bvnot v0))) (bvnot $e4)))))) (let (($e6 (bvand (bvnot v1) (bvnot inst_v)))) (let (($e7 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e8 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e7) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e8)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot $e5))))) (bvnot $e8))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot $e5) (bvnot $e6))) (bvnot (bvand (bvnot w2) $e6)))) $e7)))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (bvand #b10 s1))) (let (($e11 (bvand #b10 s2))) (let (($e12 (bvand #b10 s3))) (let (($e13 (bvand #b10 s0))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e26))))) (ite (and (= #b10 $e15) (not (= #b01 $e15)) (not (= #b00 $e15))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e12 (ite $e18 $e11 (ite $e19 $e10 (ite $e20 $e13 #b00))))) (ite $e17 $e8 (ite $e18 $e6 (ite $e19 $e7 (ite $e20 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e22 $e12 (ite $e23 $e11 (ite $e24 $e10 (ite $e25 $e13 #b00))))) (ite $e22 $e8 (ite $e23 $e6 (ite $e24 $e7 (ite $e25 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 $e26))) $e5 $e6))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (bvand #b10 s1))) (let (($e11 (bvand #b10 s2))) (let (($e12 (bvand #b10 s3))) (let (($e13 (bvand #b10 s0))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e25))))))) (bvadd (ite (= #b00 (ite $e16 $e12 (ite $e17 $e11 (ite $e18 $e10 (ite $e19 $e13 #b00))))) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e12 (ite $e22 $e11 (ite $e23 $e10 (ite $e24 $e13 #b00))))) (ite $e21 $e8 (ite $e22 $e6 (ite $e23 $e7 (ite $e24 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 $e25))) $e5 $e9)))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (bvand #b10 s1))) (let (($e11 (bvand #b10 s2))) (let (($e12 (bvand #b10 s3))) (let (($e13 (bvand #b10 s0))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e26))))) (ite (and (= #b11 $e15) (not (= #b10 $e15)) (not (= #b01 $e15)) (not (= #b00 $e15))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e12 (ite $e18 $e11 (ite $e19 $e10 (ite $e20 $e13 #b00))))) (ite $e17 $e8 (ite $e18 $e6 (ite $e19 $e7 (ite $e20 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e22 $e12 (ite $e23 $e11 (ite $e24 $e10 (ite $e25 $e13 #b00))))) (ite $e22 $e8 (ite $e23 $e6 (ite $e24 $e7 (ite $e25 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 $e26))) $e5 $e8))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (bvand #b10 s1))) (let (($e11 (bvand #b10 s2))) (let (($e12 (bvand #b10 s3))) (let (($e13 (bvand #b10 s0))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))) (bvnot (bvand (bvnot inst_v) (bvnot $e26))))) (ite (and (= #b01 $e15) (not (= #b00 $e15))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e12 (ite $e18 $e11 (ite $e19 $e10 (ite $e20 $e13 #b00))))) (ite $e17 $e8 (ite $e18 $e6 (ite $e19 $e7 (ite $e20 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e22 $e12 (ite $e23 $e11 (ite $e24 $e10 (ite $e25 $e13 #b00))))) (ite $e22 $e8 (ite $e23 $e6 (ite $e24 $e7 (ite $e25 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 $e26))) $e5 $e7))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))) (let (($e4 (bvand RTL_if_id_valid (bvnot inst_v)))) (bvand (bvnot (bvand (bvnot $e3) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e4)) (bvnot (bvand (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))) (bvnot $e4))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))) $e3)))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot inst_v)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand v1 (ite (and (= #b10 $e14) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e12 (ite $e17 $e11 (ite $e18 $e10 (ite $e19 $e13 #b00))))) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e12 (ite $e22 $e11 (ite $e23 $e10 (ite $e24 $e13 #b00))))) (ite $e21 $e8 (ite $e22 $e6 (ite $e23 $e7 (ite $e24 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e6))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (ite (= #b1 (bvand v1 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e5 $e9)))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand v1 (ite (and (= #b11 $e14) (not (= #b10 $e14)) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e12 (ite $e17 $e11 (ite $e18 $e10 (ite $e19 $e13 #b00))))) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e12 (ite $e22 $e11 (ite $e23 $e10 (ite $e24 $e13 #b00))))) (ite $e21 $e8 (ite $e22 $e6 (ite $e23 $e7 (ite $e24 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e8))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand v1 (ite (and (= #b01 $e14) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e12 (ite $e17 $e11 (ite $e18 $e10 (ite $e19 $e13 #b00))))) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e12 (ite $e22 $e11 (ite $e23 $e10 (ite $e24 $e13 #b00))))) (ite $e21 $e8 (ite $e22 $e6 (ite $e23 $e7 (ite $e24 $e9 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e5 $e7))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2)))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 (concat #b0 ((_ extract 1 1) s1)))) (let (($e11 (concat #b0 ((_ extract 1 1) s2)))) (let (($e12 (concat #b0 ((_ extract 1 1) s3)))) (let (($e13 (concat #b0 ((_ extract 1 1) s0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e12 (ite $e16 $e11 (ite $e17 $e10 (ite $e18 $e13 #b00))))) (ite $e15 $e8 (ite $e16 $e6 (ite $e17 $e7 (ite $e18 $e9 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e12 (ite $e21 $e11 (ite $e22 $e10 (ite $e23 $e13 #b00))))) (ite $e20 $e8 (ite $e21 $e6 (ite $e22 $e7 (ite $e23 $e9 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (= #b01 $e6))) (let (($e9 (= #b10 $e6))) (let (($e10 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e11 ((_ extract 5 4) inst_id))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 (ite $e12 s3 (ite $e13 s2 (ite $e14 s1 (ite $e15 s0 #b00)))))) (let (($e17 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e18 (ite $e2 $e10 (ite (= #b00 $e16) (ite $e12 reg3 (ite $e13 reg2 (ite $e14 reg1 (ite $e15 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val $e17))))) (let (($e19 ((_ extract 3 2) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e17)))) (let (($e26 ((_ extract 1 0) inst))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 ((_ extract 3 2) inst))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 (ite $e3 (bvadd $e18 $e25) (ite $e2 $e10 (ite $e4 (bvnot (bvand $e18 $e25)) #b00000000))))) (let (($e38 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e39 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e40 (concat (ite (and $e9 (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e41 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e42 (ite $e33 $e41 (ite $e34 $e40 (ite $e35 $e39 (ite $e36 $e38 #b00)))))) (let (($e43 (ite $e28 $e41 (ite $e29 $e40 (ite $e30 $e39 (ite $e31 $e38 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b10 $e26) (not (= #b01 $e26)) (not (= #b00 $e26))) #b1 #b0))) (bvadd (ite (= #b00 $e42) (ite $e33 reg3 (ite $e34 reg2 (ite $e35 reg1 (ite $e36 reg0 #b00000000)))) (ite (= #b01 $e42) ex_val $e37)) (ite (= #b00 $e43) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e43) ex_val $e37))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e9 (not $e8) (not $e7)) #b1 #b0))) $e37 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e9 ((_ extract 5 4) inst_id))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (let (($e15 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e16 (ite $e2 $e8 (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e15))))) (let (($e17 ((_ extract 3 2) inst_id))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 (ite $e18 s3 (ite $e19 s2 (ite $e20 s1 (ite $e21 s0 #b00)))))) (let (($e23 (ite (= #b00 $e22) (ite $e18 reg3 (ite $e19 reg2 (ite $e20 reg1 (ite $e21 reg0 #b00000000)))) (ite (= #b01 $e22) ex_val $e15)))) (let (($e24 ((_ extract 5 4) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 ((_ extract 3 2) inst))) (let (($e30 (= #b11 $e29))) (let (($e31 (= #b10 $e29))) (let (($e32 (= #b01 $e29))) (let (($e33 (= #b00 $e29))) (let (($e34 (ite $e3 (bvadd $e16 $e23) (ite $e2 $e8 (ite $e4 (bvnot (bvand $e16 $e23)) #b00000000))))) (let (($e35 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e38 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e39 (ite $e30 $e38 (ite $e31 $e37 (ite $e32 $e36 (ite $e33 $e35 #b00)))))) (let (($e40 (ite $e25 $e38 (ite $e26 $e37 (ite $e27 $e36 (ite $e28 $e35 #b00)))))) (ite (= #b1 (bvand v0 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 $e39) (ite $e30 reg3 (ite $e31 reg2 (ite $e32 reg1 (ite $e33 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e34)) (ite (= #b00 $e40) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e40) ex_val $e34))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite $e7 #b1 #b0))) $e34 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (= #b01 $e6))) (let (($e9 (= #b10 $e6))) (let (($e10 (= #b11 $e6))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e2 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 1 0) inst))) (let (($e28 ((_ extract 5 4) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (= #b11 $e33))) (let (($e35 (= #b10 $e33))) (let (($e36 (= #b01 $e33))) (let (($e37 (= #b00 $e33))) (let (($e38 (ite $e3 (bvadd $e19 $e26) (ite $e2 $e11 (ite $e4 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e39 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e40 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e41 (concat (ite (and $e9 (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e42 (concat (ite (and $e10 (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e43 (ite $e34 $e42 (ite $e35 $e41 (ite $e36 $e40 (ite $e37 $e39 #b00)))))) (let (($e44 (ite $e29 $e42 (ite $e30 $e41 (ite $e31 $e40 (ite $e32 $e39 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b11 $e27) (not (= #b10 $e27)) (not (= #b01 $e27)) (not (= #b00 $e27))) #b1 #b0))) (bvadd (ite (= #b00 $e43) (ite $e34 reg3 (ite $e35 reg2 (ite $e36 reg1 (ite $e37 reg0 #b00000000)))) (ite (= #b01 $e43) ex_val $e38)) (ite (= #b00 $e44) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e44) ex_val $e38))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e10 (not $e9) (not $e8) (not $e7)) #b1 #b0))) $e38 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (= #b01 $e6))) (let (($e9 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e10 ((_ extract 5 4) inst_id))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 (ite $e11 s3 (ite $e12 s2 (ite $e13 s1 (ite $e14 s0 #b00)))))) (let (($e16 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e17 (ite $e2 $e9 (ite (= #b00 $e15) (ite $e11 reg3 (ite $e12 reg2 (ite $e13 reg1 (ite $e14 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val $e16))))) (let (($e18 ((_ extract 3 2) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e16)))) (let (($e25 ((_ extract 1 0) inst))) (let (($e26 ((_ extract 5 4) inst))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e3 (bvadd $e17 $e24) (ite $e2 $e9 (ite $e4 (bvnot (bvand $e17 $e24)) #b00000000))))) (let (($e37 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e38 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e39 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e40 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e41 (ite $e32 $e40 (ite $e33 $e39 (ite $e34 $e38 (ite $e35 $e37 #b00)))))) (let (($e42 (ite $e27 $e40 (ite $e28 $e39 (ite $e29 $e38 (ite $e30 $e37 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b01 $e25) (not (= #b00 $e25))) #b1 #b0))) (bvadd (ite (= #b00 $e41) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e41) ex_val $e36)) (ite (= #b00 $e42) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e42) ex_val $e36))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e8 (not $e7)) #b1 #b0))) $e36 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (= #b01 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e34 ((_ extract 7 6) inst))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 (and $e11 (not $e9)))) (let (($e37 (and $e12 (not $e9)))) (let (($e38 (and $e13 (not $e9)))) (let (($e39 (and (= #b11 $e10) (not $e9)))) (let (($e40 ((_ extract 5 4) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 ((_ extract 3 2) inst))) (let (($e46 (= #b11 $e45))) (let (($e47 (= #b10 $e45))) (let (($e48 (= #b01 $e45))) (let (($e49 (= #b00 $e45))) (let (($e50 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e51 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e52 (bvand (concat (ite $e36 #b1 #b0) (bvnot v2)) (concat (ite $e36 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e53 (bvand (concat (ite $e37 #b1 #b0) (bvnot v2)) (concat (ite $e37 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e54 (bvand (concat (ite $e38 #b1 #b0) (bvnot v2)) (concat (ite $e38 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e55 (bvand (concat (ite $e39 #b1 #b0) (bvnot v2)) (concat (ite $e39 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e34)) (not (= #b10 $e34)) (not (= #b11 $e34))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e51))))) (ite (and (= #b10 $e35) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e41 $e55 (ite $e42 $e54 (ite $e43 $e53 (ite $e44 $e52 #b00))))) (ite $e41 $e32 (ite $e42 $e30 (ite $e43 $e31 (ite $e44 $e33 #b00000000)))) $e50) (ite (= #b00 (ite $e46 $e55 (ite $e47 $e54 (ite $e48 $e53 (ite $e49 $e52 #b00))))) (ite $e46 $e32 (ite $e47 $e30 (ite $e48 $e31 (ite $e49 $e33 #b00000000)))) $e50)) (ite (= #b1 (bvand (ite (and $e13 (not $e12) (not $e11)) #b1 #b0) (bvand v0 $e51))) $e50 $e30)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 ((_ extract 7 6) inst))) (let (($e33 (and $e11 (not $e9)))) (let (($e34 (and (= #b01 $e10) (not $e9)))) (let (($e35 (and (= #b10 $e10) (not $e9)))) (let (($e36 (and (= #b11 $e10) (not $e9)))) (let (($e37 ((_ extract 5 4) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 ((_ extract 3 2) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e48 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e49 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e50 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e51 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e52 (bvand (concat (ite $e36 #b1 #b0) (bvnot v2)) (concat (ite $e36 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e32)) (not (= #b10 $e32)) (not (= #b11 $e32))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e48))))))) (bvadd (ite (= #b00 (ite $e38 $e52 (ite $e39 $e51 (ite $e40 $e50 (ite $e41 $e49 #b00))))) (ite $e38 $e30 (ite $e39 $e28 (ite $e40 $e29 (ite $e41 $e31 #b00000000)))) $e47) (ite (= #b00 (ite $e43 $e52 (ite $e44 $e51 (ite $e45 $e50 (ite $e46 $e49 #b00))))) (ite $e43 $e30 (ite $e44 $e28 (ite $e45 $e29 (ite $e46 $e31 #b00000000)))) $e47)) (ite (= #b1 (bvand (ite $e11 #b1 #b0) (bvand v0 $e48))) $e47 $e31))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (= #b01 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e35 ((_ extract 7 6) inst))) (let (($e36 ((_ extract 1 0) inst))) (let (($e37 (and $e11 (not $e9)))) (let (($e38 (and $e12 (not $e9)))) (let (($e39 (and $e13 (not $e9)))) (let (($e40 (and $e14 (not $e9)))) (let (($e41 ((_ extract 5 4) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 ((_ extract 3 2) inst))) (let (($e47 (= #b11 $e46))) (let (($e48 (= #b10 $e46))) (let (($e49 (= #b01 $e46))) (let (($e50 (= #b00 $e46))) (let (($e51 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e52 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e53 (bvand (concat (ite $e37 #b1 #b0) (bvnot v2)) (concat (ite $e37 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e54 (bvand (concat (ite $e38 #b1 #b0) (bvnot v2)) (concat (ite $e38 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e55 (bvand (concat (ite $e39 #b1 #b0) (bvnot v2)) (concat (ite $e39 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e56 (bvand (concat (ite $e40 #b1 #b0) (bvnot v2)) (concat (ite $e40 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e35)) (not (= #b10 $e35)) (not (= #b11 $e35))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e52))))) (ite (and (= #b11 $e36) (not (= #b10 $e36)) (not (= #b01 $e36)) (not (= #b00 $e36))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 (ite $e45 $e53 #b00))))) (ite $e42 $e33 (ite $e43 $e31 (ite $e44 $e32 (ite $e45 $e34 #b00000000)))) $e51) (ite (= #b00 (ite $e47 $e56 (ite $e48 $e55 (ite $e49 $e54 (ite $e50 $e53 #b00))))) (ite $e47 $e33 (ite $e48 $e31 (ite $e49 $e32 (ite $e50 $e34 #b00000000)))) $e51)) (ite (= #b1 (bvand (ite (and $e14 (not $e13) (not $e12) (not $e11)) #b1 #b0) (bvand v0 $e52))) $e51 $e33))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (= #b01 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e33 ((_ extract 7 6) inst))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 (and $e11 (not $e9)))) (let (($e36 (and $e12 (not $e9)))) (let (($e37 (and (= #b10 $e10) (not $e9)))) (let (($e38 (and (= #b11 $e10) (not $e9)))) (let (($e39 ((_ extract 5 4) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 ((_ extract 3 2) inst))) (let (($e45 (= #b11 $e44))) (let (($e46 (= #b10 $e44))) (let (($e47 (= #b01 $e44))) (let (($e48 (= #b00 $e44))) (let (($e49 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e50 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e51 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e52 (bvand (concat (ite $e36 #b1 #b0) (bvnot v2)) (concat (ite $e36 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e53 (bvand (concat (ite $e37 #b1 #b0) (bvnot v2)) (concat (ite $e37 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e54 (bvand (concat (ite $e38 #b1 #b0) (bvnot v2)) (concat (ite $e38 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e33)) (not (= #b10 $e33)) (not (= #b11 $e33))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e50))))) (ite (and (= #b01 $e34) (not (= #b00 $e34))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e40 $e54 (ite $e41 $e53 (ite $e42 $e52 (ite $e43 $e51 #b00))))) (ite $e40 $e31 (ite $e41 $e29 (ite $e42 $e30 (ite $e43 $e32 #b00000000)))) $e49) (ite (= #b00 (ite $e45 $e54 (ite $e46 $e53 (ite $e47 $e52 (ite $e48 $e51 #b00))))) (ite $e45 $e31 (ite $e46 $e29 (ite $e47 $e30 (ite $e48 $e32 #b00000000)))) $e49)) (ite (= #b1 (bvand (ite (and $e12 (not $e11)) #b1 #b0) (bvand v0 $e50))) $e49 $e30))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v0 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))) $e5)))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (= #b01 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e46 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e47 (concat (ite (and $e12 (not $e9)) #b1 #b0) v1))) (let (($e48 (concat (ite (and $e13 (not $e9)) #b1 #b0) v1))) (let (($e49 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (and (= #b10 $e34) (not (= #b01 $e34)) (not (= #b00 $e34))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e41 $e49 (ite $e42 $e48 (ite $e43 $e47 (ite $e44 $e46 #b00))))) (ite $e41 $e32 (ite $e42 $e30 (ite $e43 $e31 (ite $e44 $e33 #b00000000)))) $e45) (ite (= #b00 (ite $e36 $e49 (ite $e37 $e48 (ite $e38 $e47 (ite $e39 $e46 #b00))))) (ite $e36 $e32 (ite $e37 $e30 (ite $e38 $e31 (ite $e39 $e33 #b00000000)))) $e45)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e13 (not $e12) (not $e11)) #b1 #b0))) $e45 $e30)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 ((_ extract 5 4) inst))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 ((_ extract 3 2) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e43 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e44 (concat (ite (and (= #b01 $e10) (not $e9)) #b1 #b0) v1))) (let (($e45 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e46 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e38 $e46 (ite $e39 $e45 (ite $e40 $e44 (ite $e41 $e43 #b00))))) (ite $e38 $e30 (ite $e39 $e28 (ite $e40 $e29 (ite $e41 $e31 #b00000000)))) $e42) (ite (= #b00 (ite $e33 $e46 (ite $e34 $e45 (ite $e35 $e44 (ite $e36 $e43 #b00))))) (ite $e33 $e30 (ite $e34 $e28 (ite $e35 $e29 (ite $e36 $e31 #b00000000)))) $e42)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite $e11 #b1 #b0))) $e42 $e31))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (= #b01 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 ((_ extract 5 4) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 ((_ extract 3 2) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e47 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e48 (concat (ite (and $e12 (not $e9)) #b1 #b0) v1))) (let (($e49 (concat (ite (and $e13 (not $e9)) #b1 #b0) v1))) (let (($e50 (concat (ite (and $e14 (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (and (= #b11 $e35) (not (= #b10 $e35)) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e42 $e50 (ite $e43 $e49 (ite $e44 $e48 (ite $e45 $e47 #b00))))) (ite $e42 $e33 (ite $e43 $e31 (ite $e44 $e32 (ite $e45 $e34 #b00000000)))) $e46) (ite (= #b00 (ite $e37 $e50 (ite $e38 $e49 (ite $e39 $e48 (ite $e40 $e47 #b00))))) (ite $e37 $e33 (ite $e38 $e31 (ite $e39 $e32 (ite $e40 $e34 #b00000000)))) $e46)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e14 (not $e13) (not $e12) (not $e11)) #b1 #b0))) $e46 $e33))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (= #b01 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e33 ((_ extract 1 0) inst))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e45 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e46 (concat (ite (and $e12 (not $e9)) #b1 #b0) v1))) (let (($e47 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e48 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (and (= #b01 $e33) (not (= #b00 $e33))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e40 $e48 (ite $e41 $e47 (ite $e42 $e46 (ite $e43 $e45 #b00))))) (ite $e40 $e31 (ite $e41 $e29 (ite $e42 $e30 (ite $e43 $e32 #b00000000)))) $e44) (ite (= #b00 (ite $e35 $e48 (ite $e36 $e47 (ite $e37 $e46 (ite $e38 $e45 #b00))))) (ite $e35 $e31 (ite $e36 $e29 (ite $e37 $e30 (ite $e38 $e32 #b00000000)))) $e44)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e12 (not $e11)) #b1 #b0))) $e44 $e30))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (bvand (bvnot RTL_if_id_valid) (bvnot v0)))) (bvand (bvnot (bvand (bvnot $e3) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v0))))) (bvnot (bvand (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0) $e3))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v0)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e8 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e7 (ite (= #b10 $e9) $e5 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e8 #b00000000)))) (ite (= #b11 $e10) $e7 (ite (= #b10 $e10) $e5 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e8 #b00000000)))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b00 $e11))) (let (($e13 (= #b01 $e11))) (let (($e14 (= #b10 $e11))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e35 (concat (bvand $e10 (ite $e13 #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e36 (concat (bvand $e10 (ite $e14 #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e37 (concat (bvand $e10 (ite (= #b11 $e11) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e38 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e39 ((_ extract 7 6) inst))) (let (($e40 ((_ extract 1 0) inst))) (let (($e41 ((_ extract 5 4) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 ((_ extract 3 2) inst))) (let (($e47 (= #b11 $e46))) (let (($e48 (= #b10 $e46))) (let (($e49 (= #b01 $e46))) (let (($e50 (= #b00 $e46))) (let (($e51 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e52 (ite $e42 $e37 (ite $e43 $e36 (ite $e44 $e35 (ite $e45 $e38 #b00)))))) (let (($e53 (ite $e47 $e37 (ite $e48 $e36 (ite $e49 $e35 (ite $e50 $e38 #b00)))))) (let (($e54 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e39)) (not (= #b10 $e39)) (not (= #b11 $e39))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e54))))) (ite (and (= #b10 $e40) (not (= #b01 $e40)) (not (= #b00 $e40))) #b1 #b0))) (bvadd (ite (= #b00 $e52) (ite $e42 $e33 (ite $e43 $e31 (ite $e44 $e32 (ite $e45 $e34 #b00000000)))) (ite (= #b01 $e52) $e22 $e51)) (ite (= #b00 $e53) (ite $e47 $e33 (ite $e48 $e31 (ite $e49 $e32 (ite $e50 $e34 #b00000000)))) (ite (= #b01 $e53) $e22 $e51))) (ite (= #b1 (bvand (ite (and $e14 (not $e13) (not $e12)) #b1 #b0) (bvand v1 $e54))) $e51 (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e22 $e31)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b00 $e11))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e33 (concat (bvand $e10 (ite (= #b01 $e11) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e34 (concat (bvand $e10 (ite (= #b10 $e11) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e35 (concat (bvand $e10 (ite (= #b11 $e11) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e36 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e37 ((_ extract 7 6) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e49 (ite $e39 $e35 (ite $e40 $e34 (ite $e41 $e33 (ite $e42 $e36 #b00)))))) (let (($e50 (ite $e44 $e35 (ite $e45 $e34 (ite $e46 $e33 (ite $e47 $e36 #b00)))))) (let (($e51 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e37)) (not (= #b10 $e37)) (not (= #b11 $e37))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e51))))))) (bvadd (ite (= #b00 $e49) (ite $e39 $e31 (ite $e40 $e29 (ite $e41 $e30 (ite $e42 $e32 #b00000000)))) (ite (= #b01 $e49) $e20 $e48)) (ite (= #b00 $e50) (ite $e44 $e31 (ite $e45 $e29 (ite $e46 $e30 (ite $e47 $e32 #b00000000)))) (ite (= #b01 $e50) $e20 $e48))) (ite (= #b1 (bvand (ite $e12 #b1 #b0) (bvand v1 $e51))) $e48 (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e20 $e32))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b00 $e11))) (let (($e13 (= #b01 $e11))) (let (($e14 (= #b10 $e11))) (let (($e15 (= #b11 $e11))) (let (($e16 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e17 ((_ extract 5 4) inst_id))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 (ite $e18 s3 (ite $e19 s2 (ite $e20 s1 (ite $e21 s0 #b00)))))) (let (($e23 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e24 (ite $e6 $e16 (ite (= #b00 $e22) (ite $e18 reg3 (ite $e19 reg2 (ite $e20 reg1 (ite $e21 reg0 #b00000000)))) (ite (= #b01 $e22) ex_val $e23))))) (let (($e25 ((_ extract 3 2) inst_id))) (let (($e26 (= #b11 $e25))) (let (($e27 (= #b10 $e25))) (let (($e28 (= #b01 $e25))) (let (($e29 (= #b00 $e25))) (let (($e30 (ite $e26 s3 (ite $e27 s2 (ite $e28 s1 (ite $e29 s0 #b00)))))) (let (($e31 (ite (= #b00 $e30) (ite $e26 reg3 (ite $e27 reg2 (ite $e28 reg1 (ite $e29 reg0 #b00000000)))) (ite (= #b01 $e30) ex_val $e23)))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e36 (concat (bvand $e10 (ite $e13 #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e37 (concat (bvand $e10 (ite $e14 #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e38 (concat (bvand $e10 (ite $e15 #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e39 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e40 ((_ extract 7 6) inst))) (let (($e41 ((_ extract 1 0) inst))) (let (($e42 ((_ extract 5 4) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 ((_ extract 3 2) inst))) (let (($e48 (= #b11 $e47))) (let (($e49 (= #b10 $e47))) (let (($e50 (= #b01 $e47))) (let (($e51 (= #b00 $e47))) (let (($e52 (ite $e7 (bvadd $e24 $e31) (ite $e6 $e16 (ite $e8 (bvnot (bvand $e24 $e31)) #b00000000))))) (let (($e53 (ite $e43 $e38 (ite $e44 $e37 (ite $e45 $e36 (ite $e46 $e39 #b00)))))) (let (($e54 (ite $e48 $e38 (ite $e49 $e37 (ite $e50 $e36 (ite $e51 $e39 #b00)))))) (let (($e55 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e40)) (not (= #b10 $e40)) (not (= #b11 $e40))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e55))))) (ite (and (= #b11 $e41) (not (= #b10 $e41)) (not (= #b01 $e41)) (not (= #b00 $e41))) #b1 #b0))) (bvadd (ite (= #b00 $e53) (ite $e43 $e34 (ite $e44 $e32 (ite $e45 $e33 (ite $e46 $e35 #b00000000)))) (ite (= #b01 $e53) $e23 $e52)) (ite (= #b00 $e54) (ite $e48 $e34 (ite $e49 $e32 (ite $e50 $e33 (ite $e51 $e35 #b00000000)))) (ite (= #b01 $e54) $e23 $e52))) (ite (= #b1 (bvand (ite (and $e15 (not $e14) (not $e13) (not $e12)) #b1 #b0) (bvand v1 $e55))) $e52 (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e23 $e34))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b00 $e11))) (let (($e13 (= #b01 $e11))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e34 (concat (bvand $e10 (ite $e13 #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e35 (concat (bvand $e10 (ite (= #b10 $e11) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e36 (concat (bvand $e10 (ite (= #b11 $e11) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e37 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 ((_ extract 5 4) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 ((_ extract 3 2) inst))) (let (($e46 (= #b11 $e45))) (let (($e47 (= #b10 $e45))) (let (($e48 (= #b01 $e45))) (let (($e49 (= #b00 $e45))) (let (($e50 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e51 (ite $e41 $e36 (ite $e42 $e35 (ite $e43 $e34 (ite $e44 $e37 #b00)))))) (let (($e52 (ite $e46 $e36 (ite $e47 $e35 (ite $e48 $e34 (ite $e49 $e37 #b00)))))) (let (($e53 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e53))))) (ite (and (= #b01 $e39) (not (= #b00 $e39))) #b1 #b0))) (bvadd (ite (= #b00 $e51) (ite $e41 $e32 (ite $e42 $e30 (ite $e43 $e31 (ite $e44 $e33 #b00000000)))) (ite (= #b01 $e51) $e21 $e50)) (ite (= #b00 $e52) (ite $e46 $e32 (ite $e47 $e30 (ite $e48 $e31 (ite $e49 $e33 #b00000000)))) (ite (= #b01 $e52) $e21 $e50))) (ite (= #b1 (bvand (ite (and $e13 (not $e12)) #b1 #b0) (bvand v1 $e53))) $e50 (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e21 $e31))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e8 (ite $e17 $e6 (ite $e18 $e7 (ite $e19 $e9 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e8 (ite $e12 $e6 (ite $e13 $e7 (ite $e14 $e9 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (= #b01 $e14))) (let (($e18 (bvand $e13 (ite $e17 #b1 #b0)))) (let (($e19 (= #b10 $e14))) (let (($e20 (bvand $e13 (ite $e19 #b1 #b0)))) (let (($e21 (bvand $e13 (ite (= #b11 $e14) #b1 #b0)))) (let (($e22 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e23 ((_ extract 5 4) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e30 (ite $e9 $e22 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e29))))) (let (($e31 ((_ extract 3 2) inst_id))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e32 s3 (ite $e33 s2 (ite $e34 s1 (ite $e35 s0 #b00)))))) (let (($e37 (ite (= #b00 $e36) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e36) ex_val $e29)))) (let (($e38 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e39 ((_ extract 7 6) inst))) (let (($e40 ((_ extract 1 0) inst))) (let (($e41 (and $e6 (not $e4) (not $e1)))) (let (($e42 ((_ extract 5 4) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 ((_ extract 3 2) inst))) (let (($e48 (= #b11 $e47))) (let (($e49 (= #b10 $e47))) (let (($e50 (= #b01 $e47))) (let (($e51 (= #b00 $e47))) (let (($e52 (ite $e10 (bvadd $e30 $e37) (ite $e9 $e22 (ite $e11 (bvnot (bvand $e30 $e37)) #b00000000))))) (let (($e53 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e54 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e29 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e55 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e56 (ite (= #b1 (bvand w1 (ite $e41 #b1 #b0))) $e29 $e38))) (let (($e57 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e58 (bvand (concat $e16 (ite (bvult #b01 s0) #b1 #b0)) (concat $e16 #b0)))) (let (($e59 (bvand (concat $e18 (ite (bvult #b01 s1) #b1 #b0)) (concat $e18 #b0)))) (let (($e60 (bvand (concat $e20 (ite (bvult #b01 s2) #b1 #b0)) (concat $e20 #b0)))) (let (($e61 (bvand (concat $e21 (ite (bvult #b01 s3) #b1 #b0)) (concat $e21 #b0)))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e39)) (not (= #b10 $e39)) (not (= #b11 $e39))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e53))))) (ite (and (= #b10 $e40) (not (= #b01 $e40)) (not (= #b00 $e40))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e43 $e61 (ite $e44 $e60 (ite $e45 $e59 (ite $e46 $e58 #b00))))) (ite $e43 $e57 (ite $e44 $e56 (ite $e45 $e55 (ite $e46 $e54 #b00000000)))) $e52) (ite (= #b00 (ite $e48 $e61 (ite $e49 $e60 (ite $e50 $e59 (ite $e51 $e58 #b00))))) (ite $e48 $e57 (ite $e49 $e56 (ite $e50 $e55 (ite $e51 $e54 #b00000000)))) $e52)) (ite (= #b1 (bvand (ite (and $e19 (not $e17) (not $e15)) #b1 #b0) (bvand v1 $e53))) $e52 (ite (= #b1 (bvand (bvand w1 v1) (ite $e41 #b1 #b0))) $e29 $e38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[0]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (bvand $e13 (ite (= #b01 $e14) #b1 #b0)))) (let (($e18 (bvand $e13 (ite (= #b10 $e14) #b1 #b0)))) (let (($e19 (bvand $e13 (ite (= #b11 $e14) #b1 #b0)))) (let (($e20 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e21 ((_ extract 5 4) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e28 (ite $e9 $e20 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e27))))) (let (($e29 ((_ extract 3 2) inst_id))) (let (($e30 (= #b11 $e29))) (let (($e31 (= #b10 $e29))) (let (($e32 (= #b01 $e29))) (let (($e33 (= #b00 $e29))) (let (($e34 (ite $e30 s3 (ite $e31 s2 (ite $e32 s1 (ite $e33 s0 #b00)))))) (let (($e35 (ite (= #b00 $e34) (ite $e30 reg3 (ite $e31 reg2 (ite $e32 reg1 (ite $e33 reg0 #b00000000)))) (ite (= #b01 $e34) ex_val $e27)))) (let (($e36 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e37 ((_ extract 7 6) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (ite $e10 (bvadd $e28 $e35) (ite $e9 $e20 (ite $e11 (bvnot (bvand $e28 $e35)) #b00000000))))) (let (($e49 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e50 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e27 $e36))) (let (($e51 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e27 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e52 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e27 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e53 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e27 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e54 (bvand (concat $e16 (ite (bvult #b01 s0) #b1 #b0)) (concat $e16 #b0)))) (let (($e55 (bvand (concat $e17 (ite (bvult #b01 s1) #b1 #b0)) (concat $e17 #b0)))) (let (($e56 (bvand (concat $e18 (ite (bvult #b01 s2) #b1 #b0)) (concat $e18 #b0)))) (let (($e57 (bvand (concat $e19 (ite (bvult #b01 s3) #b1 #b0)) (concat $e19 #b0)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e37)) (not (= #b10 $e37)) (not (= #b11 $e37))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e49))))))) (bvadd (ite (= #b00 (ite $e39 $e57 (ite $e40 $e56 (ite $e41 $e55 (ite $e42 $e54 #b00))))) (ite $e39 $e53 (ite $e40 $e52 (ite $e41 $e51 (ite $e42 $e50 #b00000000)))) $e48) (ite (= #b00 (ite $e44 $e57 (ite $e45 $e56 (ite $e46 $e55 (ite $e47 $e54 #b00))))) (ite $e44 $e53 (ite $e45 $e52 (ite $e46 $e51 (ite $e47 $e50 #b00000000)))) $e48)) (ite (= #b1 (bvand (ite $e15 #b1 #b0) (bvand v1 $e49))) $e48 (ite (= #b1 (bvand (bvand w1 v1) (ite $e1 #b1 #b0))) $e27 $e36))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (= #b01 $e14))) (let (($e18 (bvand $e13 (ite $e17 #b1 #b0)))) (let (($e19 (= #b10 $e14))) (let (($e20 (bvand $e13 (ite $e19 #b1 #b0)))) (let (($e21 (= #b11 $e14))) (let (($e22 (bvand $e13 (ite $e21 #b1 #b0)))) (let (($e23 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e24 ((_ extract 5 4) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e31 (ite $e9 $e23 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e30))))) (let (($e32 ((_ extract 3 2) inst_id))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 (ite $e33 s3 (ite $e34 s2 (ite $e35 s1 (ite $e36 s0 #b00)))))) (let (($e38 (ite (= #b00 $e37) (ite $e33 reg3 (ite $e34 reg2 (ite $e35 reg1 (ite $e36 reg0 #b00000000)))) (ite (= #b01 $e37) ex_val $e30)))) (let (($e39 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e40 ((_ extract 7 6) inst))) (let (($e41 ((_ extract 1 0) inst))) (let (($e42 (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)))) (let (($e43 ((_ extract 5 4) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 ((_ extract 3 2) inst))) (let (($e49 (= #b11 $e48))) (let (($e50 (= #b10 $e48))) (let (($e51 (= #b01 $e48))) (let (($e52 (= #b00 $e48))) (let (($e53 (ite $e10 (bvadd $e31 $e38) (ite $e9 $e23 (ite $e11 (bvnot (bvand $e31 $e38)) #b00000000))))) (let (($e54 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e55 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e30 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e56 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e30 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e57 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e30 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e58 (ite (= #b1 (bvand w1 (ite $e42 #b1 #b0))) $e30 $e39))) (let (($e59 (bvand (concat $e16 (ite (bvult #b01 s0) #b1 #b0)) (concat $e16 #b0)))) (let (($e60 (bvand (concat $e18 (ite (bvult #b01 s1) #b1 #b0)) (concat $e18 #b0)))) (let (($e61 (bvand (concat $e20 (ite (bvult #b01 s2) #b1 #b0)) (concat $e20 #b0)))) (let (($e62 (bvand (concat $e22 (ite (bvult #b01 s3) #b1 #b0)) (concat $e22 #b0)))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e40)) (not (= #b10 $e40)) (not (= #b11 $e40))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e54))))) (ite (and (= #b11 $e41) (not (= #b10 $e41)) (not (= #b01 $e41)) (not (= #b00 $e41))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e58 (ite $e45 $e57 (ite $e46 $e56 (ite $e47 $e55 #b00000000)))) $e53) (ite (= #b00 (ite $e49 $e62 (ite $e50 $e61 (ite $e51 $e60 (ite $e52 $e59 #b00))))) (ite $e49 $e58 (ite $e50 $e57 (ite $e51 $e56 (ite $e52 $e55 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and $e21 (not $e19) (not $e17) (not $e15)) #b1 #b0) (bvand v1 $e54))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e42 #b1 #b0))) $e30 $e39)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b00 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (= #b01 $e14))) (let (($e18 (bvand $e13 (ite $e17 #b1 #b0)))) (let (($e19 (bvand $e13 (ite (= #b10 $e14) #b1 #b0)))) (let (($e20 (bvand $e13 (ite (= #b11 $e14) #b1 #b0)))) (let (($e21 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e22 ((_ extract 5 4) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e29 (ite $e9 $e21 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e28))))) (let (($e30 ((_ extract 3 2) inst_id))) (let (($e31 (= #b11 $e30))) (let (($e32 (= #b10 $e30))) (let (($e33 (= #b01 $e30))) (let (($e34 (= #b00 $e30))) (let (($e35 (ite $e31 s3 (ite $e32 s2 (ite $e33 s1 (ite $e34 s0 #b00)))))) (let (($e36 (ite (= #b00 $e35) (ite $e31 reg3 (ite $e32 reg2 (ite $e33 reg1 (ite $e34 reg0 #b00000000)))) (ite (= #b01 $e35) ex_val $e28)))) (let (($e37 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 (and $e4 (not $e1)))) (let (($e41 ((_ extract 5 4) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 ((_ extract 3 2) inst))) (let (($e47 (= #b11 $e46))) (let (($e48 (= #b10 $e46))) (let (($e49 (= #b01 $e46))) (let (($e50 (= #b00 $e46))) (let (($e51 (ite $e10 (bvadd $e29 $e36) (ite $e9 $e21 (ite $e11 (bvnot (bvand $e29 $e36)) #b00000000))))) (let (($e52 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e53 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e28 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e54 (ite (= #b1 (bvand w1 (ite $e40 #b1 #b0))) $e28 $e37))) (let (($e55 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e28 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e56 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e28 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e57 (bvand (concat $e16 (ite (bvult #b01 s0) #b1 #b0)) (concat $e16 #b0)))) (let (($e58 (bvand (concat $e18 (ite (bvult #b01 s1) #b1 #b0)) (concat $e18 #b0)))) (let (($e59 (bvand (concat $e19 (ite (bvult #b01 s2) #b1 #b0)) (concat $e19 #b0)))) (let (($e60 (bvand (concat $e20 (ite (bvult #b01 s3) #b1 #b0)) (concat $e20 #b0)))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e52))))) (ite (and (= #b01 $e39) (not (= #b00 $e39))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e42 $e60 (ite $e43 $e59 (ite $e44 $e58 (ite $e45 $e57 #b00))))) (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 (ite $e45 $e53 #b00000000)))) $e51) (ite (= #b00 (ite $e47 $e60 (ite $e48 $e59 (ite $e49 $e58 (ite $e50 $e57 #b00))))) (ite $e47 $e56 (ite $e48 $e55 (ite $e49 $e54 (ite $e50 $e53 #b00000000)))) $e51)) (ite (= #b1 (bvand (ite (and $e17 (not $e15)) #b1 #b0) (bvand v1 $e52))) $e51 (ite (= #b1 (bvand (bvand w1 v1) (ite $e40 #b1 #b0))) $e28 $e37)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 ((_ extract 7 6) inst_id))) (let (($e3 (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))))) (let (($e4 ((_ extract 7 6) inst))) (let (($e5 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (let (($e6 (bvand RTL_if_id_valid (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e5) (bvnot (bvand (bvnot (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) $e6)) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e4)) (not (= #b10 $e4)) (not (= #b11 $e4))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e3 #b1 #b0))))) (bvnot $e6))))))) (bvnot (bvand (bvnot (bvand (bvnot (bvand v1 (ite $e3 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))) $e5)))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1)))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| stage_tracker_if_id_iuv| #b0                 
| __START__           | #b0                 
number of state wb-finish in total: 19 --> 19
Program running time: 684 (s)
