GET INVAR: ILA_r3_randinit
GET INVAR: ILA_r2_randinit
GET INVAR: ILA_r1_randinit
GET INVAR: ILA_r0_randinit
GET INVAR: __ILA_I_inst
GET INVAR: __VLG_I_dummy_read_rf
GET INVAR: __VLG_I_inst
GET INVAR: __VLG_I_inst_valid
GET INVAR: __VLG_I_stallex
GET INVAR: __VLG_I_stallid
GET INVAR: __VLG_I_stallwb
GET INVAR: ____auxvar0__recorder_init__
GET INVAR: ____auxvar1__recorder_init__
GET INVAR: ____auxvar2__recorder_init__
GET INVAR: ____auxvar3__recorder_init__
GET INVAR: clk
GET INVAR: dummy_reset
GET INVAR: rst
GET SV: RTL_id_ex_valid
GET SV: RTL_ex_wb_valid
GET SV: RTL_ex_wb_rd
GET SV: RTL_ex_wb_reg_wen
GET SV: RTL_id_ex_rd
GET SV: RTL_id_ex_reg_wen
GET SV: RTL_if_id_valid
GET SV: RTL_registers[0]
GET SV: RTL_registers[1]
GET SV: RTL_registers[2]
GET SV: RTL_registers[3]
GET SV: RTL_scoreboard[0]
GET SV: RTL_scoreboard[1]
GET SV: RTL_scoreboard[2]
GET SV: RTL_scoreboard[3]
GET SV: ILA_r0
GET SV: ILA_r1
GET SV: ILA_r2
GET SV: ILA_r3
GET SV: ILA___COUNTER_start__n3
GET SV: RTL_ex_wb_val
GET SV: RTL_if_id_inst
GET SV: RTL_id_ex_operand1
GET SV: RTL_id_ex_operand2
GET SV: RTL_id_ex_op
input108
rst
____auxvar3__recorder_init__
____auxvar2__recorder_init__
__VLG_I_stallid
ILA_r1_randinit
ILA_r0_randinit
__ILA_I_inst
ILA_r2_randinit
____auxvar1__recorder_init__
__VLG_I_dummy_read_rf
dummy_reset
__VLG_I_inst
clk
____auxvar0__recorder_init__
__VLG_I_inst_valid
ILA_r3_randinit
__VLG_I_stallex
__VLG_I_stallwb


 state var: 

RTL_id_ex_operand1
RTL_ex_wb_val
stage_tracker_if_id_iuv
__auxvar3__recorder_sn_vhold
RTL_if_id_inst
__auxvar2__recorder_sn_vhold
stage_tracker_id_ex_iuv
__auxvar1__recorder_sn_vhold
__auxvar1__recorder_sn_condmet
stage_tracker_ex_wb_iuv
RTL_scoreboard[1]
RTL_registers[3]
__auxvar0__recorder
RTL_if_id_valid
__auxvar2__recorder
RTL_id_ex_op
RTL_id_ex_reg_wen
ILA_r3
RTL_ex_wb_valid
ILA___COUNTER_start__n3
RTL_scoreboard[0]
RTL_scoreboard[2]
__2ndENDED__
__auxvar3__recorder_sn_condmet
__START__
RTL_id_ex_operand2
RTL_ex_wb_reg_wen
RTL_registers[0]
__auxvar2__recorder_sn_condmet
RTL_ex_wb_rd
__auxvar0__recorder_sn_vhold
RTL_id_ex_rd
RTL_registers[2]
RTL_id_ex_valid
__CYCLE_CNT__
RTL_scoreboard[3]
__STARTED__
__ENDED__
__RESETED__
__auxvar0__recorder_sn_condmet
__auxvar3__recorder
stage_tracker_wb_iuv
RTL_registers[1]
ILA_r1
ILA_r0
ILA_r2
__auxvar1__recorder
#b1
#b1
step: start
WARNING: shadowing input assignment as assigned by prev-state __ILA_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[3]    | reg3                
| RTL_if_id_valid     | v0                  
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_reg_wen   | w1                  
| RTL_id_ex_op        | op                  
| RTL_ex_wb_valid     | v2                  
| RTL_registers[1]    | reg1                
| __VLG_I_inst_valid  | inst_v              
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[0]   | s0                  
| RTL_scoreboard[2]   | s2                  
| RTL_scoreboard[1]   | s1                  
| RTL_id_ex_operand2  | oper2               
| RTL_ex_wb_reg_wen   | w2                  
| RTL_registers[0]    | reg0                
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_valid     | v1                  
| RTL_id_ex_rd        | rd1                 
| RTL_registers[2]    | reg2                
| RTL_scoreboard[3]   | s3                  
| __VLG_I_inst        | inst                
| RTL_if_id_inst      | inst_id             
A0: init
A0: (bvand (bvand (bvnot stage_tracker_if_id_iuv1) (bvand (bvnot stage_tracker_id_ex_iuv1) (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvand (bvnot stage_tracker_ex_wb_iuv1) (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvand __START__1 (bvand __RESETED__1 (bvand (bvnot __ENDED__1) (bvand (bvnot __STARTED__1) (bvand (bvnot stage_tracker_wb_iuv1) (bvand (bvnot __2ndENDED__1) (ite (= #b00000000 __CYCLE_CNT__1) #b1 #b0)))))))))))))) (ite (= #b00000000 ILA___COUNTER_start__n31) #b1 #b0))
A1: ts.asmpt @0
A1: (let (($e1 (bvand w1 v1))) (let (($e2 (bvand w2 v2))) (let (($e3 (bvand (bvnot __START__1) (bvnot __STARTED__1)))) (let (($e4 (bvand stage_tracker_ex_wb_iuv1 (bvand v2 (bvnot __VLG_I_stallwbX1))))) (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvand (bvnot (bvand __START__1 (bvnot (bvand inst_v (bvnot (bvand v0 (bvnot (bvand (bvnot __VLG_I_stallidX1) (bvnot (bvand v1 (bvnot (bvand (bvnot __VLG_I_stallexX1) (bvnot (bvand v2 __VLG_I_stallwbX1)))))))))))))) (bvnot (bvand __START__1 (bvnot (ite (= ila_inst inst) #b1 #b0))))) (ite (= ((_ extract 1 1) s0) (bvand $e1 (ite (= #b00 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s0) (bvand $e2 (ite (= #b00 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s1) (bvand $e1 (ite (= #b01 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s1) (bvand $e2 (ite (= #b01 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s2) (bvand $e1 (ite (= #b10 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s2) (bvand $e2 (ite (= #b10 rd2) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 1 1) s3) (bvand $e1 (ite (= #b11 rd1) #b1 #b0))) #b1 #b0)) (ite (= ((_ extract 0 0) s3) (bvand $e2 (ite (= #b11 rd2) #b1 #b0))) #b1 #b0)) (bvnot (bvand __START__1 (bvnot (ite (= #b01 ((_ extract 7 6) ila_inst)) #b1 #b0))))) (bvnot (bvand __RESETED__1 dummy_resetX1))) (bvnot (bvand (bvand (bvand (bvnot __auxvar0__recorder_sn_condmet1) (bvnot $e3)) $e4) (bvnot (ite (= reg0 __auxvar0__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar1__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg1 __auxvar1__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar2__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg2 __auxvar2__recorder1) #b1 #b0))))) (bvnot (bvand (bvand $e4 (bvand (bvnot __auxvar3__recorder_sn_condmet1) (bvnot $e3))) (bvnot (ite (= reg3 __auxvar3__recorder1) #b1 #b0))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar0__recorder1 ILA_r01) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg0 ILA_r01) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r11 __auxvar1__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg1 ILA_r11) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= __auxvar2__recorder1 ILA_r21) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg2 ILA_r21) #b1 #b0))))))))) (bvnot (bvand __START__1 (bvnot (bvand (bvnot (bvand __START__1 (bvnot (ite (= ILA_r31 __auxvar3__recorder1) #b1 #b0)))) (bvnot (bvand (bvnot __START__1) (bvnot (ite (= reg3 ILA_r31) #b1 #b0)))))))))))))
step: start --> id
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
>> [[] ptr: 0]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
new state!
>> [[rst == 1 ] ptr: 1]  WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst
WARNING: shadowing input assignment as assigned by prev-state __VLG_I_inst_valid
not reachable.
=============================
Finish!
Get #state: 6
number of state start-id: 1-> 6
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | reg0                
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_registers[1]    | reg1                
| RTL_scoreboard[3]   | s3                  
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | reg2                
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | s1                  
| RTL_scoreboard[0]   | s0                  
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | s2                  
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | reg3                
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (bvand #b10 s3)     
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (bvand #b10 s1)     
| RTL_scoreboard[0]   | (bvand #b10 s0)     
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (bvand #b10 s2)     
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | w1                  
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (concat #b0 ((_ extract 1 1) s3))
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (concat #b0 ((_ extract 1 1) s1))
| RTL_scoreboard[0]   | (concat #b0 ((_ extract 1 1) s0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (concat #b0 ((_ extract 1 1) s2))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (= w1 v1)           
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | reg0                
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_registers[1]    | reg1                
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)))
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | reg2                
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)))
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | reg3                
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
number of state start-id in total: 1 --> 6
step: id --> id
ret_term2:(bvnot (bvand RTL_if_id_valid (bvand (bvnot __VLG_I_stallid) (bvnot (bvand RTL_id_ex_valid (bvnot (bvand (bvnot __VLG_I_stallex) (bvnot (bvand __VLG_I_stallwb RTL_ex_wb_valid)))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 4 Stack: 4
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 4 Stack: 4
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 6
number of state id-id: 1-> 6
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
| RTL_registers[0]    | reg0                
| RTL_scoreboard[0]   | s0                  
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | s2                  
| RTL_ex_wb_rd        | rd2                 
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_operand2  | oper2               
| RTL_registers[3]    | reg3                
| RTL_if_id_inst      | inst                
| RTL_scoreboard[3]   | s3                  
| RTL_scoreboard[1]   | s1                  
| RTL_id_ex_rd        | rd1                 
| RTL_registers[2]    | reg2                
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | reg1                
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_id_ex_op        | op                  
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (bvand #b10 s3)     
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (bvand #b10 s1)     
| RTL_scoreboard[0]   | (bvand #b10 s0)     
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (bvand #b10 s2)     
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | w1                  
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (concat (bvnot v1) $e1) (concat ((_ extract 1 1) s3) $e1)))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (let (($e1 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (concat (bvnot v1) $e1) (concat ((_ extract 1 1) s1) $e1)))
| RTL_scoreboard[0]   | (let (($e1 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (concat (bvnot v1) $e1) (concat ((_ extract 1 1) s0) $e1)))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (let (($e1 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (concat (bvnot v1) $e1) (concat ((_ extract 1 1) s2) $e1)))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | (= w1 v1)           
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand w1 (bvnot v0)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 1 1) s3))) (let (($e2 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (bvand (concat (bvnot v1) $e2) (concat (bvnot v1) (bvnot v1))) (bvand (concat $e1 $e2) (concat $e1 (bvnot v1))))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 1 1) s1))) (let (($e2 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (bvand (concat (bvnot v1) $e2) (concat (bvnot v1) (bvnot v1))) (bvand (concat $e1 $e2) (concat $e1 (bvnot v1))))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (bvand (concat (bvnot v1) $e2) (concat (bvnot v1) (bvnot v1))) (bvand (concat $e1 $e2) (concat $e1 (bvnot v1))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 1 1) s2))) (let (($e2 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0)))))))))) (bvand (bvand (concat (bvnot v1) $e2) (concat (bvnot v1) (bvnot v1))) (bvand (concat $e1 $e2) (concat $e1 (bvnot v1))))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (concat #b0 ((_ extract 1 1) s3))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (concat #b0 ((_ extract 1 1) s1))
| RTL_scoreboard[0]   | (concat #b0 ((_ extract 1 1) s0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (concat #b0 ((_ extract 1 1) s2))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | #b00                
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | #b00                
| RTL_scoreboard[0]   | #b00                
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | #b00                
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | (bvand w1 (bvnot v0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 3
number of state id-id: 1-> 3
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_reg_wen   | w1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (bvand #b10 s0)     
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (bvand #b10 s2)     
| RTL_ex_wb_rd        | rd2                 
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_operand2  | oper2               
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[3]   | (bvand #b10 s3)     
| RTL_scoreboard[1]   | (bvand #b10 s1)     
| RTL_id_ex_rd        | rd1                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_id_ex_op        | op                  
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 1 1) s3))) (let (($e2 (bvand (bvand w1 v1) (ite (= #b11 rd1) #b1 #b0)))) (bvand (bvand (concat (bvnot v1) v1) (concat (bvnot v1) $e2)) (bvand (concat $e1 v1) (concat $e1 $e2)))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 1 1) s1))) (let (($e2 (bvand (bvand w1 v1) (ite (= #b01 rd1) #b1 #b0)))) (bvand (bvand (concat (bvnot v1) v1) (concat (bvnot v1) $e2)) (bvand (concat $e1 v1) (concat $e1 $e2)))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0)))) (bvand (bvand (concat (bvnot v1) v1) (concat (bvnot v1) $e2)) (bvand (concat $e1 v1) (concat $e1 $e2)))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 1 1) s2))) (let (($e2 (bvand (bvand w1 v1) (ite (= #b10 rd1) #b1 #b0)))) (bvand (bvand (concat (bvnot v1) v1) (concat (bvnot v1) $e2)) (bvand (concat $e1 v1) (concat $e1 $e2)))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | w1                  
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | (bvand (concat (bvnot v1) #b0) (concat ((_ extract 1 1) s3) #b0))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | (bvand (concat (bvnot v1) #b0) (concat ((_ extract 1 1) s1) #b0))
| RTL_scoreboard[0]   | (bvand (concat (bvnot v1) #b0) (concat ((_ extract 1 1) s0) #b0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (bvand (concat (bvnot v1) #b0) (concat ((_ extract 1 1) s2) #b0))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | inst_v              
| RTL_id_ex_reg_wen   | w1                  
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state id-id: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_reg_wen   | (= w1 v1)           
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (concat #b0 ((_ extract 1 1) s0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (concat #b0 ((_ extract 1 1) s2))
| RTL_ex_wb_rd        | rd1                 
| RTL_if_id_valid     | v1                  
| RTL_id_ex_operand2  | oper2               
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[3]   | (concat #b0 ((_ extract 1 1) s3))
| RTL_scoreboard[1]   | (concat #b0 ((_ extract 1 1) s1))
| RTL_id_ex_rd        | rd1                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_op        | op                  
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | op                  
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | #b00                
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | oper1               
| RTL_id_ex_rd        | rd1                 
| RTL_scoreboard[1]   | #b00                
| RTL_scoreboard[0]   | #b00                
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | #b00                
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | oper2               
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (= w1 v1)           
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 4 Stack: 4
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 4 Stack: 4
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 6
number of state id-id: 1-> 6
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[0]    | reg0                
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)))
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)))
| RTL_ex_wb_rd        | rd2                 
| RTL_if_id_valid     | v0                  
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[3]    | reg3                
| RTL_if_id_inst      | inst                
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)))
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[2]    | reg2                
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | reg1                
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s3) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s1) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s0) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (= #b01 s2) #b1 #b0)) (concat $e2 (bvnot v2)))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s3) #b1 #b0))))))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s1) #b1 #b0))))))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s0) #b1 #b0))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s2) #b1 #b0))))))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s3) #b1 #b0))))))) (concat #b0 (bvnot v0))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s1) #b1 #b0))))))) (concat #b0 (bvnot v0))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s0) #b1 #b0))))))) (concat #b0 (bvnot v0))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (concat #b0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot v2) (ite (= #b01 s2) #b1 #b0))))))) (concat #b0 (bvnot v0))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat #b0 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (ite (= #b00 rd2) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg0))))))))))))))))))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg1)))))))))))))))))))))))
| RTL_scoreboard[3]   | #b00                
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | #b00                
| RTL_scoreboard[0]   | #b00                
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | #b00                
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 3
number of state id-id: 1-> 3
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_ex_wb_val       | ex_val              
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_ex_wb_rd        | rd2                 
| RTL_if_id_valid     | v0                  
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) v1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat v1 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat v1 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat v1 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat v1 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_scoreboard[3]   | #b00                
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | #b00                
| RTL_scoreboard[0]   | #b00                
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | #b00                
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v0                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 4 Stack: 4
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 4 Stack: 4
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 3 Stack: 3
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 6
number of state id-id: 1-> 6
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))
| RTL_ex_wb_rd        | rd1                 
| RTL_if_id_valid     | v1                  
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_if_id_inst      | inst                
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (concat (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b11 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s3) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b01 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s1) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s0) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (bvand (bvand v0 (bvnot (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (ite (= #b10 ((_ extract 1 0) inst_id)) #b1 #b0)))) (bvand (concat $e2 (ite (bvult #b01 s2) #b1 #b0)) (concat $e2 (bvnot v1)))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b11 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s3) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b01 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s1) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b00 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s0) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b10 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s2) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b11 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s3) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b01 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s1) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b00 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s0) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b10 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s2) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b11 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s3) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b01 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s1) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b00 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s0) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b10 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s2) #b1 #b0))))))) (bvand (concat (bvnot v1) $e4) (concat (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)) $e4))))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst_id)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_scoreboard[3]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b11 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s3) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_id_ex_valid     | #b0                 
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b10 ((_ extract 7 6) inst_id)) (concat #b0000 ((_ extract 5 2) inst_id)) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst_id)
| RTL_scoreboard[1]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b01 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s1) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_scoreboard[0]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b00 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s0) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_scoreboard[2]   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 (= #b10 ((_ extract 1 0) inst_id)))) (let (($e4 (bvand (bvand v0 (bvnot (ite $e2 #b1 #b0))) (ite $e3 #b1 #b0)))) (let (($e5 (bvand (bvnot (bvand v1 (bvnot (bvand (ite $e3 #b1 #b0) (bvand v1 (bvnot (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (ite (bvult #b01 s2) #b1 #b0))))))) (bvand (bvand (concat (bvnot v1) (bvnot v1)) (concat (bvnot v1) $e5)) (bvand (concat $e4 (bvnot v1)) (concat $e4 $e5))))))))
| RTL_if_id_inst      | inst                
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst_id))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_if_id_valid     | v1                  
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
number of state id-id in total: 6 --> 26
step: id --> ex
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  new state!
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 3
number of state id-ex: 1-> 3
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | reg2                
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[3]    | reg3                
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | reg1                
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v2                  
| RTL_registers[0]    | reg0                
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | (ite (= #b1 v1) rd1 rd2)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 5 4) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 5 4) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 5 4) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 3 2) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand w1 (bvnot v0)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 3 2) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | (ite (= #b1 v1) rd1 rd2)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 3 2) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 3 2) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 3 2) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 5 4) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 3 2) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (and (= #b00 $e10) (not $e9)))) (let (($e33 (and (= #b01 $e10) (not $e9)))) (let (($e34 (and (= #b10 $e10) (not $e9)))) (let (($e35 (and (= #b11 $e10) (not $e9)))) (ite (= #b00 (ite $e28 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e29 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e30 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e31 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (and (= #b00 $e10) (not $e9)))) (let (($e33 (and (= #b01 $e10) (not $e9)))) (let (($e34 (and (= #b10 $e10) (not $e9)))) (let (($e35 (and (= #b11 $e10) (not $e9)))) (ite (= #b00 (ite $e28 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e29 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e30 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e31 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 5 4) inst))) (let (($e30 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e31 (bvand v2 (bvnot (bvshl #b1 w2))))) (ite (= #b11 $e29) (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg3)) (ite (= #b10 $e29) (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg2)) (ite (= #b01 $e29) (ite (and (not $e11) $e10 (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e31)) ex_val reg1)) (ite (= #b00 $e29) (ite (and $e11 (not $e8)) $e30 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e31)) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 3 2) inst))) (let (($e30 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e31 (bvand v2 (bvnot (bvshl #b1 w2))))) (ite (= #b11 $e29) (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg3)) (ite (= #b10 $e29) (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg2)) (ite (= #b01 $e29) (ite (and (not $e11) $e10 (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e31)) ex_val reg1)) (ite (= #b00 $e29) (ite (and $e11 (not $e8)) $e30 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e31)) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (ite (= #b00 rd2) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg0))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)) (ite $e38 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)) (ite $e38 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
>> [[] ptr: 0]  not concrete. Retry with deeper choice.
>> [[rst == 0 ] ptr: 1]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2]  not reachable.
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 ] ptr: 3]  not concrete. Retry with deeper choice.
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4]  new state!
>> [[rst == 0 RTL_id_go == 1 RTL_ex_go == 1 ] ptr: 3]  not reachable.
>> [[rst == 1 ] ptr: 1]  not reachable.
=============================
Finish!
Get #state: 2
number of state id-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state id-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
number of state id-ex in total: 26 --> 37
step: ex --> ex
ret_term2:(bvnot (bvand RTL_id_ex_valid (bvand (bvnot __VLG_I_stallex) (bvnot (bvand __VLG_I_stallwb RTL_ex_wb_valid)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_valid     | v2                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_registers[1]    | reg1                
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | reg3                
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[2]    | reg2                
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | reg0                
| RTL_ex_wb_val       | ex_val              
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd2                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | ex_val              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | w2                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | w2                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd2                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | ex_val              
| RTL_id_ex_reg_wen   | #b1                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | w1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 3 2) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 (ite $e2 s3 (ite $e3 s2 (ite $e4 s1 (ite $e5 s0 #b00)))))) (ite (= #b00 $e6) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e6) ex_val (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | (ite (= #b1 v1) rd1 rd2)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val)
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 5 4) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_ex_wb_valid     | inst_v              
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 5 4) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 5 4) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e5))))))) (let (($e12 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e5))))))) (let (($e13 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e5))))))) (let (($e14 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e5))))))) (ite (= #b00 (ite $e7 (bvand (concat (bvnot v1) $e11) (concat ((_ extract 1 1) s3) $e11)) (ite $e8 (bvand (concat (bvnot v1) $e14) (concat ((_ extract 1 1) s2) $e14)) (ite $e9 (bvand (concat (bvnot v1) $e12) (concat ((_ extract 1 1) s1) $e12)) (ite $e10 (bvand (concat (bvnot v1) $e13) (concat ((_ extract 1 1) s0) $e13)) #b00))))) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e9 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e10 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 5 4) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | w1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 3 2) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand w1 (bvnot v0)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | w1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | w1                  
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | w1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | w1                  
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 3 2) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | (ite (= #b1 v1) rd1 rd2)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val)
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (bvand #b10 s3) (ite $e7 (bvand #b10 s2) (ite $e8 (bvand #b10 s1) (ite $e9 (bvand #b10 s0) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 3 2) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | inst_v              
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 3 2) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 ((_ extract 3 2) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (concat (bvnot v1) v1))) (ite (= #b00 (ite $e15 (bvand (bvand $e19 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))) (ite $e16 (bvand (bvand $e19 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))) (ite $e17 (bvand (bvand $e19 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))) (ite $e18 (bvand (bvand $e19 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))) #b00))))) (ite $e15 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3) (ite $e16 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2) (ite $e17 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1) (ite $e18 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 3 2) inst))) (ite (= #b11 $e9) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e9) (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e9) (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e9) (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | inst_v              
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | rd1                 
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 5 4) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 3 2) inst))) (let (($e6 (= #b11 $e5))) (let (($e7 (= #b10 $e5))) (let (($e8 (= #b01 $e5))) (let (($e9 (= #b00 $e5))) (ite (= #b00 (ite $e6 (concat #b0 ((_ extract 1 1) s3)) (ite $e7 (concat #b0 ((_ extract 1 1) s2)) (ite $e8 (concat #b0 ((_ extract 1 1) s1)) (ite $e9 (concat #b0 ((_ extract 1 1) s0)) #b00))))) (ite $e6 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e8 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e9 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | #b1                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 5 4) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (bvand w1 (bvnot v0))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 3 2) inst))) (ite (= #b11 $e10) (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e10) (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e10) (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e10) (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)) #b00000000))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | rd1                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000)))
| RTL_id_ex_reg_wen   | #b1                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 (concat (bvand $e5 (ite (= #b11 $e6) #b1 #b0)) (ite (= #b01 s3) #b1 #b0)) (ite $e25 (concat (bvand $e5 (ite (= #b10 $e6) #b1 #b0)) (ite (= #b01 s2) #b1 #b0)) (ite $e26 (concat (bvand $e5 (ite (= #b01 $e6) #b1 #b0)) (ite (= #b01 s1) #b1 #b0)) (ite $e27 (concat (bvand $e5 (ite (= #b00 $e6) #b1 #b0)) (ite (= #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000)))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (and (= #b00 $e10) (not $e9)))) (let (($e33 (and (= #b01 $e10) (not $e9)))) (let (($e34 (and (= #b10 $e10) (not $e9)))) (let (($e35 (and (= #b11 $e10) (not $e9)))) (ite (= #b00 (ite $e28 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e29 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e30 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e31 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (and (= #b00 $e10) (not $e9)))) (let (($e33 (and (= #b01 $e10) (not $e9)))) (let (($e34 (and (= #b10 $e10) (not $e9)))) (let (($e35 (and (= #b11 $e10) (not $e9)))) (ite (= #b00 (ite $e28 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e29 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e30 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e31 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (and (= #b00 $e10) (not $e9)))) (let (($e33 (and (= #b01 $e10) (not $e9)))) (let (($e34 (and (= #b10 $e10) (not $e9)))) (let (($e35 (and (= #b11 $e10) (not $e9)))) (ite (= #b00 (ite $e28 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e29 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e30 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e31 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (and (= #b00 $e10) (not $e9)))) (let (($e33 (and (= #b01 $e10) (not $e9)))) (let (($e34 (and (= #b10 $e10) (not $e9)))) (let (($e35 (and (= #b11 $e10) (not $e9)))) (ite (= #b00 (ite $e28 (bvand (concat (ite $e35 #b1 #b0) (bvnot v2)) (concat (ite $e35 #b1 #b0) (ite (= #b01 s3) #b1 #b0))) (ite $e29 (bvand (concat (ite $e34 #b1 #b0) (bvnot v2)) (concat (ite $e34 #b1 #b0) (ite (= #b01 s2) #b1 #b0))) (ite $e30 (bvand (concat (ite $e33 #b1 #b0) (bvnot v2)) (concat (ite $e33 #b1 #b0) (ite (= #b01 s1) #b1 #b0))) (ite $e31 (bvand (concat (ite $e32 #b1 #b0) (bvnot v2)) (concat (ite $e32 #b1 #b0) (ite (= #b01 s0) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)) (ite $e29 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)) (ite $e30 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)) (ite $e31 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 5 4) inst))) (let (($e30 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e31 (bvand v2 (bvnot (bvshl #b1 w2))))) (ite (= #b11 $e29) (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg3)) (ite (= #b10 $e29) (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg2)) (ite (= #b01 $e29) (ite (and (not $e11) $e10 (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e31)) ex_val reg1)) (ite (= #b00 $e29) (ite (and $e11 (not $e8)) $e30 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e31)) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg1)))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 3 2) inst))) (let (($e30 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e31 (bvand v2 (bvnot (bvshl #b1 w2))))) (ite (= #b11 $e29) (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg3)) (ite (= #b10 $e29) (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e31)) ex_val reg2)) (ite (= #b01 $e29) (ite (and (not $e11) $e10 (not $e8)) $e30 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e31)) ex_val reg1)) (ite (= #b00 $e29) (ite (and $e11 (not $e8)) $e30 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e31)) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (ite (= #b00 rd2) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) v1) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) v1) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) v1) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) v1) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v0                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (ite (= #b00 (ite $e28 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))) (ite $e29 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))) (ite $e30 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))) (ite $e31 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))) #b00))))) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (not (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (ite (= #b11 $e30) (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)) (ite (= #b10 $e30) (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)) (ite (= #b01 $e30) (ite (and (not $e12) $e11 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)) (ite (= #b00 $e30) (ite (and $e12 (not $e9)) $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)) #b00000000)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_id_ex_valid     | v0                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 3 2) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)) (ite $e29 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)) (ite $e30 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)) (ite $e31 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)) #b00)))))) (ite (= #b00 $e32) (ite $e28 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3) (ite $e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2) (ite $e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1) (ite $e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0) #b00000000)))) (ite (= #b01 $e32) $e18 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000)))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)) (ite $e38 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)) (ite $e38 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)) (ite $e38 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (ite (= #b00 (ite $e35 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)) (ite $e36 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)) (ite $e37 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)) (ite $e38 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)) #b00))))) (ite $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e36 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e38 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 ] ptr: 1  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 ] ptr: 2  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 ] ptr: 3  ] : not concrete. Retry with deeper choice.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 0 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] : A new state!
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 2 Stack: 2
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4 [] ptr: 0 (END)  ] :  no new choices, back to prev state
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 0 RTL_wb_go == 1 ] ptr: 4  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 0 RTL_ex_go == 1 ] ptr: 3  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 0 RTL_id_go == 1 ] ptr: 2  ] :  not reachable.
Trace: 1 Stack: 1
>> [[rst == 1 ] ptr: 1  ] :  not reachable.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 2
number of state ex-ex: 1-> 2
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_valid     | v1                  
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_reg_wen   | #b1                 
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_ex_wb_valid     | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 3 2) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 (and $e16 (not $e12)))) (let (($e41 (and $e15 (not $e12)))) (let (($e42 (and $e17 (not $e12)))) (let (($e43 (and $e18 (not $e12)))) (ite (= #b00 (ite $e36 (bvand (concat #b0 (ite $e43 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e43 #b1 #b0))) (ite $e37 (bvand (concat #b0 (ite $e42 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e42 #b1 #b0))) (ite $e38 (bvand (concat #b0 (ite $e41 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e41 #b1 #b0))) (ite $e39 (bvand (concat #b0 (ite $e40 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e40 #b1 #b0))) #b00))))) (ite $e36 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)) (ite $e37 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)) (ite $e38 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)) (ite $e39 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)) #b00000000)))) (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state ex-ex: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_id_ex_operand1  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_ex_wb_valid     | #b0                 
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_id_ex_rd        | ((_ extract 1 0) inst)
| RTL_id_ex_op        | ((_ extract 7 6) inst)
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_id_ex_operand2  | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (ite (= #b11 $e33) (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (ite (= #b10 $e33) (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (ite (= #b01 $e33) (ite (and (not $e15) $e14 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (ite (= #b00 $e33) (ite (and $e15 (not $e12)) $e34 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) #b00000000))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_id_ex_valid     | v1                  
| RTL_ex_wb_rd        | ((_ extract 1 0) inst_id)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e4 ((_ extract 5 4) inst_id))) (let (($e5 (= #b11 $e4))) (let (($e6 (= #b10 $e4))) (let (($e7 (= #b01 $e4))) (let (($e8 (= #b00 $e4))) (let (($e9 (ite $e5 s3 (ite $e6 s2 (ite $e7 s1 (ite $e8 s0 #b00)))))) (let (($e10 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e11 (ite $e2 $e3 (ite (= #b00 $e9) (ite $e5 reg3 (ite $e6 reg2 (ite $e7 reg1 (ite $e8 reg0 #b00000000)))) (ite (= #b01 $e9) ex_val $e10))))) (let (($e12 ((_ extract 3 2) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e10)))) (ite (= #b01 $e1) (bvadd $e11 $e18) (ite $e2 $e3 (ite (= #b11 $e1) (bvnot (bvand $e11 $e18)) #b00000000)))))))))))))))))))))
| RTL_id_ex_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))))
number of state ex-ex in total: 37 --> 55
step: ex --> wb
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | reg0                
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | reg3                
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e1) reg3 (ite (= #b10 $e1) reg2 (ite (= #b01 $e1) reg1 (ite (= #b00 $e1) reg0 #b00000000)))) (ite (= #b11 $e2) reg3 (ite (= #b10 $e2) reg2 (ite (= #b01 $e2) reg1 (ite (= #b00 $e2) reg0 #b00000000)))))))
| RTL_registers[2]    | reg2                
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w2) (bvnot inst_v)))
| RTL_registers[1]    | reg1                
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 (ite (= #b1 v1) rd1 rd2)) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (let (($e1 (ite (= #b1 v1) rd1 rd2))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 $e1) (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b00 $e1))) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (ite (= #b1 v1) rd1 rd2))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 $e1) (not (= #b01 $e1)) (not (= #b00 $e1))) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (let (($e1 (ite (= #b1 v1) rd1 rd2))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 $e1) (not (= #b00 $e1))) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e10))))))) (let (($e22 (bvand (concat (bvnot v1) $e21) (concat ((_ extract 1 1) s3) $e21)))) (let (($e23 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e10))))))) (let (($e24 (bvand (concat (bvnot v1) $e23) (concat ((_ extract 1 1) s1) $e23)))) (let (($e25 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e10))))))) (let (($e26 (bvand (concat (bvnot v1) $e25) (concat ((_ extract 1 1) s0) $e25)))) (let (($e27 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e10))))))) (let (($e28 (bvand (concat (bvnot v1) $e27) (concat ((_ extract 1 1) s2) $e27)))) (bvadd (ite (= #b00 (ite $e12 $e22 (ite $e13 $e28 (ite $e14 $e24 (ite $e15 $e26 #b00))))) (ite $e12 $e9 (ite $e13 $e8 (ite $e14 $e7 (ite $e15 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e17 $e22 (ite $e18 $e28 (ite $e19 $e24 (ite $e20 $e26 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e10))))))) (let (($e22 (bvand (concat (bvnot v1) $e21) (concat ((_ extract 1 1) s3) $e21)))) (let (($e23 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e10))))))) (let (($e24 (bvand (concat (bvnot v1) $e23) (concat ((_ extract 1 1) s1) $e23)))) (let (($e25 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e10))))))) (let (($e26 (bvand (concat (bvnot v1) $e25) (concat ((_ extract 1 1) s0) $e25)))) (let (($e27 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e10))))))) (let (($e28 (bvand (concat (bvnot v1) $e27) (concat ((_ extract 1 1) s2) $e27)))) (bvadd (ite (= #b00 (ite $e12 $e22 (ite $e13 $e28 (ite $e14 $e24 (ite $e15 $e26 #b00))))) (ite $e12 $e9 (ite $e13 $e8 (ite $e14 $e7 (ite $e15 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e17 $e22 (ite $e18 $e28 (ite $e19 $e24 (ite $e20 $e26 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand w1 (bvnot v0)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 ((_ extract 3 2) inst))) (let (($e12 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e13 (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e14 (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e15 (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e10) $e15 (ite (= #b10 $e10) $e14 (ite (= #b01 $e10) $e13 (ite (= #b00 $e10) $e12 #b00000000)))) (ite (= #b11 $e11) $e15 (ite (= #b10 $e11) $e14 (ite (= #b01 $e11) $e13 (ite (= #b00 $e11) $e12 #b00000000))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot v1))) (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot inst_v)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 (ite (= #b1 v1) rd1 rd2)) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (let (($e1 (ite (= #b1 v1) rd1 rd2))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 $e1) (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b00 $e1))) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (ite (= #b1 v1) rd1 rd2))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 $e1) (not (= #b01 $e1)) (not (= #b00 $e1))) #b1 #b0))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (let (($e1 (ite (= #b1 v1) rd1 rd2))) (ite (and (= #b01 $e1) (not (= #b00 $e1)) (= v1 (bvnot (bvand (bvnot w1) v1)))) (ite (= #b1 v1) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) ex_val) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0))) (let (($e16 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1))) (let (($e17 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2))) (let (($e18 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3))) (let (($e19 ((_ extract 5 4) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 ((_ extract 3 2) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (concat (bvnot v1) v1))) (let (($e30 (bvand (bvand $e29 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))))) (let (($e31 (bvand (bvand $e29 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))))) (let (($e32 (bvand (bvand $e29 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))))) (let (($e33 (bvand (bvand $e29 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))))) (bvadd (ite (= #b00 (ite $e20 $e30 (ite $e21 $e33 (ite $e22 $e31 (ite $e23 $e32 #b00))))) (ite $e20 $e18 (ite $e21 $e17 (ite $e22 $e16 (ite $e23 $e15 #b00000000)))) $e14) (ite (= #b00 (ite $e25 $e30 (ite $e26 $e33 (ite $e27 $e31 (ite $e28 $e32 #b00))))) (ite $e25 $e18 (ite $e26 $e17 (ite $e27 $e16 (ite $e28 $e15 #b00000000)))) $e14)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0))) (let (($e16 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1))) (let (($e17 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2))) (let (($e18 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3))) (let (($e19 ((_ extract 5 4) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 ((_ extract 3 2) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (concat (bvnot v1) v1))) (let (($e30 (bvand (bvand $e29 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))))) (let (($e31 (bvand (bvand $e29 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))))) (let (($e32 (bvand (bvand $e29 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))))) (let (($e33 (bvand (bvand $e29 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))))) (bvadd (ite (= #b00 (ite $e20 $e30 (ite $e21 $e33 (ite $e22 $e31 (ite $e23 $e32 #b00))))) (ite $e20 $e18 (ite $e21 $e17 (ite $e22 $e16 (ite $e23 $e15 #b00000000)))) $e14) (ite (= #b00 (ite $e25 $e30 (ite $e26 $e33 (ite $e27 $e31 (ite $e28 $e32 #b00))))) (ite $e25 $e18 (ite $e26 $e17 (ite $e27 $e16 (ite $e28 $e15 #b00000000)))) $e14)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 ((_ extract 3 2) inst))) (let (($e12 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)))) (let (($e13 (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)))) (let (($e14 (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)))) (let (($e15 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e10) $e15 (ite (= #b10 $e10) $e14 (ite (= #b01 $e10) $e13 (ite (= #b00 $e10) $e12 #b00000000)))) (ite (= #b11 $e11) $e15 (ite (= #b10 $e11) $e14 (ite (= #b01 $e11) $e13 (ite (= #b00 $e11) $e12 #b00000000))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 ((_ extract 3 2) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000))))) (let (($e34 (concat (ite (and (= #b00 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e35 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e38 (ite $e29 $e37 (ite $e30 $e36 (ite $e31 $e35 (ite $e32 $e34 #b00)))))) (let (($e39 (ite $e24 $e37 (ite $e25 $e36 (ite $e26 $e35 (ite $e27 $e34 #b00)))))) (bvadd (ite (= #b00 $e38) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e38) ex_val $e33)) (ite (= #b00 $e39) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e33))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (and (= #b00 $e10) (not $e9)))) (let (($e43 (and (= #b01 $e10) (not $e9)))) (let (($e44 (and (= #b10 $e10) (not $e9)))) (let (($e45 (and (= #b11 $e10) (not $e9)))) (let (($e46 (bvand (concat (ite $e42 #b1 #b0) (bvnot v2)) (concat (ite $e42 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e47 (bvand (concat (ite $e43 #b1 #b0) (bvnot v2)) (concat (ite $e43 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e48 (bvand (concat (ite $e44 #b1 #b0) (bvnot v2)) (concat (ite $e44 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e49 (bvand (concat (ite $e45 #b1 #b0) (bvnot v2)) (concat (ite $e45 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e32 $e49 (ite $e33 $e48 (ite $e34 $e47 (ite $e35 $e46 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e49 (ite $e38 $e48 (ite $e39 $e47 (ite $e40 $e46 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e33 (ite (and $e12 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)))) (let (($e34 (ite (and (not $e12) $e11 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)))) (let (($e35 (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))) (ite (= #b11 $e31) $e36 (ite (= #b10 $e31) $e35 (ite (= #b01 $e31) $e34 (ite (= #b00 $e31) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (ite (= #b00 rd2) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 5 4) inst))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e32 (bvand v2 (bvnot (bvshl #b1 w2))))) (let (($e33 (ite (and $e11 (not $e8)) $e31 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e32)) ex_val reg0)))) (let (($e34 (ite (and (not $e11) $e10 (not $e8)) $e31 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e32)) ex_val reg1)))) (let (($e35 (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e31 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e32)) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e31 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e32)) ex_val reg3)))) (bvadd (ite (= #b11 $e29) $e36 (ite (= #b10 $e29) $e35 (ite (= #b01 $e29) $e34 (ite (= #b00 $e29) $e33 #b00000000)))) (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat (ite (and (= #b00 $e10) (not $e9)) #b1 #b0) v1))) (let (($e43 (concat (ite (and (= #b01 $e10) (not $e9)) #b1 #b0) v1))) (let (($e44 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e45 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (bvadd (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat v1 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat v1 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat v1 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat v1 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))))) (let (($e43 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))))) (let (($e44 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))))) (let (($e45 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e32 $e42 (ite $e33 $e45 (ite $e34 $e43 (ite $e35 $e44 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e42 (ite $e38 $e45 (ite $e39 $e43 (ite $e40 $e44 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e33 (ite (and $e12 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)))) (let (($e34 (ite (and (not $e12) $e11 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)))) (let (($e35 (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))) (ite (= #b11 $e31) $e36 (ite (= #b10 $e31) $e35 (ite (= #b01 $e31) $e34 (ite (= #b00 $e31) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e32 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e33 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e34 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e46 (ite $e36 $e31 (ite $e37 $e34 (ite $e38 $e32 (ite $e39 $e33 #b00)))))) (let (($e47 (ite $e41 $e31 (ite $e42 $e34 (ite $e43 $e32 (ite $e44 $e33 #b00)))))) (bvadd (ite (= #b00 $e46) (ite $e36 $e30 (ite $e37 $e29 (ite $e38 $e28 (ite $e39 $e27 #b00000000)))) (ite (= #b01 $e46) $e18 $e45)) (ite (= #b00 $e47) (ite $e41 $e30 (ite $e42 $e29 (ite $e43 $e28 (ite $e44 $e27 #b00000000)))) (ite (= #b01 $e47) $e18 $e45))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e9 (ite $e12 $e8 (ite $e13 $e7 (ite $e14 $e6 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e45 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e48 (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e49 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)))) (let (($e50 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)))) (let (($e51 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)))) (let (($e52 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)))) (bvadd (ite (= #b00 (ite $e35 $e52 (ite $e36 $e51 (ite $e37 $e50 (ite $e38 $e49 #b00))))) (ite $e35 $e47 (ite $e36 $e46 (ite $e37 $e45 (ite $e38 $e44 #b00000000)))) $e48) (ite (= #b00 (ite $e40 $e52 (ite $e41 $e51 (ite $e42 $e50 (ite $e43 $e49 #b00))))) (ite $e40 $e47 (ite $e41 $e46 (ite $e42 $e45 (ite $e43 $e44 #b00000000)))) $e48))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (let (($e36 (ite (and $e15 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))))) (let (($e37 (ite (and (not $e15) $e14 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))))) (let (($e38 (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))))) (let (($e39 (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))))) (bvadd (ite (= #b11 $e33) $e39 (ite (= #b10 $e33) $e38 (ite (= #b01 $e33) $e37 (ite (= #b00 $e33) $e36 #b00000000)))) (ite (= #b11 $e34) $e39 (ite (= #b10 $e34) $e38 (ite (= #b01 $e34) $e37 (ite (= #b00 $e34) $e36 #b00000000))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state ex-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (let (($e36 (ite (and $e15 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))))) (let (($e37 (ite (and (not $e15) $e14 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))))) (let (($e38 (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))))) (let (($e39 (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))))) (bvadd (ite (= #b11 $e33) $e39 (ite (= #b10 $e33) $e38 (ite (= #b01 $e33) $e37 (ite (= #b00 $e33) $e36 #b00000000)))) (ite (= #b11 $e34) $e39 (ite (= #b10 $e34) $e38 (ite (= #b01 $e34) $e37 (ite (= #b00 $e34) $e36 #b00000000))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
number of state ex-wb in total: 55 --> 55
step: wb --> wb
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | reg2                
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e1) reg3 (ite (= #b10 $e1) reg2 (ite (= #b01 $e1) reg1 (ite (= #b00 $e1) reg0 #b00000000)))) (ite (= #b11 $e2) reg3 (ite (= #b10 $e2) reg2 (ite (= #b01 $e2) reg1 (ite (= #b00 $e2) reg0 #b00000000)))))))
| RTL_registers[3]    | reg3                
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | reg0                
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | reg1                
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w2) (bvnot inst_v)))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | inst_v              
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e10))))))) (let (($e22 (bvand (concat (bvnot v1) $e21) (concat ((_ extract 1 1) s3) $e21)))) (let (($e23 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e10))))))) (let (($e24 (bvand (concat (bvnot v1) $e23) (concat ((_ extract 1 1) s1) $e23)))) (let (($e25 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e10))))))) (let (($e26 (bvand (concat (bvnot v1) $e25) (concat ((_ extract 1 1) s0) $e25)))) (let (($e27 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e10))))))) (let (($e28 (bvand (concat (bvnot v1) $e27) (concat ((_ extract 1 1) s2) $e27)))) (bvadd (ite (= #b00 (ite $e12 $e22 (ite $e13 $e28 (ite $e14 $e24 (ite $e15 $e26 #b00))))) (ite $e12 $e9 (ite $e13 $e8 (ite $e14 $e7 (ite $e15 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e17 $e22 (ite $e18 $e28 (ite $e19 $e24 (ite $e20 $e26 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e10))))))) (let (($e22 (bvand (concat (bvnot v1) $e21) (concat ((_ extract 1 1) s3) $e21)))) (let (($e23 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e10))))))) (let (($e24 (bvand (concat (bvnot v1) $e23) (concat ((_ extract 1 1) s1) $e23)))) (let (($e25 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e10))))))) (let (($e26 (bvand (concat (bvnot v1) $e25) (concat ((_ extract 1 1) s0) $e25)))) (let (($e27 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e10))))))) (let (($e28 (bvand (concat (bvnot v1) $e27) (concat ((_ extract 1 1) s2) $e27)))) (bvadd (ite (= #b00 (ite $e12 $e22 (ite $e13 $e28 (ite $e14 $e24 (ite $e15 $e26 #b00))))) (ite $e12 $e9 (ite $e13 $e8 (ite $e14 $e7 (ite $e15 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e17 $e22 (ite $e18 $e28 (ite $e19 $e24 (ite $e20 $e26 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 ((_ extract 3 2) inst))) (let (($e12 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e13 (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e14 (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e15 (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e10) $e15 (ite (= #b10 $e10) $e14 (ite (= #b01 $e10) $e13 (ite (= #b00 $e10) $e12 #b00000000)))) (ite (= #b11 $e11) $e15 (ite (= #b10 $e11) $e14 (ite (= #b01 $e11) $e13 (ite (= #b00 $e11) $e12 #b00000000))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand w1 (bvnot v0)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot v1))) (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot inst_v)))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0))) (let (($e16 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1))) (let (($e17 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2))) (let (($e18 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3))) (let (($e19 ((_ extract 5 4) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 ((_ extract 3 2) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (concat (bvnot v1) v1))) (let (($e30 (bvand (bvand $e29 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))))) (let (($e31 (bvand (bvand $e29 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))))) (let (($e32 (bvand (bvand $e29 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))))) (let (($e33 (bvand (bvand $e29 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))))) (bvadd (ite (= #b00 (ite $e20 $e30 (ite $e21 $e33 (ite $e22 $e31 (ite $e23 $e32 #b00))))) (ite $e20 $e18 (ite $e21 $e17 (ite $e22 $e16 (ite $e23 $e15 #b00000000)))) $e14) (ite (= #b00 (ite $e25 $e30 (ite $e26 $e33 (ite $e27 $e31 (ite $e28 $e32 #b00))))) (ite $e25 $e18 (ite $e26 $e17 (ite $e27 $e16 (ite $e28 $e15 #b00000000)))) $e14)))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0))) (let (($e16 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1))) (let (($e17 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2))) (let (($e18 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3))) (let (($e19 ((_ extract 5 4) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 ((_ extract 3 2) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (concat (bvnot v1) v1))) (let (($e30 (bvand (bvand $e29 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))))) (let (($e31 (bvand (bvand $e29 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))))) (let (($e32 (bvand (bvand $e29 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))))) (let (($e33 (bvand (bvand $e29 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))))) (bvadd (ite (= #b00 (ite $e20 $e30 (ite $e21 $e33 (ite $e22 $e31 (ite $e23 $e32 #b00))))) (ite $e20 $e18 (ite $e21 $e17 (ite $e22 $e16 (ite $e23 $e15 #b00000000)))) $e14) (ite (= #b00 (ite $e25 $e30 (ite $e26 $e33 (ite $e27 $e31 (ite $e28 $e32 #b00))))) (ite $e25 $e18 (ite $e26 $e17 (ite $e27 $e16 (ite $e28 $e15 #b00000000)))) $e14)))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | v1                  
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 ((_ extract 3 2) inst))) (let (($e12 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)))) (let (($e13 (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)))) (let (($e14 (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)))) (let (($e15 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e10) $e15 (ite (= #b10 $e10) $e14 (ite (= #b01 $e10) $e13 (ite (= #b00 $e10) $e12 #b00000000)))) (ite (= #b11 $e11) $e15 (ite (= #b10 $e11) $e14 (ite (= #b01 $e11) $e13 (ite (= #b00 $e11) $e12 #b00000000))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | v1                  
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e8 ((_ extract 5 4) inst_id))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite $e2 $e7 (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e14))))) (let (($e16 ((_ extract 3 2) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e14)))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 ((_ extract 3 2) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e3 (bvadd $e15 $e22) (ite $e2 $e7 (ite $e4 (bvnot (bvand $e15 $e22)) #b00000000))))) (let (($e34 (concat (ite (and (= #b00 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e35 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e38 (ite $e29 $e37 (ite $e30 $e36 (ite $e31 $e35 (ite $e32 $e34 #b00)))))) (let (($e39 (ite $e24 $e37 (ite $e25 $e36 (ite $e26 $e35 (ite $e27 $e34 #b00)))))) (bvadd (ite (= #b00 $e38) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e38) ex_val $e33)) (ite (= #b00 $e39) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e33))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (and (= #b00 $e10) (not $e9)))) (let (($e43 (and (= #b01 $e10) (not $e9)))) (let (($e44 (and (= #b10 $e10) (not $e9)))) (let (($e45 (and (= #b11 $e10) (not $e9)))) (let (($e46 (bvand (concat (ite $e42 #b1 #b0) (bvnot v2)) (concat (ite $e42 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e47 (bvand (concat (ite $e43 #b1 #b0) (bvnot v2)) (concat (ite $e43 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e48 (bvand (concat (ite $e44 #b1 #b0) (bvnot v2)) (concat (ite $e44 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e49 (bvand (concat (ite $e45 #b1 #b0) (bvnot v2)) (concat (ite $e45 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e32 $e49 (ite $e33 $e48 (ite $e34 $e47 (ite $e35 $e46 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e49 (ite $e38 $e48 (ite $e39 $e47 (ite $e40 $e46 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e33 (ite (and $e12 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)))) (let (($e34 (ite (and (not $e12) $e11 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)))) (let (($e35 (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))) (ite (= #b11 $e31) $e36 (ite (= #b10 $e31) $e35 (ite (= #b01 $e31) $e34 (ite (= #b00 $e31) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 5 4) inst))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e32 (bvand v2 (bvnot (bvshl #b1 w2))))) (let (($e33 (ite (and $e11 (not $e8)) $e31 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e32)) ex_val reg0)))) (let (($e34 (ite (and (not $e11) $e10 (not $e8)) $e31 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e32)) ex_val reg1)))) (let (($e35 (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e31 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e32)) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e31 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e32)) ex_val reg3)))) (bvadd (ite (= #b11 $e29) $e36 (ite (= #b10 $e29) $e35 (ite (= #b01 $e29) $e34 (ite (= #b00 $e29) $e33 #b00000000)))) (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (ite (= #b00 rd2) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat (ite (and (= #b00 $e10) (not $e9)) #b1 #b0) v1))) (let (($e43 (concat (ite (and (= #b01 $e10) (not $e9)) #b1 #b0) v1))) (let (($e44 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e45 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (bvadd (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat v1 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat v1 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat v1 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat v1 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))))) (let (($e43 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))))) (let (($e44 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))))) (let (($e45 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e32 $e42 (ite $e33 $e45 (ite $e34 $e43 (ite $e35 $e44 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e42 (ite $e38 $e45 (ite $e39 $e43 (ite $e40 $e44 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | #b1                 
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e33 (ite (and $e12 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)))) (let (($e34 (ite (and (not $e12) $e11 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)))) (let (($e35 (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))) (ite (= #b11 $e31) $e36 (ite (= #b10 $e31) $e35 (ite (= #b01 $e31) $e34 (ite (= #b00 $e31) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | #b1                 
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 (concat (bvand $e9 (ite (= #b11 $e10) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e32 (concat (bvand $e9 (ite (= #b01 $e10) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e33 (concat (bvand $e9 (ite (= #b00 $e10) #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e34 (concat (bvand $e9 (ite (= #b10 $e10) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e46 (ite $e36 $e31 (ite $e37 $e34 (ite $e38 $e32 (ite $e39 $e33 #b00)))))) (let (($e47 (ite $e41 $e31 (ite $e42 $e34 (ite $e43 $e32 (ite $e44 $e33 #b00)))))) (bvadd (ite (= #b00 $e46) (ite $e36 $e30 (ite $e37 $e29 (ite $e38 $e28 (ite $e39 $e27 #b00000000)))) (ite (= #b01 $e46) $e18 $e45)) (ite (= #b00 $e47) (ite $e41 $e30 (ite $e42 $e29 (ite $e43 $e28 (ite $e44 $e27 #b00000000)))) (ite (= #b01 $e47) $e18 $e45))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e9 (ite $e12 $e8 (ite $e13 $e7 (ite $e14 $e6 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (bvand v0 (bvnot (ite (and (not $e10) (not $e9) (not $e11)) #b1 #b0))))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (bvand $e12 (ite (= #b01 $e13) #b1 #b0)))) (let (($e15 (bvand $e12 (ite (= #b00 $e13) #b1 #b0)))) (let (($e16 (bvand $e12 (ite (= #b10 $e13) #b1 #b0)))) (let (($e17 (bvand $e12 (ite (= #b11 $e13) #b1 #b0)))) (let (($e18 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e19 ((_ extract 5 4) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e26 (ite $e9 $e18 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e25))))) (let (($e27 ((_ extract 3 2) inst_id))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 (ite $e28 s3 (ite $e29 s2 (ite $e30 s1 (ite $e31 s0 #b00)))))) (let (($e33 (ite (= #b00 $e32) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e32) ex_val $e25)))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e45 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e25 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e48 (ite $e10 (bvadd $e26 $e33) (ite $e9 $e18 (ite $e11 (bvnot (bvand $e26 $e33)) #b00000000))))) (let (($e49 (bvand (concat $e15 (ite (bvult #b01 s0) #b1 #b0)) (concat $e15 #b0)))) (let (($e50 (bvand (concat $e14 (ite (bvult #b01 s1) #b1 #b0)) (concat $e14 #b0)))) (let (($e51 (bvand (concat $e16 (ite (bvult #b01 s2) #b1 #b0)) (concat $e16 #b0)))) (let (($e52 (bvand (concat $e17 (ite (bvult #b01 s3) #b1 #b0)) (concat $e17 #b0)))) (bvadd (ite (= #b00 (ite $e35 $e52 (ite $e36 $e51 (ite $e37 $e50 (ite $e38 $e49 #b00))))) (ite $e35 $e47 (ite $e36 $e46 (ite $e37 $e45 (ite $e38 $e44 #b00000000)))) $e48) (ite (= #b00 (ite $e40 $e52 (ite $e41 $e51 (ite $e42 $e50 (ite $e43 $e49 #b00))))) (ite $e40 $e47 (ite $e41 $e46 (ite $e42 $e45 (ite $e43 $e44 #b00000000)))) $e48))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (let (($e36 (ite (and $e15 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))))) (let (($e37 (ite (and (not $e15) $e14 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))))) (let (($e38 (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))))) (let (($e39 (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))))) (bvadd (ite (= #b11 $e33) $e39 (ite (= #b10 $e33) $e38 (ite (= #b01 $e33) $e37 (ite (= #b00 $e33) $e36 #b00000000)))) (ite (= #b11 $e34) $e39 (ite (= #b10 $e34) $e38 (ite (= #b01 $e34) $e37 (ite (= #b00 $e34) $e36 #b00000000))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| __START__           | #b0                 
init stack per state: [] ptr: 0
init tracelen: 1
Trace: 1 Stack: 1
>> [[] ptr: 0  ] :  not new state. Go back. Try next.
Trace: 1 Stack: 1
>> [[] ptr: 0 (END)  ] :  no new choices, back to prev state
=============================
Finish!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| __START__           | #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-wb: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (let (($e36 (ite (and $e15 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))))) (let (($e37 (ite (and (not $e15) $e14 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))))) (let (($e38 (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))))) (let (($e39 (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))))) (bvadd (ite (= #b11 $e33) $e39 (ite (= #b10 $e33) $e38 (ite (= #b01 $e33) $e37 (ite (= #b00 $e33) $e36 #b00000000)))) (ite (= #b11 $e34) $e39 (ite (= #b10 $e34) $e38 (ite (= #b01 $e34) $e37 (ite (= #b00 $e34) $e36 #b00000000))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| stage_tracker_if_id_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_ex_wb_iuv| #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| __START__           | #b0                 
number of state wb-wb in total: 55 --> 55
step: wb --> finish
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (ite (= #b1 (bvand inst_v (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))
| RTL_registers[3]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand inst_v (ite (and (= #b11 $e2) (not (= #b10 $e2)) (not (= #b01 $e2)) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))
| RTL_registers[2]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand inst_v (ite (and (= #b10 $e2) (not (= #b01 $e2)) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))
| RTL_registers[1]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand inst_v (ite (and (not (= #b00 $e2)) (= #b01 $e2)) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w2) (bvnot inst_v)))
| RTL_registers[1]    | reg1                
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | reg3                
| RTL_registers[2]    | reg2                
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e1) reg3 (ite (= #b10 $e1) reg2 (ite (= #b01 $e1) reg1 (ite (= #b00 $e1) reg0 #b00000000)))) (ite (= #b11 $e2) reg3 (ite (= #b10 $e2) reg2 (ite (= #b01 $e2) reg1 (ite (= #b00 $e2) reg0 #b00000000)))))))
| __START__           | #b0                 
| RTL_registers[0]    | reg0                
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | inst_v              
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))
| RTL_registers[3]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (and (= #b11 $e2) (not (= #b10 $e2)) (not (= #b01 $e2)) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))
| RTL_registers[2]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (and (= #b10 $e2) (not (= #b01 $e2)) (not (= #b00 $e2))) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))
| RTL_registers[1]    | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 1 0) inst))) (let (($e3 ((_ extract 5 4) inst))) (let (($e4 (= #b11 $e3))) (let (($e5 (= #b10 $e3))) (let (($e6 (= #b01 $e3))) (let (($e7 (= #b00 $e3))) (let (($e8 (ite $e4 s3 (ite $e5 s2 (ite $e6 s1 (ite $e7 s0 #b00)))))) (let (($e9 ((_ extract 3 2) inst))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (ite (= #b1 (bvand v1 (ite (and (not (= #b00 $e2)) (= #b01 $e2)) #b1 #b0))) (bvadd (ite (= #b00 $e8) (ite $e4 reg3 (ite $e5 reg2 (ite $e6 reg1 (ite $e7 reg0 #b00000000)))) (ite (= #b01 $e8) ex_val $e1)) (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e1))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e1 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot v1)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (ite (= #b1 (bvand inst_v (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e5 $e6)))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand inst_v (ite (and (= #b11 $e14) (not (= #b10 $e14)) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e9))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand inst_v (ite (and (= #b10 $e14) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e8))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand inst_v (ite (and (not (= #b00 $e14)) (= #b01 $e14)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e5 $e7))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd2))) (let (($e5 (= #b10 rd2))) (let (($e6 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e7 (bvand w1 (bvnot v0)))) (let (($e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e9 (ite (= #b1 (bvand $e2 (ite (and $e4 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e10 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e4) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e11 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e5) (not $e4) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e12 (bvand v1 $e7))) (let (($e13 ((_ extract 7 6) inst))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e12))))))) (let (($e25 (bvand (concat (bvnot v1) $e24) (concat ((_ extract 1 1) s3) $e24)))) (let (($e26 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e12))))))) (let (($e27 (bvand (concat (bvnot v1) $e26) (concat ((_ extract 1 1) s1) $e26)))) (let (($e28 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite $e1 #b1 #b0) $e12))))))) (let (($e29 (bvand (concat (bvnot v1) $e28) (concat ((_ extract 1 1) s0) $e28)))) (let (($e30 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e12))))))) (let (($e31 (bvand (concat (bvnot v1) $e30) (concat ((_ extract 1 1) s2) $e30)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e7))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e13)) (not (= #b10 $e13)) (not (= #b11 $e13))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0)))))))))))) (bvadd (ite (= #b00 (ite $e15 $e25 (ite $e16 $e31 (ite $e17 $e27 (ite $e18 $e29 #b00))))) (ite $e15 $e11 (ite $e16 $e10 (ite $e17 $e9 (ite $e18 $e8 #b00000000)))) $e6) (ite (= #b00 (ite $e20 $e25 (ite $e21 $e31 (ite $e22 $e27 (ite $e23 $e29 #b00))))) (ite $e20 $e11 (ite $e21 $e10 (ite $e22 $e9 (ite $e23 $e8 #b00000000)))) $e6)) (ite (= #b1 (bvand (ite $e1 #b1 #b0) (bvand inst_v $e7))) $e6 $e8)))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (= #b11 rd1))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 (bvand w1 (bvnot v0)))) (let (($e11 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e12 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e13 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e14 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e15 (bvand v1 $e10))) (let (($e16 ((_ extract 7 6) inst))) (let (($e17 ((_ extract 1 0) inst))) (let (($e18 ((_ extract 5 4) inst))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 ((_ extract 3 2) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite $e8 #b1 #b0) $e15))))))) (let (($e29 (bvand (concat (bvnot v1) $e28) (concat ((_ extract 1 1) s3) $e28)))) (let (($e30 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite $e4 #b1 #b0) $e15))))))) (let (($e31 (bvand (concat (bvnot v1) $e30) (concat ((_ extract 1 1) s1) $e30)))) (let (($e32 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite $e1 #b1 #b0) $e15))))))) (let (($e33 (bvand (concat (bvnot v1) $e32) (concat ((_ extract 1 1) s0) $e32)))) (let (($e34 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite $e6 #b1 #b0) $e15))))))) (let (($e35 (bvand (concat (bvnot v1) $e34) (concat ((_ extract 1 1) s2) $e34)))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e10))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e16)) (not (= #b10 $e16)) (not (= #b11 $e16))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0)))))))))) (ite (and (= #b11 $e17) (not (= #b10 $e17)) (not (= #b01 $e17)) (not (= #b00 $e17))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e19 $e29 (ite $e20 $e35 (ite $e21 $e31 (ite $e22 $e33 #b00))))) (ite $e19 $e14 (ite $e20 $e13 (ite $e21 $e12 (ite $e22 $e11 #b00000000)))) $e9) (ite (= #b00 (ite $e24 $e29 (ite $e25 $e35 (ite $e26 $e31 (ite $e27 $e33 #b00))))) (ite $e24 $e14 (ite $e25 $e13 (ite $e26 $e12 (ite $e27 $e11 #b00000000)))) $e9)) (ite (= #b1 (bvand (ite (and $e8 (not $e6) (not $e4) (not $e1)) #b1 #b0) (bvand inst_v $e10))) $e9 $e14)))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e11 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e12 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e13 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e14 (bvand v1 $e9))) (let (($e15 ((_ extract 7 6) inst))) (let (($e16 ((_ extract 1 0) inst))) (let (($e17 ((_ extract 5 4) inst))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 ((_ extract 3 2) inst))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e14))))))) (let (($e28 (bvand (concat (bvnot v1) $e27) (concat ((_ extract 1 1) s3) $e27)))) (let (($e29 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite $e4 #b1 #b0) $e14))))))) (let (($e30 (bvand (concat (bvnot v1) $e29) (concat ((_ extract 1 1) s1) $e29)))) (let (($e31 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite $e1 #b1 #b0) $e14))))))) (let (($e32 (bvand (concat (bvnot v1) $e31) (concat ((_ extract 1 1) s0) $e31)))) (let (($e33 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite $e6 #b1 #b0) $e14))))))) (let (($e34 (bvand (concat (bvnot v1) $e33) (concat ((_ extract 1 1) s2) $e33)))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e9))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e15)) (not (= #b10 $e15)) (not (= #b11 $e15))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0)))))))))) (ite (and (= #b10 $e16) (not (= #b01 $e16)) (not (= #b00 $e16))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e18 $e28 (ite $e19 $e34 (ite $e20 $e30 (ite $e21 $e32 #b00))))) (ite $e18 $e13 (ite $e19 $e12 (ite $e20 $e11 (ite $e21 $e10 #b00000000)))) $e8) (ite (= #b00 (ite $e23 $e28 (ite $e24 $e34 (ite $e25 $e30 (ite $e26 $e32 #b00))))) (ite $e23 $e13 (ite $e24 $e12 (ite $e25 $e11 (ite $e26 $e10 #b00000000)))) $e8)) (ite (= #b1 (bvand (ite (and $e6 (not $e4) (not $e1)) #b1 #b0) (bvand inst_v $e9))) $e8 $e12))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd2))) (let (($e7 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e8 (bvand w1 (bvnot v0)))) (let (($e9 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e10 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e11 (ite (= #b1 (bvand $e2 (ite (and $e6 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e12 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e6) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e13 (bvand v1 $e8))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e13))))))) (let (($e27 (bvand (concat (bvnot v1) $e26) (concat ((_ extract 1 1) s3) $e26)))) (let (($e28 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite $e4 #b1 #b0) $e13))))))) (let (($e29 (bvand (concat (bvnot v1) $e28) (concat ((_ extract 1 1) s1) $e28)))) (let (($e30 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite $e1 #b1 #b0) $e13))))))) (let (($e31 (bvand (concat (bvnot v1) $e30) (concat ((_ extract 1 1) s0) $e30)))) (let (($e32 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e13))))))) (let (($e33 (bvand (concat (bvnot v1) $e32) (concat ((_ extract 1 1) s2) $e32)))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e8))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0)))))))))) (ite (and (not (= #b00 $e15)) (= #b01 $e15)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e27 (ite $e18 $e33 (ite $e19 $e29 (ite $e20 $e31 #b00))))) (ite $e17 $e12 (ite $e18 $e11 (ite $e19 $e10 (ite $e20 $e9 #b00000000)))) $e7) (ite (= #b00 (ite $e22 $e27 (ite $e23 $e33 (ite $e24 $e29 (ite $e25 $e31 #b00))))) (ite $e22 $e12 (ite $e23 $e11 (ite $e24 $e10 (ite $e25 $e9 #b00000000)))) $e7)) (ite (= #b1 (bvand (ite (and $e4 (not $e1)) #b1 #b0) (bvand inst_v $e8))) $e7 $e10)))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (ite (= w1 v1) #b1 #b0))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand v1 (bvand w1 (bvnot v0))))) (let (($e11 ((_ extract 5 4) inst))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 ((_ extract 3 2) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s3))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b11 rd1) #b1 #b0) $e10))))))) (let (($e22 (bvand (concat (bvnot v1) $e21) (concat ((_ extract 1 1) s3) $e21)))) (let (($e23 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s1))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b01 rd1) #b1 #b0) $e10))))))) (let (($e24 (bvand (concat (bvnot v1) $e23) (concat ((_ extract 1 1) s1) $e23)))) (let (($e25 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s0))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b00 rd1) #b1 #b0) $e10))))))) (let (($e26 (bvand (concat (bvnot v1) $e25) (concat ((_ extract 1 1) s0) $e25)))) (let (($e27 (bvand (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot v2) ((_ extract 0 0) s2))))) (bvnot (bvand v1 (bvnot (bvand (ite (= #b10 rd1) #b1 #b0) $e10))))))) (let (($e28 (bvand (concat (bvnot v1) $e27) (concat ((_ extract 1 1) s2) $e27)))) (bvadd (ite (= #b00 (ite $e12 $e22 (ite $e13 $e28 (ite $e14 $e24 (ite $e15 $e26 #b00))))) (ite $e12 $e9 (ite $e13 $e8 (ite $e14 $e7 (ite $e15 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e17 $e22 (ite $e18 $e28 (ite $e19 $e24 (ite $e20 $e26 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand inst_v (bvand w1 (bvnot v0))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot v1))) (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 (bvnot v0)) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 (bvand w1 (bvnot v0)))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 ((_ extract 3 2) inst))) (let (($e12 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e9)) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e13 (ite (= #b1 (bvand $e9 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e14 (ite (= #b1 (bvand $e9 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e15 (ite (= #b1 (bvand $e9 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e10) $e15 (ite (= #b10 $e10) $e14 (ite (= #b01 $e10) $e13 (ite (= #b00 $e10) $e12 #b00000000)))) (ite (= #b11 $e11) $e15 (ite (= #b10 $e11) $e14 (ite (= #b01 $e11) $e13 (ite (= #b00 $e11) $e12 #b00000000))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand w1 (bvnot v0)))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand inst_v (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))))))))))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e5 $e6))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))))))))) (ite (and (= #b11 $e15) (not (= #b10 $e15)) (not (= #b01 $e15)) (not (= #b00 $e15))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e10 (ite $e18 $e13 (ite $e19 $e11 (ite $e20 $e12 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e22 $e10 (ite $e23 $e13 (ite $e24 $e11 (ite $e25 $e12 #b00))))) (ite $e22 $e9 (ite $e23 $e8 (ite $e24 $e7 (ite $e25 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e9)))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))))))))) (ite (and (= #b10 $e15) (not (= #b01 $e15)) (not (= #b00 $e15))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e10 (ite $e18 $e13 (ite $e19 $e11 (ite $e20 $e12 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e22 $e10 (ite $e23 $e13 (ite $e24 $e11 (ite $e25 $e12 #b00))))) (ite $e22 $e9 (ite $e23 $e8 (ite $e24 $e7 (ite $e25 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e8)))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 7 6) inst))) (let (($e15 ((_ extract 1 0) inst))) (let (($e16 ((_ extract 5 4) inst))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 ((_ extract 3 2) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e14)) (not (= #b10 $e14)) (not (= #b11 $e14))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0))))))))))) (ite (and (not (= #b00 $e15)) (= #b01 $e15)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e17 $e10 (ite $e18 $e13 (ite $e19 $e11 (ite $e20 $e12 #b00))))) (ite $e17 $e9 (ite $e18 $e8 (ite $e19 $e7 (ite $e20 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e22 $e10 (ite $e23 $e13 (ite $e24 $e11 (ite $e25 $e12 #b00))))) (ite $e22 $e9 (ite $e23 $e8 (ite $e24 $e7 (ite $e25 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e5 $e7)))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot w1) (bvnot inst_v)))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot w1) (bvnot inst_v))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot inst_v) (bvnot (bvand w1 (bvnot v0)))))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (ite (= #b1 (bvand inst_v (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e5 $e6)))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand inst_v (ite (and (= #b11 $e14) (not (= #b10 $e14)) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e9))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand inst_v (ite (and (= #b10 $e14) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e8))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (bvand #b10 s3))) (let (($e11 (bvand #b10 s1))) (let (($e12 (bvand #b10 s0))) (let (($e13 (bvand #b10 s2))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand inst_v (ite (and (not (= #b00 $e14)) (= #b01 $e14)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e5 $e7))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (= #b00 rd1))) (let (($e4 (bvand $e2 (ite $e3 #b1 #b0)))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 ((_ extract 1 1) s1))) (let (($e8 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e9 (= #b01 rd2))) (let (($e10 ((_ extract 1 1) s2))) (let (($e11 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e12 (= #b10 rd2))) (let (($e13 ((_ extract 1 1) s3))) (let (($e14 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e15 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e16 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) (let (($e17 (ite (= #b1 (bvand $e5 (ite (and $e9 (not $e6)) #b1 #b0))) ex_val reg1))) (let (($e18 (ite (= #b1 (bvand $e5 (ite (and $e12 (not $e9) (not $e6)) #b1 #b0))) ex_val reg2))) (let (($e19 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e12) (not $e9) (not $e6)) #b1 #b0))) ex_val reg3))) (let (($e20 ((_ extract 7 6) inst))) (let (($e21 ((_ extract 5 4) inst))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 ((_ extract 3 2) inst))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (let (($e32 (concat (bvnot v1) v1))) (let (($e33 (bvand (bvand $e32 (concat (bvnot v1) $e14)) (bvand (concat $e13 v1) (concat $e13 $e14))))) (let (($e34 (bvand (bvand $e32 (concat (bvnot v1) $e8)) (bvand (concat $e7 v1) (concat $e7 $e8))))) (let (($e35 (bvand (bvand $e32 (concat (bvnot v1) $e4)) (bvand (concat $e1 v1) (concat $e1 $e4))))) (let (($e36 (bvand (bvand $e32 (concat (bvnot v1) $e11)) (bvand (concat $e10 v1) (concat $e10 $e11))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e31))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e20)) (not (= #b10 $e20)) (not (= #b11 $e20))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))))))) (bvadd (ite (= #b00 (ite $e22 $e33 (ite $e23 $e36 (ite $e24 $e34 (ite $e25 $e35 #b00))))) (ite $e22 $e19 (ite $e23 $e18 (ite $e24 $e17 (ite $e25 $e16 #b00000000)))) $e15) (ite (= #b00 (ite $e27 $e33 (ite $e28 $e36 (ite $e29 $e34 (ite $e30 $e35 #b00))))) (ite $e27 $e19 (ite $e28 $e18 (ite $e29 $e17 (ite $e30 $e16 #b00000000)))) $e15)) (ite (= #b1 (bvand (ite $e3 #b1 #b0) (bvand v1 $e31))) $e15 $e16))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (= #b00 rd1))) (let (($e4 (bvand $e2 (ite $e3 #b1 #b0)))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 ((_ extract 1 1) s1))) (let (($e8 (= #b01 rd1))) (let (($e9 (bvand $e2 (ite $e8 #b1 #b0)))) (let (($e10 (= #b01 rd2))) (let (($e11 ((_ extract 1 1) s2))) (let (($e12 (= #b10 rd1))) (let (($e13 (bvand $e2 (ite $e12 #b1 #b0)))) (let (($e14 (= #b10 rd2))) (let (($e15 ((_ extract 1 1) s3))) (let (($e16 (= #b11 rd1))) (let (($e17 (bvand $e2 (ite $e16 #b1 #b0)))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) (let (($e20 (ite (= #b1 (bvand $e5 (ite (and $e10 (not $e6)) #b1 #b0))) ex_val reg1))) (let (($e21 (ite (= #b1 (bvand $e5 (ite (and $e14 (not $e10) (not $e6)) #b1 #b0))) ex_val reg2))) (let (($e22 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e14) (not $e10) (not $e6)) #b1 #b0))) ex_val reg3))) (let (($e23 ((_ extract 7 6) inst))) (let (($e24 ((_ extract 1 0) inst))) (let (($e25 ((_ extract 5 4) inst))) (let (($e26 (= #b11 $e25))) (let (($e27 (= #b10 $e25))) (let (($e28 (= #b01 $e25))) (let (($e29 (= #b00 $e25))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (= #b11 $e30))) (let (($e32 (= #b10 $e30))) (let (($e33 (= #b01 $e30))) (let (($e34 (= #b00 $e30))) (let (($e35 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (let (($e36 (concat (bvnot v1) v1))) (let (($e37 (bvand (bvand $e36 (concat (bvnot v1) $e17)) (bvand (concat $e15 v1) (concat $e15 $e17))))) (let (($e38 (bvand (bvand $e36 (concat (bvnot v1) $e9)) (bvand (concat $e7 v1) (concat $e7 $e9))))) (let (($e39 (bvand (bvand $e36 (concat (bvnot v1) $e4)) (bvand (concat $e1 v1) (concat $e1 $e4))))) (let (($e40 (bvand (bvand $e36 (concat (bvnot v1) $e13)) (bvand (concat $e11 v1) (concat $e11 $e13))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e35))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e23)) (not (= #b10 $e23)) (not (= #b11 $e23))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))))) (ite (and (= #b11 $e24) (not (= #b10 $e24)) (not (= #b01 $e24)) (not (= #b00 $e24))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e26 $e37 (ite $e27 $e40 (ite $e28 $e38 (ite $e29 $e39 #b00))))) (ite $e26 $e22 (ite $e27 $e21 (ite $e28 $e20 (ite $e29 $e19 #b00000000)))) $e18) (ite (= #b00 (ite $e31 $e37 (ite $e32 $e40 (ite $e33 $e38 (ite $e34 $e39 #b00))))) (ite $e31 $e22 (ite $e32 $e21 (ite $e33 $e20 (ite $e34 $e19 #b00000000)))) $e18)) (ite (= #b1 (bvand (ite (and $e16 (not $e12) (not $e8) (not $e3)) #b1 #b0) (bvand v1 $e35))) $e18 $e22))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (= #b00 rd1))) (let (($e4 (bvand $e2 (ite $e3 #b1 #b0)))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 ((_ extract 1 1) s1))) (let (($e8 (= #b01 rd1))) (let (($e9 (bvand $e2 (ite $e8 #b1 #b0)))) (let (($e10 (= #b01 rd2))) (let (($e11 ((_ extract 1 1) s2))) (let (($e12 (= #b10 rd1))) (let (($e13 (bvand $e2 (ite $e12 #b1 #b0)))) (let (($e14 (= #b10 rd2))) (let (($e15 ((_ extract 1 1) s3))) (let (($e16 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e17 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e18 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) (let (($e19 (ite (= #b1 (bvand $e5 (ite (and $e10 (not $e6)) #b1 #b0))) ex_val reg1))) (let (($e20 (ite (= #b1 (bvand $e5 (ite (and $e14 (not $e10) (not $e6)) #b1 #b0))) ex_val reg2))) (let (($e21 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e14) (not $e10) (not $e6)) #b1 #b0))) ex_val reg3))) (let (($e22 ((_ extract 7 6) inst))) (let (($e23 ((_ extract 1 0) inst))) (let (($e24 ((_ extract 5 4) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 ((_ extract 3 2) inst))) (let (($e30 (= #b11 $e29))) (let (($e31 (= #b10 $e29))) (let (($e32 (= #b01 $e29))) (let (($e33 (= #b00 $e29))) (let (($e34 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (let (($e35 (concat (bvnot v1) v1))) (let (($e36 (bvand (bvand $e35 (concat (bvnot v1) $e16)) (bvand (concat $e15 v1) (concat $e15 $e16))))) (let (($e37 (bvand (bvand $e35 (concat (bvnot v1) $e9)) (bvand (concat $e7 v1) (concat $e7 $e9))))) (let (($e38 (bvand (bvand $e35 (concat (bvnot v1) $e4)) (bvand (concat $e1 v1) (concat $e1 $e4))))) (let (($e39 (bvand (bvand $e35 (concat (bvnot v1) $e13)) (bvand (concat $e11 v1) (concat $e11 $e13))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e34))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e22)) (not (= #b10 $e22)) (not (= #b11 $e22))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))))) (ite (and (= #b10 $e23) (not (= #b01 $e23)) (not (= #b00 $e23))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e25 $e36 (ite $e26 $e39 (ite $e27 $e37 (ite $e28 $e38 #b00))))) (ite $e25 $e21 (ite $e26 $e20 (ite $e27 $e19 (ite $e28 $e18 #b00000000)))) $e17) (ite (= #b00 (ite $e30 $e36 (ite $e31 $e39 (ite $e32 $e37 (ite $e33 $e38 #b00))))) (ite $e30 $e21 (ite $e31 $e20 (ite $e32 $e19 (ite $e33 $e18 #b00000000)))) $e17)) (ite (= #b1 (bvand (ite (and $e12 (not $e8) (not $e3)) #b1 #b0) (bvand v1 $e34))) $e17 $e20)))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (= #b00 rd1))) (let (($e4 (bvand $e2 (ite $e3 #b1 #b0)))) (let (($e5 (bvand w2 v2))) (let (($e6 (= #b00 rd2))) (let (($e7 ((_ extract 1 1) s1))) (let (($e8 (= #b01 rd1))) (let (($e9 (bvand $e2 (ite $e8 #b1 #b0)))) (let (($e10 (= #b01 rd2))) (let (($e11 ((_ extract 1 1) s2))) (let (($e12 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e13 (= #b10 rd2))) (let (($e14 ((_ extract 1 1) s3))) (let (($e15 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e16 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e17 (ite (= #b1 (bvand $e5 (ite $e6 #b1 #b0))) ex_val reg0))) (let (($e18 (ite (= #b1 (bvand $e5 (ite (and $e10 (not $e6)) #b1 #b0))) ex_val reg1))) (let (($e19 (ite (= #b1 (bvand $e5 (ite (and $e13 (not $e10) (not $e6)) #b1 #b0))) ex_val reg2))) (let (($e20 (ite (= #b1 (bvand $e5 (ite (and (= #b11 rd2) (not $e13) (not $e10) (not $e6)) #b1 #b0))) ex_val reg3))) (let (($e21 ((_ extract 7 6) inst))) (let (($e22 ((_ extract 1 0) inst))) (let (($e23 ((_ extract 5 4) inst))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 ((_ extract 3 2) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))) (let (($e34 (concat (bvnot v1) v1))) (let (($e35 (bvand (bvand $e34 (concat (bvnot v1) $e15)) (bvand (concat $e14 v1) (concat $e14 $e15))))) (let (($e36 (bvand (bvand $e34 (concat (bvnot v1) $e9)) (bvand (concat $e7 v1) (concat $e7 $e9))))) (let (($e37 (bvand (bvand $e34 (concat (bvnot v1) $e4)) (bvand (concat $e1 v1) (concat $e1 $e4))))) (let (($e38 (bvand (bvand $e34 (concat (bvnot v1) $e12)) (bvand (concat $e11 v1) (concat $e11 $e12))))) (ite (= #b1 (bvand (bvand inst_v (bvand (bvnot (bvand (bvnot inst_v) (bvnot $e33))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e21)) (not (= #b10 $e21)) (not (= #b11 $e21))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v))))))))) (ite (and (not (= #b00 $e22)) (= #b01 $e22)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e24 $e35 (ite $e25 $e38 (ite $e26 $e36 (ite $e27 $e37 #b00))))) (ite $e24 $e20 (ite $e25 $e19 (ite $e26 $e18 (ite $e27 $e17 #b00000000)))) $e16) (ite (= #b00 (ite $e29 $e35 (ite $e30 $e38 (ite $e31 $e36 (ite $e32 $e37 #b00))))) (ite $e29 $e20 (ite $e30 $e19 (ite $e31 $e18 (ite $e32 $e17 #b00000000)))) $e16)) (ite (= #b1 (bvand (ite (and $e8 (not $e3)) #b1 #b0) (bvand v1 $e33))) $e16 $e18))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1)))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 ((_ extract 1 1) s0))) (let (($e2 (bvand w1 v1))) (let (($e3 (bvand $e2 (ite (= #b00 rd1) #b1 #b0)))) (let (($e4 (bvand w2 v2))) (let (($e5 (= #b00 rd2))) (let (($e6 ((_ extract 1 1) s1))) (let (($e7 (bvand $e2 (ite (= #b01 rd1) #b1 #b0)))) (let (($e8 (= #b01 rd2))) (let (($e9 ((_ extract 1 1) s2))) (let (($e10 (bvand $e2 (ite (= #b10 rd1) #b1 #b0)))) (let (($e11 (= #b10 rd2))) (let (($e12 ((_ extract 1 1) s3))) (let (($e13 (bvand $e2 (ite (= #b11 rd1) #b1 #b0)))) (let (($e14 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e15 (ite (= #b1 (bvand $e4 (ite $e5 #b1 #b0))) ex_val reg0))) (let (($e16 (ite (= #b1 (bvand $e4 (ite (and $e8 (not $e5)) #b1 #b0))) ex_val reg1))) (let (($e17 (ite (= #b1 (bvand $e4 (ite (and $e11 (not $e8) (not $e5)) #b1 #b0))) ex_val reg2))) (let (($e18 (ite (= #b1 (bvand $e4 (ite (and (= #b11 rd2) (not $e11) (not $e8) (not $e5)) #b1 #b0))) ex_val reg3))) (let (($e19 ((_ extract 5 4) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 ((_ extract 3 2) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (concat (bvnot v1) v1))) (let (($e30 (bvand (bvand $e29 (concat (bvnot v1) $e13)) (bvand (concat $e12 v1) (concat $e12 $e13))))) (let (($e31 (bvand (bvand $e29 (concat (bvnot v1) $e7)) (bvand (concat $e6 v1) (concat $e6 $e7))))) (let (($e32 (bvand (bvand $e29 (concat (bvnot v1) $e3)) (bvand (concat $e1 v1) (concat $e1 $e3))))) (let (($e33 (bvand (bvand $e29 (concat (bvnot v1) $e10)) (bvand (concat $e9 v1) (concat $e9 $e10))))) (bvadd (ite (= #b00 (ite $e20 $e30 (ite $e21 $e33 (ite $e22 $e31 (ite $e23 $e32 #b00))))) (ite $e20 $e18 (ite $e21 $e17 (ite $e22 $e16 (ite $e23 $e15 #b00000000)))) $e14) (ite (= #b00 (ite $e25 $e30 (ite $e26 $e33 (ite $e27 $e31 (ite $e28 $e32 #b00))))) (ite $e25 $e18 (ite $e26 $e17 (ite $e27 $e16 (ite $e28 $e15 #b00000000)))) $e14)))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst))) (bvand (bvnot (bvand (bvnot inst_v) (bvnot (bvand (bvnot (bvand (bvnot w1) v1)) (bvnot (bvand (bvnot w2) (bvnot v1))))))) (bvnot (bvand inst_v (bvnot (bvand (bvnot (bvand inst_v (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot inst_v)))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | inst_v              
| RTL_registers[3]    | (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (ite (= #b1 (bvand v1 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (ite (= #b00 rd1) #b1 #b0) (bvand v1 (bvand w1 (bvnot v0))))) $e5 $e6)))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand v1 (ite (and (= #b11 $e14) (not (= #b10 $e14)) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e9))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand v1 (ite (and (= #b10 $e14) (not (= #b01 $e14)) (not (= #b00 $e14))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e5 $e8))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 1 0) inst))) (let (($e15 ((_ extract 5 4) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 ((_ extract 3 2) inst))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (ite (= #b1 (bvand v1 (ite (and (not (= #b00 $e14)) (= #b01 $e14)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e16 $e10 (ite $e17 $e13 (ite $e18 $e11 (ite $e19 $e12 #b00))))) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e21 $e10 (ite $e22 $e13 (ite $e23 $e11 (ite $e24 $e12 #b00))))) (ite $e21 $e9 (ite $e22 $e8 (ite $e23 $e7 (ite $e24 $e6 #b00000000)))) $e5)) (ite (= #b1 (bvand (bvand v1 (bvand w1 (bvnot v0))) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e5 $e7))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (bvnot (bvand (bvnot v1) (bvnot (bvand w1 (bvnot v0)))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 (concat #b0 ((_ extract 1 1) s3)))) (let (($e11 (concat #b0 ((_ extract 1 1) s1)))) (let (($e12 (concat #b0 ((_ extract 1 1) s0)))) (let (($e13 (concat #b0 ((_ extract 1 1) s2)))) (let (($e14 ((_ extract 5 4) inst))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 ((_ extract 3 2) inst))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (bvadd (ite (= #b00 (ite $e15 $e10 (ite $e16 $e13 (ite $e17 $e11 (ite $e18 $e12 #b00))))) (ite $e15 $e9 (ite $e16 $e8 (ite $e17 $e7 (ite $e18 $e6 #b00000000)))) $e5) (ite (= #b00 (ite $e20 $e10 (ite $e21 $e13 (ite $e22 $e11 (ite $e23 $e12 #b00))))) (ite $e20 $e9 (ite $e21 $e8 (ite $e22 $e7 (ite $e23 $e6 #b00000000)))) $e5)))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | v1                  
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w1 v1))) (let (($e2 (= #b00 rd1))) (let (($e3 (bvand w2 v2))) (let (($e4 (= #b00 rd2))) (let (($e5 (= #b01 rd1))) (let (($e6 (= #b01 rd2))) (let (($e7 (= #b10 rd1))) (let (($e8 (= #b10 rd2))) (let (($e9 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 ((_ extract 3 2) inst))) (let (($e12 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite $e4 #b1 #b0))) ex_val reg0)))) (let (($e13 (ite (= #b1 (bvand $e1 (ite (and $e5 (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e6 (not $e4)) #b1 #b0))) ex_val reg1)))) (let (($e14 (ite (= #b1 (bvand $e1 (ite (and $e7 (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and $e8 (not $e6) (not $e4)) #b1 #b0))) ex_val reg2)))) (let (($e15 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd1) (not $e7) (not $e5) (not $e2)) #b1 #b0))) $e9 (ite (= #b1 (bvand $e3 (ite (and (= #b11 rd2) (not $e8) (not $e6) (not $e4)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e10) $e15 (ite (= #b10 $e10) $e14 (ite (= #b01 $e10) $e13 (ite (= #b00 $e10) $e12 #b00000000)))) (ite (= #b11 $e11) $e15 (ite (= #b10 $e11) $e14 (ite (= #b01 $e11) $e13 (ite (= #b00 $e11) $e12 #b00000000))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e9 ((_ extract 5 4) inst_id))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (let (($e15 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e16 (ite $e2 $e8 (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e15))))) (let (($e17 ((_ extract 3 2) inst_id))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 (ite $e18 s3 (ite $e19 s2 (ite $e20 s1 (ite $e21 s0 #b00)))))) (let (($e23 (ite (= #b00 $e22) (ite $e18 reg3 (ite $e19 reg2 (ite $e20 reg1 (ite $e21 reg0 #b00000000)))) (ite (= #b01 $e22) ex_val $e15)))) (let (($e24 ((_ extract 5 4) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 ((_ extract 3 2) inst))) (let (($e30 (= #b11 $e29))) (let (($e31 (= #b10 $e29))) (let (($e32 (= #b01 $e29))) (let (($e33 (= #b00 $e29))) (let (($e34 (ite $e3 (bvadd $e16 $e23) (ite $e2 $e8 (ite $e4 (bvnot (bvand $e16 $e23)) #b00000000))))) (let (($e35 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e38 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e39 (ite $e30 $e38 (ite $e31 $e37 (ite $e32 $e36 (ite $e33 $e35 #b00)))))) (let (($e40 (ite $e25 $e38 (ite $e26 $e37 (ite $e27 $e36 (ite $e28 $e35 #b00)))))) (ite (= #b1 (bvand v0 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 $e39) (ite $e30 reg3 (ite $e31 reg2 (ite $e32 reg1 (ite $e33 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e34)) (ite (= #b00 $e40) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e40) ex_val $e34))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite $e7 #b1 #b0))) $e34 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b01 $e6))) (let (($e8 (= #b00 $e6))) (let (($e9 (= #b10 $e6))) (let (($e10 (= #b11 $e6))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e2 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 1 0) inst))) (let (($e28 ((_ extract 5 4) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (= #b11 $e33))) (let (($e35 (= #b10 $e33))) (let (($e36 (= #b01 $e33))) (let (($e37 (= #b00 $e33))) (let (($e38 (ite $e3 (bvadd $e19 $e26) (ite $e2 $e11 (ite $e4 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e39 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e40 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e41 (concat (ite (and $e9 (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e42 (concat (ite (and $e10 (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e43 (ite $e34 $e42 (ite $e35 $e41 (ite $e36 $e40 (ite $e37 $e39 #b00)))))) (let (($e44 (ite $e29 $e42 (ite $e30 $e41 (ite $e31 $e40 (ite $e32 $e39 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b11 $e27) (not (= #b10 $e27)) (not (= #b01 $e27)) (not (= #b00 $e27))) #b1 #b0))) (bvadd (ite (= #b00 $e43) (ite $e34 reg3 (ite $e35 reg2 (ite $e36 reg1 (ite $e37 reg0 #b00000000)))) (ite (= #b01 $e43) ex_val $e38)) (ite (= #b00 $e44) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e44) ex_val $e38))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e10 (not $e9) (not $e7) (not $e8)) #b1 #b0))) $e38 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b01 $e6))) (let (($e8 (= #b00 $e6))) (let (($e9 (= #b10 $e6))) (let (($e10 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e11 ((_ extract 5 4) inst_id))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 (ite $e12 s3 (ite $e13 s2 (ite $e14 s1 (ite $e15 s0 #b00)))))) (let (($e17 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e18 (ite $e2 $e10 (ite (= #b00 $e16) (ite $e12 reg3 (ite $e13 reg2 (ite $e14 reg1 (ite $e15 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val $e17))))) (let (($e19 ((_ extract 3 2) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e17)))) (let (($e26 ((_ extract 1 0) inst))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 ((_ extract 3 2) inst))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 (ite $e3 (bvadd $e18 $e25) (ite $e2 $e10 (ite $e4 (bvnot (bvand $e18 $e25)) #b00000000))))) (let (($e38 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e39 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e40 (concat (ite (and $e9 (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e41 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e42 (ite $e33 $e41 (ite $e34 $e40 (ite $e35 $e39 (ite $e36 $e38 #b00)))))) (let (($e43 (ite $e28 $e41 (ite $e29 $e40 (ite $e30 $e39 (ite $e31 $e38 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b10 $e26) (not (= #b01 $e26)) (not (= #b00 $e26))) #b1 #b0))) (bvadd (ite (= #b00 $e42) (ite $e33 reg3 (ite $e34 reg2 (ite $e35 reg1 (ite $e36 reg0 #b00000000)))) (ite (= #b01 $e42) ex_val $e37)) (ite (= #b00 $e43) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e43) ex_val $e37))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e9 (not $e7) (not $e8)) #b1 #b0))) $e37 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b01 $e6))) (let (($e8 (= #b00 $e6))) (let (($e9 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e10 ((_ extract 5 4) inst_id))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 (ite $e11 s3 (ite $e12 s2 (ite $e13 s1 (ite $e14 s0 #b00)))))) (let (($e16 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e17 (ite $e2 $e9 (ite (= #b00 $e15) (ite $e11 reg3 (ite $e12 reg2 (ite $e13 reg1 (ite $e14 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val $e16))))) (let (($e18 ((_ extract 3 2) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e16)))) (let (($e25 ((_ extract 1 0) inst))) (let (($e26 ((_ extract 5 4) inst))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e3 (bvadd $e17 $e24) (ite $e2 $e9 (ite $e4 (bvnot (bvand $e17 $e24)) #b00000000))))) (let (($e37 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e38 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e39 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e40 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e41 (ite $e32 $e40 (ite $e33 $e39 (ite $e34 $e38 (ite $e35 $e37 #b00)))))) (let (($e42 (ite $e27 $e40 (ite $e28 $e39 (ite $e29 $e38 (ite $e30 $e37 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (not (= #b00 $e25)) (= #b01 $e25)) #b1 #b0))) (bvadd (ite (= #b00 $e41) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e41) ex_val $e36)) (ite (= #b00 $e42) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e42) ex_val $e36))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and (not $e8) $e7) #b1 #b0))) $e36 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 ((_ extract 5 4) inst))) (let (($e2 (= #b11 $e1))) (let (($e3 (= #b10 $e1))) (let (($e4 (= #b01 $e1))) (let (($e5 (= #b00 $e1))) (let (($e6 ((_ extract 3 2) inst))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (concat #b0 (ite (= #b01 s0) #b1 #b0)))) (let (($e12 (concat #b0 (ite (= #b01 s1) #b1 #b0)))) (let (($e13 (concat #b0 (ite (= #b01 s2) #b1 #b0)))) (let (($e14 (concat #b0 (ite (= #b01 s3) #b1 #b0)))) (let (($e15 (ite $e7 $e14 (ite $e8 $e13 (ite $e9 $e12 (ite $e10 $e11 #b00)))))) (let (($e16 (ite $e2 $e14 (ite $e3 $e13 (ite $e4 $e12 (ite $e5 $e11 #b00)))))) (bvadd (ite (= #b00 $e15) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val #b00000000)) (ite (= #b00 $e16) (ite $e2 reg3 (ite $e3 reg2 (ite $e4 reg1 (ite $e5 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val #b00000000)))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 ((_ extract 7 6) inst))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (= #b11 $e33))) (let (($e35 (= #b10 $e33))) (let (($e36 (= #b01 $e33))) (let (($e37 (= #b00 $e33))) (let (($e38 ((_ extract 3 2) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e44 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e45 (and $e11 (not $e9)))) (let (($e46 (and (= #b01 $e10) (not $e9)))) (let (($e47 (and (= #b10 $e10) (not $e9)))) (let (($e48 (and (= #b11 $e10) (not $e9)))) (let (($e49 (bvand (concat (ite $e45 #b1 #b0) (bvnot v2)) (concat (ite $e45 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e50 (bvand (concat (ite $e46 #b1 #b0) (bvnot v2)) (concat (ite $e46 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e51 (bvand (concat (ite $e47 #b1 #b0) (bvnot v2)) (concat (ite $e47 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e52 (bvand (concat (ite $e48 #b1 #b0) (bvnot v2)) (concat (ite $e48 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e32)) (not (= #b10 $e32)) (not (= #b11 $e32))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e44))))))) (bvadd (ite (= #b00 (ite $e34 $e52 (ite $e35 $e51 (ite $e36 $e50 (ite $e37 $e49 #b00))))) (ite $e34 $e31 (ite $e35 $e30 (ite $e36 $e29 (ite $e37 $e28 #b00000000)))) $e43) (ite (= #b00 (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00))))) (ite $e39 $e31 (ite $e40 $e30 (ite $e41 $e29 (ite $e42 $e28 #b00000000)))) $e43)) (ite (= #b1 (bvand (ite $e11 #b1 #b0) (bvand v0 $e44))) $e43 $e28))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 ((_ extract 7 6) inst))) (let (($e36 ((_ extract 1 0) inst))) (let (($e37 ((_ extract 5 4) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 ((_ extract 3 2) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e48 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e49 (and $e12 (not $e9)))) (let (($e50 (and $e11 (not $e9)))) (let (($e51 (and $e13 (not $e9)))) (let (($e52 (and $e14 (not $e9)))) (let (($e53 (bvand (concat (ite $e49 #b1 #b0) (bvnot v2)) (concat (ite $e49 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e54 (bvand (concat (ite $e50 #b1 #b0) (bvnot v2)) (concat (ite $e50 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e55 (bvand (concat (ite $e51 #b1 #b0) (bvnot v2)) (concat (ite $e51 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e56 (bvand (concat (ite $e52 #b1 #b0) (bvnot v2)) (concat (ite $e52 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e35)) (not (= #b10 $e35)) (not (= #b11 $e35))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e48))))) (ite (and (= #b11 $e36) (not (= #b10 $e36)) (not (= #b01 $e36)) (not (= #b00 $e36))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e38 $e56 (ite $e39 $e55 (ite $e40 $e54 (ite $e41 $e53 #b00))))) (ite $e38 $e34 (ite $e39 $e33 (ite $e40 $e32 (ite $e41 $e31 #b00000000)))) $e47) (ite (= #b00 (ite $e43 $e56 (ite $e44 $e55 (ite $e45 $e54 (ite $e46 $e53 #b00))))) (ite $e43 $e34 (ite $e44 $e33 (ite $e45 $e32 (ite $e46 $e31 #b00000000)))) $e47)) (ite (= #b1 (bvand (ite (and $e14 (not $e13) (not $e11) (not $e12)) #b1 #b0) (bvand v0 $e48))) $e47 $e34))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 ((_ extract 7 6) inst))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 ((_ extract 5 4) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 ((_ extract 3 2) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e47 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e48 (and $e12 (not $e9)))) (let (($e49 (and $e11 (not $e9)))) (let (($e50 (and $e13 (not $e9)))) (let (($e51 (and (= #b11 $e10) (not $e9)))) (let (($e52 (bvand (concat (ite $e48 #b1 #b0) (bvnot v2)) (concat (ite $e48 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e53 (bvand (concat (ite $e49 #b1 #b0) (bvnot v2)) (concat (ite $e49 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e54 (bvand (concat (ite $e50 #b1 #b0) (bvnot v2)) (concat (ite $e50 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e55 (bvand (concat (ite $e51 #b1 #b0) (bvnot v2)) (concat (ite $e51 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e34)) (not (= #b10 $e34)) (not (= #b11 $e34))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e47))))) (ite (and (= #b10 $e35) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e37 $e55 (ite $e38 $e54 (ite $e39 $e53 (ite $e40 $e52 #b00))))) (ite $e37 $e33 (ite $e38 $e32 (ite $e39 $e31 (ite $e40 $e30 #b00000000)))) $e46) (ite (= #b00 (ite $e42 $e55 (ite $e43 $e54 (ite $e44 $e53 (ite $e45 $e52 #b00))))) (ite $e42 $e33 (ite $e43 $e32 (ite $e44 $e31 (ite $e45 $e30 #b00000000)))) $e46)) (ite (= #b1 (bvand (ite (and $e13 (not $e11) (not $e12)) #b1 #b0) (bvand v0 $e47))) $e46 $e32)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 ((_ extract 7 6) inst))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e46 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e47 (and $e12 (not $e9)))) (let (($e48 (and $e11 (not $e9)))) (let (($e49 (and (= #b10 $e10) (not $e9)))) (let (($e50 (and (= #b11 $e10) (not $e9)))) (let (($e51 (bvand (concat (ite $e47 #b1 #b0) (bvnot v2)) (concat (ite $e47 #b1 #b0) (ite (= #b01 s0) #b1 #b0))))) (let (($e52 (bvand (concat (ite $e48 #b1 #b0) (bvnot v2)) (concat (ite $e48 #b1 #b0) (ite (= #b01 s1) #b1 #b0))))) (let (($e53 (bvand (concat (ite $e49 #b1 #b0) (bvnot v2)) (concat (ite $e49 #b1 #b0) (ite (= #b01 s2) #b1 #b0))))) (let (($e54 (bvand (concat (ite $e50 #b1 #b0) (bvnot v2)) (concat (ite $e50 #b1 #b0) (ite (= #b01 s3) #b1 #b0))))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e33)) (not (= #b10 $e33)) (not (= #b11 $e33))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e46))))) (ite (and (not (= #b00 $e34)) (= #b01 $e34)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e36 $e54 (ite $e37 $e53 (ite $e38 $e52 (ite $e39 $e51 #b00))))) (ite $e36 $e32 (ite $e37 $e31 (ite $e38 $e30 (ite $e39 $e29 #b00000000)))) $e45) (ite (= #b00 (ite $e41 $e54 (ite $e42 $e53 (ite $e43 $e52 (ite $e44 $e51 #b00))))) (ite $e41 $e32 (ite $e42 $e31 (ite $e43 $e30 (ite $e44 $e29 #b00000000)))) $e45)) (ite (= #b1 (bvand (ite (and (not $e12) $e11) #b1 #b0) (bvand v0 $e46))) $e45 $e30))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 ((_ extract 7 6) inst))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (= #b11 $e33))) (let (($e35 (= #b10 $e33))) (let (($e36 (= #b01 $e33))) (let (($e37 (= #b00 $e33))) (let (($e38 ((_ extract 3 2) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e44 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e45 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e46 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e47 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e48 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e32)) (not (= #b10 $e32)) (not (= #b11 $e32))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e44))))))) (bvadd (ite (= #b00 (ite $e34 $e48 (ite $e35 $e47 (ite $e36 $e46 (ite $e37 $e45 #b00))))) (ite $e34 $e31 (ite $e35 $e30 (ite $e36 $e29 (ite $e37 $e28 #b00000000)))) $e43) (ite (= #b00 (ite $e39 $e48 (ite $e40 $e47 (ite $e41 $e46 (ite $e42 $e45 #b00))))) (ite $e39 $e31 (ite $e40 $e30 (ite $e41 $e29 (ite $e42 $e28 #b00000000)))) $e43)) (ite (= #b1 (bvand (ite $e11 #b1 #b0) (bvand v0 $e44))) $e43 $e28))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 ((_ extract 7 6) inst))) (let (($e36 ((_ extract 1 0) inst))) (let (($e37 ((_ extract 5 4) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 ((_ extract 3 2) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e48 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e49 (concat #b0 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e50 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e51 (concat #b0 (ite (and $e13 (not $e9)) #b1 #b0)))) (let (($e52 (concat #b0 (ite (and $e14 (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e35)) (not (= #b10 $e35)) (not (= #b11 $e35))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e48))))) (ite (and (= #b11 $e36) (not (= #b10 $e36)) (not (= #b01 $e36)) (not (= #b00 $e36))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e38 $e52 (ite $e39 $e51 (ite $e40 $e50 (ite $e41 $e49 #b00))))) (ite $e38 $e34 (ite $e39 $e33 (ite $e40 $e32 (ite $e41 $e31 #b00000000)))) $e47) (ite (= #b00 (ite $e43 $e52 (ite $e44 $e51 (ite $e45 $e50 (ite $e46 $e49 #b00))))) (ite $e43 $e34 (ite $e44 $e33 (ite $e45 $e32 (ite $e46 $e31 #b00000000)))) $e47)) (ite (= #b1 (bvand (ite (and $e14 (not $e13) (not $e11) (not $e12)) #b1 #b0) (bvand v0 $e48))) $e47 $e34))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 ((_ extract 7 6) inst))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 ((_ extract 5 4) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 ((_ extract 3 2) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e47 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e48 (concat #b0 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e49 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e50 (concat #b0 (ite (and $e13 (not $e9)) #b1 #b0)))) (let (($e51 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e34)) (not (= #b10 $e34)) (not (= #b11 $e34))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e47))))) (ite (and (= #b10 $e35) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e37 $e51 (ite $e38 $e50 (ite $e39 $e49 (ite $e40 $e48 #b00))))) (ite $e37 $e33 (ite $e38 $e32 (ite $e39 $e31 (ite $e40 $e30 #b00000000)))) $e46) (ite (= #b00 (ite $e42 $e51 (ite $e43 $e50 (ite $e44 $e49 (ite $e45 $e48 #b00))))) (ite $e42 $e33 (ite $e43 $e32 (ite $e44 $e31 (ite $e45 $e30 #b00000000)))) $e46)) (ite (= #b1 (bvand (ite (and $e13 (not $e11) (not $e12)) #b1 #b0) (bvand v0 $e47))) $e46 $e32)))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 ((_ extract 7 6) inst))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e46 (bvand (bvnot (bvand v0 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))) (let (($e47 (concat #b0 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e48 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e49 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e50 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e33)) (not (= #b10 $e33)) (not (= #b11 $e33))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot $e46))))) (ite (and (not (= #b00 $e34)) (= #b01 $e34)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e36 $e50 (ite $e37 $e49 (ite $e38 $e48 (ite $e39 $e47 #b00))))) (ite $e36 $e32 (ite $e37 $e31 (ite $e38 $e30 (ite $e39 $e29 #b00000000)))) $e45) (ite (= #b00 (ite $e41 $e50 (ite $e42 $e49 (ite $e43 $e48 (ite $e44 $e47 #b00))))) (ite $e41 $e32 (ite $e42 $e31 (ite $e43 $e30 (ite $e44 $e29 #b00000000)))) $e45)) (ite (= #b1 (bvand (ite (and (not $e12) $e11) #b1 #b0) (bvand v0 $e46))) $e45 $e30))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v0 (bvand (bvnot (bvand v0 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v0) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v0) (bvnot (bvand (bvnot (bvand v0 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w2) (bvnot v0)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e33 (ite (and $e12 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)))) (let (($e34 (ite (and (not $e12) $e11 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)))) (let (($e35 (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))) (ite (= #b11 $e31) $e36 (ite (= #b10 $e31) $e35 (ite (= #b01 $e31) $e34 (ite (= #b00 $e31) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 ((_ extract 7 6) inst))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 (= #b11 $e33))) (let (($e35 (= #b10 $e33))) (let (($e36 (= #b01 $e33))) (let (($e37 (= #b00 $e33))) (let (($e38 ((_ extract 3 2) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e44 (bvand (bvnot v0) (ite $e9 #b1 #b0)))) (let (($e45 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e46 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e47 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e48 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v0 (bvand (bvnot $e44) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e32)) (not (= #b10 $e32)) (not (= #b11 $e32))) #b1 #b0))) (bvnot $e44))))))))) (bvadd (ite (= #b00 (ite $e34 $e48 (ite $e35 $e47 (ite $e36 $e46 (ite $e37 $e45 #b00))))) (ite $e34 $e31 (ite $e35 $e30 (ite $e36 $e29 (ite $e37 $e28 #b00000000)))) $e43) (ite (= #b00 (ite $e39 $e48 (ite $e40 $e47 (ite $e41 $e46 (ite $e42 $e45 #b00))))) (ite $e39 $e31 (ite $e40 $e30 (ite $e41 $e29 (ite $e42 $e28 #b00000000)))) $e43)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite $e11 #b1 #b0))) $e43 $e28))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 ((_ extract 7 6) inst))) (let (($e36 ((_ extract 1 0) inst))) (let (($e37 ((_ extract 5 4) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 ((_ extract 3 2) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e48 (bvand (bvnot v0) (ite $e9 #b1 #b0)))) (let (($e49 (concat #b0 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e50 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e51 (concat #b0 (ite (and $e13 (not $e9)) #b1 #b0)))) (let (($e52 (concat #b0 (ite (and $e14 (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot $e48) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e35)) (not (= #b10 $e35)) (not (= #b11 $e35))) #b1 #b0))) (bvnot $e48))))))) (ite (and (= #b11 $e36) (not (= #b10 $e36)) (not (= #b01 $e36)) (not (= #b00 $e36))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e38 $e52 (ite $e39 $e51 (ite $e40 $e50 (ite $e41 $e49 #b00))))) (ite $e38 $e34 (ite $e39 $e33 (ite $e40 $e32 (ite $e41 $e31 #b00000000)))) $e47) (ite (= #b00 (ite $e43 $e52 (ite $e44 $e51 (ite $e45 $e50 (ite $e46 $e49 #b00))))) (ite $e43 $e34 (ite $e44 $e33 (ite $e45 $e32 (ite $e46 $e31 #b00000000)))) $e47)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e14 (not $e13) (not $e11) (not $e12)) #b1 #b0))) $e47 $e34))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 ((_ extract 7 6) inst))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 ((_ extract 5 4) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 ((_ extract 3 2) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e47 (bvand (bvnot v0) (ite $e9 #b1 #b0)))) (let (($e48 (concat #b0 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e49 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e50 (concat #b0 (ite (and $e13 (not $e9)) #b1 #b0)))) (let (($e51 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot $e47) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e34)) (not (= #b10 $e34)) (not (= #b11 $e34))) #b1 #b0))) (bvnot $e47))))))) (ite (and (= #b10 $e35) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e37 $e51 (ite $e38 $e50 (ite $e39 $e49 (ite $e40 $e48 #b00))))) (ite $e37 $e33 (ite $e38 $e32 (ite $e39 $e31 (ite $e40 $e30 #b00000000)))) $e46) (ite (= #b00 (ite $e42 $e51 (ite $e43 $e50 (ite $e44 $e49 (ite $e45 $e48 #b00))))) (ite $e42 $e33 (ite $e43 $e32 (ite $e44 $e31 (ite $e45 $e30 #b00000000)))) $e46)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e13 (not $e11) (not $e12)) #b1 #b0))) $e46 $e32)))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 ((_ extract 7 6) inst))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e46 (bvand (bvnot v0) (ite $e9 #b1 #b0)))) (let (($e47 (concat #b0 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e48 (concat #b0 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e49 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e50 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand (bvand v0 (bvand (bvnot $e46) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e33)) (not (= #b10 $e33)) (not (= #b11 $e33))) #b1 #b0))) (bvnot $e46))))))) (ite (and (not (= #b00 $e34)) (= #b01 $e34)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e36 $e50 (ite $e37 $e49 (ite $e38 $e48 (ite $e39 $e47 #b00))))) (ite $e36 $e32 (ite $e37 $e31 (ite $e38 $e30 (ite $e39 $e29 #b00000000)))) $e45) (ite (= #b00 (ite $e41 $e50 (ite $e42 $e49 (ite $e43 $e48 (ite $e44 $e47 #b00))))) (ite $e41 $e32 (ite $e42 $e31 (ite $e43 $e30 (ite $e44 $e29 #b00000000)))) $e45)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and (not $e12) $e11) #b1 #b0))) $e45 $e30))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat #b0 (ite (and (= #b00 $e10) (not $e9)) #b1 #b0)))) (let (($e43 (concat #b0 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e44 (concat #b0 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat #b0 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (bvadd (ite (= #b00 (ite $e32 $e45 (ite $e33 $e44 (ite $e34 $e43 (ite $e35 $e42 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e45 (ite $e38 $e44 (ite $e39 $e43 (ite $e40 $e42 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 ((_ extract 7 6) inst))) (let (($e3 (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0)))) (bvand (bvnot $e3) (bvnot (bvand v0 (bvnot (bvand (bvnot (bvand v0 (ite (and (not (= #b01 $e2)) (not (= #b10 $e2)) (not (= #b11 $e2))) #b1 #b0))) (bvnot $e3)))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd2))) (let (($e2 (= #b01 rd2))) (let (($e3 (= #b10 rd2))) (let (($e4 ((_ extract 7 6) inst_id))) (let (($e5 (= #b10 $e4))) (let (($e6 (= #b01 $e4))) (let (($e7 (= #b11 $e4))) (let (($e8 (and (not $e6) (not $e5) (not $e7)))) (let (($e9 ((_ extract 1 0) inst_id))) (let (($e10 (= #b01 $e9))) (let (($e11 (= #b00 $e9))) (let (($e12 (= #b10 $e9))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e5 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 ((_ extract 5 4) inst))) (let (($e30 ((_ extract 3 2) inst))) (let (($e31 (ite $e6 (bvadd $e21 $e28) (ite $e5 $e13 (ite $e7 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e32 (bvand v2 (bvnot (bvshl #b1 w2))))) (let (($e33 (ite (and $e11 (not $e8)) $e31 (ite (= #b1 (bvand (ite $e1 #b1 #b0) $e32)) ex_val reg0)))) (let (($e34 (ite (and (not $e11) $e10 (not $e8)) $e31 (ite (= #b1 (bvand (ite (and $e2 (not $e1)) #b1 #b0) $e32)) ex_val reg1)))) (let (($e35 (ite (and $e12 (not $e10) (not $e11) (not $e8)) $e31 (ite (= #b1 (bvand (ite (and $e3 (not $e2) (not $e1)) #b1 #b0) $e32)) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e9) (not $e12) (not $e10) (not $e11) (not $e8)) $e31 (ite (= #b1 (bvand (ite (and (= #b11 rd2) (not $e3) (not $e2) (not $e1)) #b1 #b0) $e32)) ex_val reg3)))) (bvadd (ite (= #b11 $e29) $e36 (ite (= #b10 $e29) $e35 (ite (= #b01 $e29) $e34 (ite (= #b00 $e29) $e33 #b00000000)))) (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (ite (= #b00 rd2) #b1 #b0) (bvand v2 (bvnot (bvshl #b1 w2))))) ex_val reg0))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 ((_ extract 5 4) inst))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 ((_ extract 3 2) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e43 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e44 (concat (ite (and (= #b01 $e10) (not $e9)) #b1 #b0) v1))) (let (($e45 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e46 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e38 $e46 (ite $e39 $e45 (ite $e40 $e44 (ite $e41 $e43 #b00))))) (ite $e38 $e31 (ite $e39 $e30 (ite $e40 $e29 (ite $e41 $e28 #b00000000)))) $e42) (ite (= #b00 (ite $e33 $e46 (ite $e34 $e45 (ite $e35 $e44 (ite $e36 $e43 #b00))))) (ite $e33 $e31 (ite $e34 $e30 (ite $e35 $e29 (ite $e36 $e28 #b00000000)))) $e42)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite $e11 #b1 #b0))) $e42 $e28))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 ((_ extract 5 4) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 ((_ extract 3 2) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e47 (concat (ite (and $e12 (not $e9)) #b1 #b0) v1))) (let (($e48 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e49 (concat (ite (and $e13 (not $e9)) #b1 #b0) v1))) (let (($e50 (concat (ite (and $e14 (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (and (= #b11 $e35) (not (= #b10 $e35)) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e42 $e50 (ite $e43 $e49 (ite $e44 $e48 (ite $e45 $e47 #b00))))) (ite $e42 $e34 (ite $e43 $e33 (ite $e44 $e32 (ite $e45 $e31 #b00000000)))) $e46) (ite (= #b00 (ite $e37 $e50 (ite $e38 $e49 (ite $e39 $e48 (ite $e40 $e47 #b00))))) (ite $e37 $e34 (ite $e38 $e33 (ite $e39 $e32 (ite $e40 $e31 #b00000000)))) $e46)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e14 (not $e13) (not $e11) (not $e12)) #b1 #b0))) $e46 $e34))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e46 (concat (ite (and $e12 (not $e9)) #b1 #b0) v1))) (let (($e47 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e48 (concat (ite (and $e13 (not $e9)) #b1 #b0) v1))) (let (($e49 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (and (= #b10 $e34) (not (= #b01 $e34)) (not (= #b00 $e34))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e41 $e49 (ite $e42 $e48 (ite $e43 $e47 (ite $e44 $e46 #b00))))) (ite $e41 $e33 (ite $e42 $e32 (ite $e43 $e31 (ite $e44 $e30 #b00000000)))) $e45) (ite (= #b00 (ite $e36 $e49 (ite $e37 $e48 (ite $e38 $e47 (ite $e39 $e46 #b00))))) (ite $e36 $e33 (ite $e37 $e32 (ite $e38 $e31 (ite $e39 $e30 #b00000000)))) $e45)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e13 (not $e11) (not $e12)) #b1 #b0))) $e45 $e32)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 ((_ extract 1 0) inst))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e45 (concat (ite (and $e12 (not $e9)) #b1 #b0) v1))) (let (($e46 (concat (ite (and $e11 (not $e9)) #b1 #b0) v1))) (let (($e47 (concat (ite (and (= #b10 $e10) (not $e9)) #b1 #b0) v1))) (let (($e48 (concat (ite (and (= #b11 $e10) (not $e9)) #b1 #b0) v1))) (ite (= #b1 (bvand v0 (ite (and (not (= #b00 $e33)) (= #b01 $e33)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e40 $e48 (ite $e41 $e47 (ite $e42 $e46 (ite $e43 $e45 #b00))))) (ite $e40 $e32 (ite $e41 $e31 (ite $e42 $e30 (ite $e43 $e29 #b00000000)))) $e44) (ite (= #b00 (ite $e35 $e48 (ite $e36 $e47 (ite $e37 $e46 (ite $e38 $e45 #b00))))) (ite $e35 $e32 (ite $e36 $e31 (ite $e37 $e30 (ite $e38 $e29 #b00000000)))) $e44)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and (not $e12) $e11) #b1 #b0))) $e44 $e30))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b00 $e10))) (let (($e12 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e13 ((_ extract 5 4) inst_id))) (let (($e14 (= #b11 $e13))) (let (($e15 (= #b10 $e13))) (let (($e16 (= #b01 $e13))) (let (($e17 (= #b00 $e13))) (let (($e18 (ite $e14 s3 (ite $e15 s2 (ite $e16 s1 (ite $e17 s0 #b00)))))) (let (($e19 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e20 (ite $e6 $e12 (ite (= #b00 $e18) (ite $e14 reg3 (ite $e15 reg2 (ite $e16 reg1 (ite $e17 reg0 #b00000000)))) (ite (= #b01 $e18) ex_val $e19))))) (let (($e21 ((_ extract 3 2) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e19)))) (let (($e28 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e32 ((_ extract 5 4) inst))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 ((_ extract 3 2) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 (ite $e7 (bvadd $e20 $e27) (ite $e6 $e12 (ite $e8 (bvnot (bvand $e20 $e27)) #b00000000))))) (let (($e43 (concat v1 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e44 (concat v1 (ite (and (= #b01 $e10) (not $e9)) #b1 #b0)))) (let (($e45 (concat v1 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e46 (concat v1 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand v0 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e38 $e46 (ite $e39 $e45 (ite $e40 $e44 (ite $e41 $e43 #b00))))) (ite $e38 $e31 (ite $e39 $e30 (ite $e40 $e29 (ite $e41 $e28 #b00000000)))) $e42) (ite (= #b00 (ite $e33 $e46 (ite $e34 $e45 (ite $e35 $e44 (ite $e36 $e43 #b00))))) (ite $e33 $e31 (ite $e34 $e30 (ite $e35 $e29 (ite $e36 $e28 #b00000000)))) $e42)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite $e11 #b1 #b0))) $e42 $e28))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (= #b11 $e10))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 ((_ extract 1 0) inst))) (let (($e36 ((_ extract 5 4) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 ((_ extract 3 2) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e47 (concat v1 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e48 (concat v1 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e49 (concat v1 (ite (and $e13 (not $e9)) #b1 #b0)))) (let (($e50 (concat v1 (ite (and $e14 (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand v0 (ite (and (= #b11 $e35) (not (= #b10 $e35)) (not (= #b01 $e35)) (not (= #b00 $e35))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e42 $e50 (ite $e43 $e49 (ite $e44 $e48 (ite $e45 $e47 #b00))))) (ite $e42 $e34 (ite $e43 $e33 (ite $e44 $e32 (ite $e45 $e31 #b00000000)))) $e46) (ite (= #b00 (ite $e37 $e50 (ite $e38 $e49 (ite $e39 $e48 (ite $e40 $e47 #b00))))) (ite $e37 $e34 (ite $e38 $e33 (ite $e39 $e32 (ite $e40 $e31 #b00000000)))) $e46)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e14 (not $e13) (not $e11) (not $e12)) #b1 #b0))) $e46 $e34))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 ((_ extract 1 0) inst))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e46 (concat v1 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e47 (concat v1 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e48 (concat v1 (ite (and $e13 (not $e9)) #b1 #b0)))) (let (($e49 (concat v1 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand v0 (ite (and (= #b10 $e34) (not (= #b01 $e34)) (not (= #b00 $e34))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e41 $e49 (ite $e42 $e48 (ite $e43 $e47 (ite $e44 $e46 #b00))))) (ite $e41 $e33 (ite $e42 $e32 (ite $e43 $e31 (ite $e44 $e30 #b00000000)))) $e45) (ite (= #b00 (ite $e36 $e49 (ite $e37 $e48 (ite $e38 $e47 (ite $e39 $e46 #b00))))) (ite $e36 $e33 (ite $e37 $e32 (ite $e38 $e31 (ite $e39 $e30 #b00000000)))) $e45)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and $e13 (not $e11) (not $e12)) #b1 #b0))) $e45 $e32)))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 ((_ extract 1 0) inst))) (let (($e34 ((_ extract 5 4) inst))) (let (($e35 (= #b11 $e34))) (let (($e36 (= #b10 $e34))) (let (($e37 (= #b01 $e34))) (let (($e38 (= #b00 $e34))) (let (($e39 ((_ extract 3 2) inst))) (let (($e40 (= #b11 $e39))) (let (($e41 (= #b10 $e39))) (let (($e42 (= #b01 $e39))) (let (($e43 (= #b00 $e39))) (let (($e44 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e45 (concat v1 (ite (and $e12 (not $e9)) #b1 #b0)))) (let (($e46 (concat v1 (ite (and $e11 (not $e9)) #b1 #b0)))) (let (($e47 (concat v1 (ite (and (= #b10 $e10) (not $e9)) #b1 #b0)))) (let (($e48 (concat v1 (ite (and (= #b11 $e10) (not $e9)) #b1 #b0)))) (ite (= #b1 (bvand v0 (ite (and (not (= #b00 $e33)) (= #b01 $e33)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e40 $e48 (ite $e41 $e47 (ite $e42 $e46 (ite $e43 $e45 #b00))))) (ite $e40 $e32 (ite $e41 $e31 (ite $e42 $e30 (ite $e43 $e29 #b00000000)))) $e44) (ite (= #b00 (ite $e35 $e48 (ite $e36 $e47 (ite $e37 $e46 (ite $e38 $e45 #b00))))) (ite $e35 $e32 (ite $e36 $e31 (ite $e37 $e30 (ite $e38 $e29 #b00000000)))) $e44)) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e9 #b1 #b0))) (ite (and (not $e12) $e11) #b1 #b0))) $e44 $e30))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v0) (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e6 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (bvadd (ite (= #b11 $e9) $e8 (ite (= #b10 $e9) $e7 (ite (= #b01 $e9) $e6 (ite (= #b00 $e9) $e5 #b00000000)))) (ite (= #b11 $e10) $e8 (ite (= #b10 $e10) $e7 (ite (= #b01 $e10) $e6 (ite (= #b00 $e10) $e5 #b00000000)))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (bvand v0 (bvnot (ite (and (not $e7) (not $e6) (not $e8)) #b1 #b0))))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e6 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e28 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e29 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e31 ((_ extract 5 4) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 ((_ extract 3 2) inst))) (let (($e37 (= #b11 $e36))) (let (($e38 (= #b10 $e36))) (let (($e39 (= #b01 $e36))) (let (($e40 (= #b00 $e36))) (let (($e41 (ite $e7 (bvadd $e19 $e26) (ite $e6 $e11 (ite $e8 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e42 (concat v1 (bvand $e9 (ite (= #b11 $e10) #b1 #b0))))) (let (($e43 (concat v1 (bvand $e9 (ite (= #b01 $e10) #b1 #b0))))) (let (($e44 (concat v1 (bvand $e9 (ite (= #b00 $e10) #b1 #b0))))) (let (($e45 (concat v1 (bvand $e9 (ite (= #b10 $e10) #b1 #b0))))) (bvadd (ite (= #b00 (ite $e32 $e42 (ite $e33 $e45 (ite $e34 $e43 (ite $e35 $e44 #b00))))) (ite $e32 $e30 (ite $e33 $e29 (ite $e34 $e28 (ite $e35 $e27 #b00000000)))) $e41) (ite (= #b00 (ite $e37 $e42 (ite $e38 $e45 (ite $e39 $e43 (ite $e40 $e44 #b00))))) (ite $e37 $e30 (ite $e38 $e29 (ite $e39 $e28 (ite $e40 $e27 #b00000000)))) $e41)))))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | #b1                 
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1)))))))))))))))))))))))
| RTL_ex_wb_valid     | v0                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3)))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 ((_ extract 1 0) inst_id))) (let (($e11 (= #b01 $e10))) (let (($e12 (= #b00 $e10))) (let (($e13 (= #b10 $e10))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 ((_ extract 5 4) inst))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e33 (ite (and $e12 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0)))) (let (($e34 (ite (and (not $e12) $e11 (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1)))) (let (($e35 (ite (and $e13 (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2)))) (let (($e36 (ite (and (= #b11 $e10) (not $e13) (not $e11) (not $e12) (not $e9)) $e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e30) $e36 (ite (= #b10 $e30) $e35 (ite (= #b01 $e30) $e34 (ite (= #b00 $e30) $e33 #b00000000)))) (ite (= #b11 $e31) $e36 (ite (= #b10 $e31) $e35 (ite (= #b01 $e31) $e34 (ite (= #b00 $e31) $e33 #b00000000)))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b00 $e11))) (let (($e13 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e14 ((_ extract 5 4) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e21 (ite $e6 $e13 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e20))))) (let (($e22 ((_ extract 3 2) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e20)))) (let (($e29 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e30 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e33 (concat (bvand $e10 (ite (= #b11 $e11) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e34 (concat (bvand $e10 (ite (= #b01 $e11) #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e35 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e36 (concat (bvand $e10 (ite (= #b10 $e11) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e37 ((_ extract 7 6) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (ite $e7 (bvadd $e21 $e28) (ite $e6 $e13 (ite $e8 (bvnot (bvand $e21 $e28)) #b00000000))))) (let (($e49 (ite $e39 $e33 (ite $e40 $e36 (ite $e41 $e34 (ite $e42 $e35 #b00)))))) (let (($e50 (ite $e44 $e33 (ite $e45 $e36 (ite $e46 $e34 (ite $e47 $e35 #b00)))))) (let (($e51 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e37)) (not (= #b10 $e37)) (not (= #b11 $e37))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e51))))))) (bvadd (ite (= #b00 $e49) (ite $e39 $e32 (ite $e40 $e31 (ite $e41 $e30 (ite $e42 $e29 #b00000000)))) (ite (= #b01 $e49) $e20 $e48)) (ite (= #b00 $e50) (ite $e44 $e32 (ite $e45 $e31 (ite $e46 $e30 (ite $e47 $e29 #b00000000)))) (ite (= #b01 $e50) $e20 $e48))) (ite (= #b1 (bvand (ite $e12 #b1 #b0) (bvand v1 $e51))) $e48 (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e20 $e29))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b01 $e11))) (let (($e13 (= #b00 $e11))) (let (($e14 (= #b10 $e11))) (let (($e15 (= #b11 $e11))) (let (($e16 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e17 ((_ extract 5 4) inst_id))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 (ite $e18 s3 (ite $e19 s2 (ite $e20 s1 (ite $e21 s0 #b00)))))) (let (($e23 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e24 (ite $e6 $e16 (ite (= #b00 $e22) (ite $e18 reg3 (ite $e19 reg2 (ite $e20 reg1 (ite $e21 reg0 #b00000000)))) (ite (= #b01 $e22) ex_val $e23))))) (let (($e25 ((_ extract 3 2) inst_id))) (let (($e26 (= #b11 $e25))) (let (($e27 (= #b10 $e25))) (let (($e28 (= #b01 $e25))) (let (($e29 (= #b00 $e25))) (let (($e30 (ite $e26 s3 (ite $e27 s2 (ite $e28 s1 (ite $e29 s0 #b00)))))) (let (($e31 (ite (= #b00 $e30) (ite $e26 reg3 (ite $e27 reg2 (ite $e28 reg1 (ite $e29 reg0 #b00000000)))) (ite (= #b01 $e30) ex_val $e23)))) (let (($e32 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e35 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e36 (concat (bvand $e10 (ite $e15 #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e37 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e38 (concat (bvand $e10 (ite $e13 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e39 (concat (bvand $e10 (ite $e14 #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e40 ((_ extract 7 6) inst))) (let (($e41 ((_ extract 1 0) inst))) (let (($e42 ((_ extract 5 4) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 ((_ extract 3 2) inst))) (let (($e48 (= #b11 $e47))) (let (($e49 (= #b10 $e47))) (let (($e50 (= #b01 $e47))) (let (($e51 (= #b00 $e47))) (let (($e52 (ite $e7 (bvadd $e24 $e31) (ite $e6 $e16 (ite $e8 (bvnot (bvand $e24 $e31)) #b00000000))))) (let (($e53 (ite $e43 $e36 (ite $e44 $e39 (ite $e45 $e37 (ite $e46 $e38 #b00)))))) (let (($e54 (ite $e48 $e36 (ite $e49 $e39 (ite $e50 $e37 (ite $e51 $e38 #b00)))))) (let (($e55 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e40)) (not (= #b10 $e40)) (not (= #b11 $e40))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e55))))) (ite (and (= #b11 $e41) (not (= #b10 $e41)) (not (= #b01 $e41)) (not (= #b00 $e41))) #b1 #b0))) (bvadd (ite (= #b00 $e53) (ite $e43 $e35 (ite $e44 $e34 (ite $e45 $e33 (ite $e46 $e32 #b00000000)))) (ite (= #b01 $e53) $e23 $e52)) (ite (= #b00 $e54) (ite $e48 $e35 (ite $e49 $e34 (ite $e50 $e33 (ite $e51 $e32 #b00000000)))) (ite (= #b01 $e54) $e23 $e52))) (ite (= #b1 (bvand (ite (and $e15 (not $e14) (not $e12) (not $e13)) #b1 #b0) (bvand v1 $e55))) $e52 (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e23 $e35))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b01 $e11))) (let (($e13 (= #b00 $e11))) (let (($e14 (= #b10 $e11))) (let (($e15 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e16 ((_ extract 5 4) inst_id))) (let (($e17 (= #b11 $e16))) (let (($e18 (= #b10 $e16))) (let (($e19 (= #b01 $e16))) (let (($e20 (= #b00 $e16))) (let (($e21 (ite $e17 s3 (ite $e18 s2 (ite $e19 s1 (ite $e20 s0 #b00)))))) (let (($e22 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e23 (ite $e6 $e15 (ite (= #b00 $e21) (ite $e17 reg3 (ite $e18 reg2 (ite $e19 reg1 (ite $e20 reg0 #b00000000)))) (ite (= #b01 $e21) ex_val $e22))))) (let (($e24 ((_ extract 3 2) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e22)))) (let (($e31 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e34 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e35 (concat (bvand $e10 (ite (= #b11 $e11) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e36 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e37 (concat (bvand $e10 (ite $e13 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e38 (concat (bvand $e10 (ite $e14 #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e39 ((_ extract 7 6) inst))) (let (($e40 ((_ extract 1 0) inst))) (let (($e41 ((_ extract 5 4) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 ((_ extract 3 2) inst))) (let (($e47 (= #b11 $e46))) (let (($e48 (= #b10 $e46))) (let (($e49 (= #b01 $e46))) (let (($e50 (= #b00 $e46))) (let (($e51 (ite $e7 (bvadd $e23 $e30) (ite $e6 $e15 (ite $e8 (bvnot (bvand $e23 $e30)) #b00000000))))) (let (($e52 (ite $e42 $e35 (ite $e43 $e38 (ite $e44 $e36 (ite $e45 $e37 #b00)))))) (let (($e53 (ite $e47 $e35 (ite $e48 $e38 (ite $e49 $e36 (ite $e50 $e37 #b00)))))) (let (($e54 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e39)) (not (= #b10 $e39)) (not (= #b11 $e39))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e54))))) (ite (and (= #b10 $e40) (not (= #b01 $e40)) (not (= #b00 $e40))) #b1 #b0))) (bvadd (ite (= #b00 $e52) (ite $e42 $e34 (ite $e43 $e33 (ite $e44 $e32 (ite $e45 $e31 #b00000000)))) (ite (= #b01 $e52) $e22 $e51)) (ite (= #b00 $e53) (ite $e47 $e34 (ite $e48 $e33 (ite $e49 $e32 (ite $e50 $e31 #b00000000)))) (ite (= #b01 $e53) $e22 $e51))) (ite (= #b1 (bvand (ite (and $e14 (not $e12) (not $e13)) #b1 #b0) (bvand v1 $e54))) $e51 (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e22 $e33)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 ((_ extract 7 6) inst_id))) (let (($e6 (= #b10 $e5))) (let (($e7 (= #b01 $e5))) (let (($e8 (= #b11 $e5))) (let (($e9 (and (not $e7) (not $e6) (not $e8)))) (let (($e10 (bvand v0 (bvnot (ite $e9 #b1 #b0))))) (let (($e11 ((_ extract 1 0) inst_id))) (let (($e12 (= #b01 $e11))) (let (($e13 (= #b00 $e11))) (let (($e14 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e15 ((_ extract 5 4) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e22 (ite $e6 $e14 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e21))))) (let (($e23 ((_ extract 3 2) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e21)))) (let (($e30 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e31 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e32 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e33 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e34 (concat (bvand $e10 (ite (= #b11 $e11) #b1 #b0)) (ite (bvult #b01 s3) #b1 #b0)))) (let (($e35 (concat (bvand $e10 (ite $e12 #b1 #b0)) (ite (bvult #b01 s1) #b1 #b0)))) (let (($e36 (concat (bvand $e10 (ite $e13 #b1 #b0)) (ite (bvult #b01 s0) #b1 #b0)))) (let (($e37 (concat (bvand $e10 (ite (= #b10 $e11) #b1 #b0)) (ite (bvult #b01 s2) #b1 #b0)))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 ((_ extract 5 4) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 ((_ extract 3 2) inst))) (let (($e46 (= #b11 $e45))) (let (($e47 (= #b10 $e45))) (let (($e48 (= #b01 $e45))) (let (($e49 (= #b00 $e45))) (let (($e50 (ite $e7 (bvadd $e22 $e29) (ite $e6 $e14 (ite $e8 (bvnot (bvand $e22 $e29)) #b00000000))))) (let (($e51 (ite $e41 $e34 (ite $e42 $e37 (ite $e43 $e35 (ite $e44 $e36 #b00)))))) (let (($e52 (ite $e46 $e34 (ite $e47 $e37 (ite $e48 $e35 (ite $e49 $e36 #b00)))))) (let (($e53 (bvand (bvnot (bvand v1 (ite $e9 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e9 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e53))))) (ite (and (not (= #b00 $e39)) (= #b01 $e39)) #b1 #b0))) (bvadd (ite (= #b00 $e51) (ite $e41 $e33 (ite $e42 $e32 (ite $e43 $e31 (ite $e44 $e30 #b00000000)))) (ite (= #b01 $e51) $e21 $e50)) (ite (= #b00 $e52) (ite $e46 $e33 (ite $e47 $e32 (ite $e48 $e31 (ite $e49 $e30 #b00000000)))) (ite (= #b01 $e52) $e21 $e50))) (ite (= #b1 (bvand (ite (and (not $e13) $e12) #b1 #b0) (bvand v1 $e53))) $e50 (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e21 $e31))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (bvand w2 v2))) (let (($e2 (= #b00 rd2))) (let (($e3 (= #b01 rd2))) (let (($e4 (= #b10 rd2))) (let (($e5 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e6 (ite (= #b1 (bvand $e1 (ite $e2 #b1 #b0))) ex_val reg0))) (let (($e7 (ite (= #b1 (bvand $e1 (ite (and $e3 (not $e2)) #b1 #b0))) ex_val reg1))) (let (($e8 (ite (= #b1 (bvand $e1 (ite (and $e4 (not $e3) (not $e2)) #b1 #b0))) ex_val reg2))) (let (($e9 (ite (= #b1 (bvand $e1 (ite (and (= #b11 rd2) (not $e4) (not $e3) (not $e2)) #b1 #b0))) ex_val reg3))) (let (($e10 ((_ extract 5 4) inst))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 ((_ extract 3 2) inst))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (concat #b0 (ite (bvult #b01 s0) #b1 #b0)))) (let (($e21 (concat #b0 (ite (bvult #b01 s1) #b1 #b0)))) (let (($e22 (concat #b0 (ite (bvult #b01 s2) #b1 #b0)))) (let (($e23 (concat #b0 (ite (bvult #b01 s3) #b1 #b0)))) (let (($e24 (ite $e16 $e23 (ite $e17 $e22 (ite $e18 $e21 (ite $e19 $e20 #b00)))))) (let (($e25 (ite $e11 $e23 (ite $e12 $e22 (ite $e13 $e21 (ite $e14 $e20 #b00)))))) (bvadd (ite (= #b00 $e24) (ite $e16 $e9 (ite $e17 $e8 (ite $e18 $e7 (ite $e19 $e6 #b00000000)))) (ite (= #b01 $e24) $e5 #b00000000)) (ite (= #b00 $e25) (ite $e11 $e9 (ite $e12 $e8 (ite $e13 $e7 (ite $e14 $e6 #b00000000)))) (ite (= #b01 $e25) $e5 #b00000000))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (bvand $e13 (ite (= #b01 $e14) #b1 #b0)))) (let (($e16 (= #b00 $e14))) (let (($e17 (bvand $e13 (ite $e16 #b1 #b0)))) (let (($e18 (bvand $e13 (ite (= #b10 $e14) #b1 #b0)))) (let (($e19 (bvand $e13 (ite (= #b11 $e14) #b1 #b0)))) (let (($e20 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e21 ((_ extract 5 4) inst_id))) (let (($e22 (= #b11 $e21))) (let (($e23 (= #b10 $e21))) (let (($e24 (= #b01 $e21))) (let (($e25 (= #b00 $e21))) (let (($e26 (ite $e22 s3 (ite $e23 s2 (ite $e24 s1 (ite $e25 s0 #b00)))))) (let (($e27 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e28 (ite $e9 $e20 (ite (= #b00 $e26) (ite $e22 reg3 (ite $e23 reg2 (ite $e24 reg1 (ite $e25 reg0 #b00000000)))) (ite (= #b01 $e26) ex_val $e27))))) (let (($e29 ((_ extract 3 2) inst_id))) (let (($e30 (= #b11 $e29))) (let (($e31 (= #b10 $e29))) (let (($e32 (= #b01 $e29))) (let (($e33 (= #b00 $e29))) (let (($e34 (ite $e30 s3 (ite $e31 s2 (ite $e32 s1 (ite $e33 s0 #b00)))))) (let (($e35 (ite (= #b00 $e34) (ite $e30 reg3 (ite $e31 reg2 (ite $e32 reg1 (ite $e33 reg0 #b00000000)))) (ite (= #b01 $e34) ex_val $e27)))) (let (($e36 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e37 ((_ extract 7 6) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e27 $e36))) (let (($e49 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e27 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e27 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e51 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e27 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e52 (ite $e10 (bvadd $e28 $e35) (ite $e9 $e20 (ite $e11 (bvnot (bvand $e28 $e35)) #b00000000))))) (let (($e53 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e54 (bvand (concat $e17 (ite (bvult #b01 s0) #b1 #b0)) (concat $e17 #b0)))) (let (($e55 (bvand (concat $e15 (ite (bvult #b01 s1) #b1 #b0)) (concat $e15 #b0)))) (let (($e56 (bvand (concat $e18 (ite (bvult #b01 s2) #b1 #b0)) (concat $e18 #b0)))) (let (($e57 (bvand (concat $e19 (ite (bvult #b01 s3) #b1 #b0)) (concat $e19 #b0)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e37)) (not (= #b10 $e37)) (not (= #b11 $e37))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e53))))))) (bvadd (ite (= #b00 (ite $e39 $e57 (ite $e40 $e56 (ite $e41 $e55 (ite $e42 $e54 #b00))))) (ite $e39 $e51 (ite $e40 $e50 (ite $e41 $e49 (ite $e42 $e48 #b00000000)))) $e52) (ite (= #b00 (ite $e44 $e57 (ite $e45 $e56 (ite $e46 $e55 (ite $e47 $e54 #b00))))) (ite $e44 $e51 (ite $e45 $e50 (ite $e46 $e49 (ite $e47 $e48 #b00000000)))) $e52)) (ite (= #b1 (bvand (ite $e16 #b1 #b0) (bvand v1 $e53))) $e52 (ite (= #b1 (bvand (bvand w1 v1) (ite $e1 #b1 #b0))) $e27 $e36))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (= #b00 $e14))) (let (($e18 (bvand $e13 (ite $e17 #b1 #b0)))) (let (($e19 (= #b10 $e14))) (let (($e20 (bvand $e13 (ite $e19 #b1 #b0)))) (let (($e21 (= #b11 $e14))) (let (($e22 (bvand $e13 (ite $e21 #b1 #b0)))) (let (($e23 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e24 ((_ extract 5 4) inst_id))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 (ite $e25 s3 (ite $e26 s2 (ite $e27 s1 (ite $e28 s0 #b00)))))) (let (($e30 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e31 (ite $e9 $e23 (ite (= #b00 $e29) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e29) ex_val $e30))))) (let (($e32 ((_ extract 3 2) inst_id))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 (ite $e33 s3 (ite $e34 s2 (ite $e35 s1 (ite $e36 s0 #b00)))))) (let (($e38 (ite (= #b00 $e37) (ite $e33 reg3 (ite $e34 reg2 (ite $e35 reg1 (ite $e36 reg0 #b00000000)))) (ite (= #b01 $e37) ex_val $e30)))) (let (($e39 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e40 ((_ extract 7 6) inst))) (let (($e41 ((_ extract 1 0) inst))) (let (($e42 ((_ extract 5 4) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 ((_ extract 3 2) inst))) (let (($e48 (= #b11 $e47))) (let (($e49 (= #b10 $e47))) (let (($e50 (= #b01 $e47))) (let (($e51 (= #b00 $e47))) (let (($e52 (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)))) (let (($e53 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e30 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e54 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e30 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e55 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e30 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e56 (ite (= #b1 (bvand w1 (ite $e52 #b1 #b0))) $e30 $e39))) (let (($e57 (ite $e10 (bvadd $e31 $e38) (ite $e9 $e23 (ite $e11 (bvnot (bvand $e31 $e38)) #b00000000))))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat $e18 (ite (bvult #b01 s0) #b1 #b0)) (concat $e18 #b0)))) (let (($e60 (bvand (concat $e16 (ite (bvult #b01 s1) #b1 #b0)) (concat $e16 #b0)))) (let (($e61 (bvand (concat $e20 (ite (bvult #b01 s2) #b1 #b0)) (concat $e20 #b0)))) (let (($e62 (bvand (concat $e22 (ite (bvult #b01 s3) #b1 #b0)) (concat $e22 #b0)))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e40)) (not (= #b10 $e40)) (not (= #b11 $e40))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (= #b11 $e41) (not (= #b10 $e41)) (not (= #b01 $e41)) (not (= #b00 $e41))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e43 $e62 (ite $e44 $e61 (ite $e45 $e60 (ite $e46 $e59 #b00))))) (ite $e43 $e56 (ite $e44 $e55 (ite $e45 $e54 (ite $e46 $e53 #b00000000)))) $e57) (ite (= #b00 (ite $e48 $e62 (ite $e49 $e61 (ite $e50 $e60 (ite $e51 $e59 #b00))))) (ite $e48 $e56 (ite $e49 $e55 (ite $e50 $e54 (ite $e51 $e53 #b00000000)))) $e57)) (ite (= #b1 (bvand (ite (and $e21 (not $e19) (not $e15) (not $e17)) #b1 #b0) (bvand v1 $e58))) $e57 (ite (= #b1 (bvand (bvand w1 v1) (ite $e52 #b1 #b0))) $e30 $e39)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (= #b00 $e14))) (let (($e18 (bvand $e13 (ite $e17 #b1 #b0)))) (let (($e19 (= #b10 $e14))) (let (($e20 (bvand $e13 (ite $e19 #b1 #b0)))) (let (($e21 (bvand $e13 (ite (= #b11 $e14) #b1 #b0)))) (let (($e22 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e23 ((_ extract 5 4) inst_id))) (let (($e24 (= #b11 $e23))) (let (($e25 (= #b10 $e23))) (let (($e26 (= #b01 $e23))) (let (($e27 (= #b00 $e23))) (let (($e28 (ite $e24 s3 (ite $e25 s2 (ite $e26 s1 (ite $e27 s0 #b00)))))) (let (($e29 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e30 (ite $e9 $e22 (ite (= #b00 $e28) (ite $e24 reg3 (ite $e25 reg2 (ite $e26 reg1 (ite $e27 reg0 #b00000000)))) (ite (= #b01 $e28) ex_val $e29))))) (let (($e31 ((_ extract 3 2) inst_id))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e32 s3 (ite $e33 s2 (ite $e34 s1 (ite $e35 s0 #b00)))))) (let (($e37 (ite (= #b00 $e36) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e36) ex_val $e29)))) (let (($e38 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e39 ((_ extract 7 6) inst))) (let (($e40 ((_ extract 1 0) inst))) (let (($e41 ((_ extract 5 4) inst))) (let (($e42 (= #b11 $e41))) (let (($e43 (= #b10 $e41))) (let (($e44 (= #b01 $e41))) (let (($e45 (= #b00 $e41))) (let (($e46 ((_ extract 3 2) inst))) (let (($e47 (= #b11 $e46))) (let (($e48 (= #b10 $e46))) (let (($e49 (= #b01 $e46))) (let (($e50 (= #b00 $e46))) (let (($e51 (and $e6 (not $e4) (not $e1)))) (let (($e52 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e29 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e53 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e54 (ite (= #b1 (bvand w1 (ite $e51 #b1 #b0))) $e29 $e38))) (let (($e55 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e29 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e56 (ite $e10 (bvadd $e30 $e37) (ite $e9 $e22 (ite $e11 (bvnot (bvand $e30 $e37)) #b00000000))))) (let (($e57 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e58 (bvand (concat $e18 (ite (bvult #b01 s0) #b1 #b0)) (concat $e18 #b0)))) (let (($e59 (bvand (concat $e16 (ite (bvult #b01 s1) #b1 #b0)) (concat $e16 #b0)))) (let (($e60 (bvand (concat $e20 (ite (bvult #b01 s2) #b1 #b0)) (concat $e20 #b0)))) (let (($e61 (bvand (concat $e21 (ite (bvult #b01 s3) #b1 #b0)) (concat $e21 #b0)))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e39)) (not (= #b10 $e39)) (not (= #b11 $e39))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e57))))) (ite (and (= #b10 $e40) (not (= #b01 $e40)) (not (= #b00 $e40))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e42 $e61 (ite $e43 $e60 (ite $e44 $e59 (ite $e45 $e58 #b00))))) (ite $e42 $e55 (ite $e43 $e54 (ite $e44 $e53 (ite $e45 $e52 #b00000000)))) $e56) (ite (= #b00 (ite $e47 $e61 (ite $e48 $e60 (ite $e49 $e59 (ite $e50 $e58 #b00))))) (ite $e47 $e55 (ite $e48 $e54 (ite $e49 $e53 (ite $e50 $e52 #b00000000)))) $e56)) (ite (= #b1 (bvand (ite (and $e19 (not $e15) (not $e17)) #b1 #b0) (bvand v1 $e57))) $e56 (ite (= #b1 (bvand (bvand w1 v1) (ite $e51 #b1 #b0))) $e29 $e38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (bvand $e13 (ite $e15 #b1 #b0)))) (let (($e17 (= #b00 $e14))) (let (($e18 (bvand $e13 (ite $e17 #b1 #b0)))) (let (($e19 (bvand $e13 (ite (= #b10 $e14) #b1 #b0)))) (let (($e20 (bvand $e13 (ite (= #b11 $e14) #b1 #b0)))) (let (($e21 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e22 ((_ extract 5 4) inst_id))) (let (($e23 (= #b11 $e22))) (let (($e24 (= #b10 $e22))) (let (($e25 (= #b01 $e22))) (let (($e26 (= #b00 $e22))) (let (($e27 (ite $e23 s3 (ite $e24 s2 (ite $e25 s1 (ite $e26 s0 #b00)))))) (let (($e28 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e29 (ite $e9 $e21 (ite (= #b00 $e27) (ite $e23 reg3 (ite $e24 reg2 (ite $e25 reg1 (ite $e26 reg0 #b00000000)))) (ite (= #b01 $e27) ex_val $e28))))) (let (($e30 ((_ extract 3 2) inst_id))) (let (($e31 (= #b11 $e30))) (let (($e32 (= #b10 $e30))) (let (($e33 (= #b01 $e30))) (let (($e34 (= #b00 $e30))) (let (($e35 (ite $e31 s3 (ite $e32 s2 (ite $e33 s1 (ite $e34 s0 #b00)))))) (let (($e36 (ite (= #b00 $e35) (ite $e31 reg3 (ite $e32 reg2 (ite $e33 reg1 (ite $e34 reg0 #b00000000)))) (ite (= #b01 $e35) ex_val $e28)))) (let (($e37 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e38 ((_ extract 7 6) inst))) (let (($e39 ((_ extract 1 0) inst))) (let (($e40 ((_ extract 5 4) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 ((_ extract 3 2) inst))) (let (($e46 (= #b11 $e45))) (let (($e47 (= #b10 $e45))) (let (($e48 (= #b01 $e45))) (let (($e49 (= #b00 $e45))) (let (($e50 (and $e4 (not $e1)))) (let (($e51 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e28 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e52 (ite (= #b1 (bvand w1 (ite $e50 #b1 #b0))) $e28 $e37))) (let (($e53 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e28 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e54 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e28 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e55 (ite $e10 (bvadd $e29 $e36) (ite $e9 $e21 (ite $e11 (bvnot (bvand $e29 $e36)) #b00000000))))) (let (($e56 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e57 (bvand (concat $e18 (ite (bvult #b01 s0) #b1 #b0)) (concat $e18 #b0)))) (let (($e58 (bvand (concat $e16 (ite (bvult #b01 s1) #b1 #b0)) (concat $e16 #b0)))) (let (($e59 (bvand (concat $e19 (ite (bvult #b01 s2) #b1 #b0)) (concat $e19 #b0)))) (let (($e60 (bvand (concat $e20 (ite (bvult #b01 s3) #b1 #b0)) (concat $e20 #b0)))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e38)) (not (= #b10 $e38)) (not (= #b11 $e38))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e56))))) (ite (and (not (= #b00 $e39)) (= #b01 $e39)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e41 $e60 (ite $e42 $e59 (ite $e43 $e58 (ite $e44 $e57 #b00))))) (ite $e41 $e54 (ite $e42 $e53 (ite $e43 $e52 (ite $e44 $e51 #b00000000)))) $e55) (ite (= #b00 (ite $e46 $e60 (ite $e47 $e59 (ite $e48 $e58 (ite $e49 $e57 #b00))))) (ite $e46 $e54 (ite $e47 $e53 (ite $e48 $e52 (ite $e49 $e51 #b00000000)))) $e55)) (ite (= #b1 (bvand (ite (and (not $e17) $e15) #b1 #b0) (bvand v1 $e56))) $e55 (ite (= #b1 (bvand (bvand w1 v1) (ite $e50 #b1 #b0))) $e28 $e37)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 5 4) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 ((_ extract 3 2) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 $e35))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e51 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e52 (and $e16 (not $e12)))) (let (($e53 (and $e15 (not $e12)))) (let (($e54 (and $e17 (not $e12)))) (let (($e55 (and $e18 (not $e12)))) (let (($e56 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e57 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e58 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e53 #b1 #b0))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e55 #b1 #b0))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e56))))))) (bvadd (ite (= #b00 (ite $e38 $e60 (ite $e39 $e59 (ite $e40 $e58 (ite $e41 $e57 #b00))))) (ite $e38 $e50 (ite $e39 $e49 (ite $e40 $e48 (ite $e41 $e47 #b00000000)))) $e51) (ite (= #b00 (ite $e43 $e60 (ite $e44 $e59 (ite $e45 $e58 (ite $e46 $e57 #b00))))) (ite $e43 $e50 (ite $e44 $e49 (ite $e45 $e48 (ite $e46 $e47 #b00000000)))) $e51)) (ite (= #b1 (bvand (ite $e16 #b1 #b0) (bvand v1 $e56))) $e51 (ite (= #b1 (bvand (bvand w1 v1) (ite $e1 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 1 0) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e51 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e52 (ite (= #b1 (bvand w1 (ite $e48 #b1 #b0))) $e26 $e35))) (let (($e53 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e54 (and $e16 (not $e12)))) (let (($e55 (and $e15 (not $e12)))) (let (($e56 (and $e17 (not $e12)))) (let (($e57 (and $e18 (not $e12)))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e55 #b1 #b0))))) (let (($e61 (bvand (concat #b0 (ite $e56 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e56 #b1 #b0))))) (let (($e62 (bvand (concat #b0 (ite $e57 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e57 #b1 #b0))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (= #b11 $e37) (not (= #b10 $e37)) (not (= #b01 $e37)) (not (= #b00 $e37))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e39 $e62 (ite $e40 $e61 (ite $e41 $e60 (ite $e42 $e59 #b00))))) (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00000000)))) $e53) (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e52 (ite $e45 $e51 (ite $e46 $e50 (ite $e47 $e49 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and $e18 (not $e17) (not $e15) (not $e16)) #b1 #b0) (bvand v1 $e58))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e48 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 1 0) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (and $e6 (not $e4) (not $e1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e51 (ite (= #b1 (bvand w1 (ite $e48 #b1 #b0))) $e26 $e35))) (let (($e52 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e53 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e54 (and $e16 (not $e12)))) (let (($e55 (and $e15 (not $e12)))) (let (($e56 (and $e17 (not $e12)))) (let (($e57 (and $e18 (not $e12)))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e55 #b1 #b0))))) (let (($e61 (bvand (concat #b0 (ite $e56 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e56 #b1 #b0))))) (let (($e62 (bvand (concat #b0 (ite $e57 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e57 #b1 #b0))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (= #b10 $e37) (not (= #b01 $e37)) (not (= #b00 $e37))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e39 $e62 (ite $e40 $e61 (ite $e41 $e60 (ite $e42 $e59 #b00))))) (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00000000)))) $e53) (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e52 (ite $e45 $e51 (ite $e46 $e50 (ite $e47 $e49 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and $e17 (not $e15) (not $e16)) #b1 #b0) (bvand v1 $e58))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e48 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 1 0) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (and $e4 (not $e1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e50 (ite (= #b1 (bvand w1 (ite $e48 #b1 #b0))) $e26 $e35))) (let (($e51 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e52 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e53 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e54 (and $e16 (not $e12)))) (let (($e55 (and $e15 (not $e12)))) (let (($e56 (and $e17 (not $e12)))) (let (($e57 (and $e18 (not $e12)))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e55 #b1 #b0))))) (let (($e61 (bvand (concat #b0 (ite $e56 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e56 #b1 #b0))))) (let (($e62 (bvand (concat #b0 (ite $e57 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e57 #b1 #b0))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (not (= #b00 $e37)) (= #b01 $e37)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e39 $e62 (ite $e40 $e61 (ite $e41 $e60 (ite $e42 $e59 #b00))))) (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00000000)))) $e53) (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e52 (ite $e45 $e51 (ite $e46 $e50 (ite $e47 $e49 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and (not $e16) $e15) #b1 #b0) (bvand v1 $e58))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e48 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (let (($e36 (ite (and $e15 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))))) (let (($e37 (ite (and (not $e15) $e14 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))))) (let (($e38 (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))))) (let (($e39 (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))))) (bvadd (ite (= #b11 $e33) $e39 (ite (= #b10 $e33) $e38 (ite (= #b01 $e33) $e37 (ite (= #b00 $e33) $e36 #b00000000)))) (ite (= #b11 $e34) $e39 (ite (= #b10 $e34) $e38 (ite (= #b01 $e34) $e37 (ite (= #b00 $e34) $e36 #b00000000))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
>> [[] ptr: 0]  new state!
=============================
Finish!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_registers[0]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 5 4) inst))) (let (($e38 (= #b11 $e37))) (let (($e39 (= #b10 $e37))) (let (($e40 (= #b01 $e37))) (let (($e41 (= #b00 $e37))) (let (($e42 ((_ extract 3 2) inst))) (let (($e43 (= #b11 $e42))) (let (($e44 (= #b10 $e42))) (let (($e45 (= #b01 $e42))) (let (($e46 (= #b00 $e42))) (let (($e47 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 $e35))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e51 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e52 (and $e16 (not $e12)))) (let (($e53 (and $e15 (not $e12)))) (let (($e54 (and $e17 (not $e12)))) (let (($e55 (and $e18 (not $e12)))) (let (($e56 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e57 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e58 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e53 #b1 #b0))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e55 #b1 #b0))))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e56))))))) (bvadd (ite (= #b00 (ite $e38 $e60 (ite $e39 $e59 (ite $e40 $e58 (ite $e41 $e57 #b00))))) (ite $e38 $e50 (ite $e39 $e49 (ite $e40 $e48 (ite $e41 $e47 #b00000000)))) $e51) (ite (= #b00 (ite $e43 $e60 (ite $e44 $e59 (ite $e45 $e58 (ite $e46 $e57 #b00))))) (ite $e43 $e50 (ite $e44 $e49 (ite $e45 $e48 (ite $e46 $e47 #b00000000)))) $e51)) (ite (= #b1 (bvand (ite $e16 #b1 #b0) (bvand v1 $e56))) $e51 (ite (= #b1 (bvand (bvand w1 v1) (ite $e1 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[3]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 1 0) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e51 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e52 (ite (= #b1 (bvand w1 (ite $e48 #b1 #b0))) $e26 $e35))) (let (($e53 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e54 (and $e16 (not $e12)))) (let (($e55 (and $e15 (not $e12)))) (let (($e56 (and $e17 (not $e12)))) (let (($e57 (and $e18 (not $e12)))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e55 #b1 #b0))))) (let (($e61 (bvand (concat #b0 (ite $e56 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e56 #b1 #b0))))) (let (($e62 (bvand (concat #b0 (ite $e57 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e57 #b1 #b0))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (= #b11 $e37) (not (= #b10 $e37)) (not (= #b01 $e37)) (not (= #b00 $e37))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e39 $e62 (ite $e40 $e61 (ite $e41 $e60 (ite $e42 $e59 #b00))))) (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00000000)))) $e53) (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e52 (ite $e45 $e51 (ite $e46 $e50 (ite $e47 $e49 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and $e18 (not $e17) (not $e15) (not $e16)) #b1 #b0) (bvand v1 $e58))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e48 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 1 0) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (and $e6 (not $e4) (not $e1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e50 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e51 (ite (= #b1 (bvand w1 (ite $e48 #b1 #b0))) $e26 $e35))) (let (($e52 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e53 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e54 (and $e16 (not $e12)))) (let (($e55 (and $e15 (not $e12)))) (let (($e56 (and $e17 (not $e12)))) (let (($e57 (and $e18 (not $e12)))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e55 #b1 #b0))))) (let (($e61 (bvand (concat #b0 (ite $e56 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e56 #b1 #b0))))) (let (($e62 (bvand (concat #b0 (ite $e57 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e57 #b1 #b0))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (= #b10 $e37) (not (= #b01 $e37)) (not (= #b00 $e37))) #b1 #b0))) (bvadd (ite (= #b00 (ite $e39 $e62 (ite $e40 $e61 (ite $e41 $e60 (ite $e42 $e59 #b00))))) (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00000000)))) $e53) (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e52 (ite $e45 $e51 (ite $e46 $e50 (ite $e47 $e49 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and $e17 (not $e15) (not $e16)) #b1 #b0) (bvand v1 $e58))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e48 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| RTL_registers[1]    | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))) (let (($e36 ((_ extract 7 6) inst))) (let (($e37 ((_ extract 1 0) inst))) (let (($e38 ((_ extract 5 4) inst))) (let (($e39 (= #b11 $e38))) (let (($e40 (= #b10 $e38))) (let (($e41 (= #b01 $e38))) (let (($e42 (= #b00 $e38))) (let (($e43 ((_ extract 3 2) inst))) (let (($e44 (= #b11 $e43))) (let (($e45 (= #b10 $e43))) (let (($e46 (= #b01 $e43))) (let (($e47 (= #b00 $e43))) (let (($e48 (and $e4 (not $e1)))) (let (($e49 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e50 (ite (= #b1 (bvand w1 (ite $e48 #b1 #b0))) $e26 $e35))) (let (($e51 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e52 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e53 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e54 (and $e16 (not $e12)))) (let (($e55 (and $e15 (not $e12)))) (let (($e56 (and $e17 (not $e12)))) (let (($e57 (and $e18 (not $e12)))) (let (($e58 (bvand (bvnot (bvand v1 (ite $e12 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))) (let (($e59 (bvand (concat #b0 (ite $e54 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e54 #b1 #b0))))) (let (($e60 (bvand (concat #b0 (ite $e55 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e55 #b1 #b0))))) (let (($e61 (bvand (concat #b0 (ite $e56 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e56 #b1 #b0))))) (let (($e62 (bvand (concat #b0 (ite $e57 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e57 #b1 #b0))))) (ite (= #b1 (bvand (bvand v1 (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e36)) (not (= #b10 $e36)) (not (= #b11 $e36))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e12 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot $e58))))) (ite (and (not (= #b00 $e37)) (= #b01 $e37)) #b1 #b0))) (bvadd (ite (= #b00 (ite $e39 $e62 (ite $e40 $e61 (ite $e41 $e60 (ite $e42 $e59 #b00))))) (ite $e39 $e52 (ite $e40 $e51 (ite $e41 $e50 (ite $e42 $e49 #b00000000)))) $e53) (ite (= #b00 (ite $e44 $e62 (ite $e45 $e61 (ite $e46 $e60 (ite $e47 $e59 #b00))))) (ite $e44 $e52 (ite $e45 $e51 (ite $e46 $e50 (ite $e47 $e49 #b00000000)))) $e53)) (ite (= #b1 (bvand (ite (and (not $e16) $e15) #b1 #b0) (bvand v1 $e58))) $e53 (ite (= #b1 (bvand (bvand w1 v1) (ite $e48 #b1 #b0))) $e26 $e35)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))))
| RTL_registers[1]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
| RTL_registers[2]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e9 ((_ extract 5 4) inst))) (let (($e10 ((_ extract 3 2) inst))) (let (($e11 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e12 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e13 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e14 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e8 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (bvadd (ite (= #b11 $e9) $e14 (ite (= #b10 $e9) $e13 (ite (= #b01 $e9) $e12 (ite (= #b00 $e9) $e11 #b00000000)))) (ite (= #b11 $e10) $e14 (ite (= #b10 $e10) $e13 (ite (= #b01 $e10) $e12 (ite (= #b00 $e10) $e11 #b00000000)))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (not (= #b00 $e5)) (= #b01 $e5)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (= #b1 (bvand (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5))) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 (bvand v0 (bvnot (ite $e12 #b1 #b0))))) (let (($e14 ((_ extract 1 0) inst_id))) (let (($e15 (= #b01 $e14))) (let (($e16 (= #b00 $e14))) (let (($e17 (= #b10 $e14))) (let (($e18 (= #b11 $e14))) (let (($e19 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e20 ((_ extract 5 4) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e27 (ite $e9 $e19 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e26))))) (let (($e28 ((_ extract 3 2) inst_id))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 (ite $e29 s3 (ite $e30 s2 (ite $e31 s1 (ite $e32 s0 #b00)))))) (let (($e34 (ite (= #b00 $e33) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e33) ex_val $e26)))) (let (($e35 ((_ extract 5 4) inst))) (let (($e36 (= #b11 $e35))) (let (($e37 (= #b10 $e35))) (let (($e38 (= #b01 $e35))) (let (($e39 (= #b00 $e35))) (let (($e40 ((_ extract 3 2) inst))) (let (($e41 (= #b11 $e40))) (let (($e42 (= #b10 $e40))) (let (($e43 (= #b01 $e40))) (let (($e44 (= #b00 $e40))) (let (($e45 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0)))) (let (($e46 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1)))) (let (($e47 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2)))) (let (($e48 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e26 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3)))) (let (($e49 (ite $e10 (bvadd $e27 $e34) (ite $e9 $e19 (ite $e11 (bvnot (bvand $e27 $e34)) #b00000000))))) (let (($e50 (and $e16 (not $e12)))) (let (($e51 (and $e15 (not $e12)))) (let (($e52 (and $e17 (not $e12)))) (let (($e53 (and $e18 (not $e12)))) (let (($e54 (bvand (concat #b0 (ite $e50 #b1 #b0)) (concat (bvand $e13 (ite $e16 #b1 #b0)) (ite $e50 #b1 #b0))))) (let (($e55 (bvand (concat #b0 (ite $e51 #b1 #b0)) (concat (bvand $e13 (ite $e15 #b1 #b0)) (ite $e51 #b1 #b0))))) (let (($e56 (bvand (concat #b0 (ite $e52 #b1 #b0)) (concat (bvand $e13 (ite $e17 #b1 #b0)) (ite $e52 #b1 #b0))))) (let (($e57 (bvand (concat #b0 (ite $e53 #b1 #b0)) (concat (bvand $e13 (ite $e18 #b1 #b0)) (ite $e53 #b1 #b0))))) (bvadd (ite (= #b00 (ite $e36 $e57 (ite $e37 $e56 (ite $e38 $e55 (ite $e39 $e54 #b00))))) (ite $e36 $e48 (ite $e37 $e47 (ite $e38 $e46 (ite $e39 $e45 #b00000000)))) $e49) (ite (= #b00 (ite $e41 $e57 (ite $e42 $e56 (ite $e43 $e55 (ite $e44 $e54 #b00))))) (ite $e41 $e48 (ite $e42 $e47 (ite $e43 $e46 (ite $e44 $e45 #b00000000)))) $e49)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (= #b1 (bvand (ite (= #b00 ((_ extract 1 0) inst_id)) #b1 #b0) (bvand v1 (bvand (bvnot (bvand v1 (ite (and (not $e3) (not $e2) (not $e4)) #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1))))))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand (bvand w1 v1) (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
not reachable! skip!
==============================
Finished!
Get #state: 1
number of state wb-finish: 1-> 1
--------------------------------
| sv                  | value               
--------------------------------
| RTL_ex_wb_rd        | ((_ extract 1 0) inst)
| RTL_ex_wb_reg_wen   | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (and (not (= #b01 $e1)) (not (= #b10 $e1)) (not (= #b11 $e1))))) (let (($e3 ((_ extract 7 6) inst))) (bvand (bvnot (bvand v1 (bvnot (bvand (bvnot (bvand v1 (ite (and (not (= #b01 $e3)) (not (= #b10 $e3)) (not (= #b11 $e3))) #b1 #b0))) (bvnot (bvand (bvnot v1) (ite $e2 #b1 #b0))))))) (bvnot (bvand (bvnot v1) (bvnot (bvand (bvnot (bvand v1 (ite $e2 #b1 #b0))) (bvnot (bvand (bvnot w1) (bvnot v1)))))))))))
| RTL_registers[1]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (not (= #b00 $e5)) (= #b01 $e5) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b01 rd1) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))
| RTL_ex_wb_valid     | v1                  
| RTL_registers[3]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b11 $e5) (not (= #b10 $e5)) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not (= #b10 rd1)) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))
| RTL_registers[2]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 ((_ extract 1 0) inst_id))) (let (($e6 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e7 ((_ extract 5 4) inst_id))) (let (($e8 (= #b11 $e7))) (let (($e9 (= #b10 $e7))) (let (($e10 (= #b01 $e7))) (let (($e11 (= #b00 $e7))) (let (($e12 (ite $e8 s3 (ite $e9 s2 (ite $e10 s1 (ite $e11 s0 #b00)))))) (let (($e13 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e14 (ite $e2 $e6 (ite (= #b00 $e12) (ite $e8 reg3 (ite $e9 reg2 (ite $e10 reg1 (ite $e11 reg0 #b00000000)))) (ite (= #b01 $e12) ex_val $e13))))) (let (($e15 ((_ extract 3 2) inst_id))) (let (($e16 (= #b11 $e15))) (let (($e17 (= #b10 $e15))) (let (($e18 (= #b01 $e15))) (let (($e19 (= #b00 $e15))) (let (($e20 (ite $e16 s3 (ite $e17 s2 (ite $e18 s1 (ite $e19 s0 #b00)))))) (let (($e21 (ite (= #b00 $e20) (ite $e16 reg3 (ite $e17 reg2 (ite $e18 reg1 (ite $e19 reg0 #b00000000)))) (ite (= #b01 $e20) ex_val $e13)))) (ite (and (= #b10 $e5) (not (= #b01 $e5)) (not (= #b00 $e5)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e14 $e21) (ite $e2 $e6 (ite $e4 (bvnot (bvand $e14 $e21)) #b00000000))) (ite (= #b1 (bvand w1 (ite (and (= #b10 rd1) (not (= #b01 rd1)) (not (= #b00 rd1))) #b1 #b0))) $e13 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))))))))))))))))))))))))
| RTL_ex_wb_val       | (let (($e1 (= #b00 rd1))) (let (($e2 (bvand w2 v2))) (let (($e3 (= #b00 rd2))) (let (($e4 (= #b01 rd1))) (let (($e5 (= #b01 rd2))) (let (($e6 (= #b10 rd1))) (let (($e7 (= #b10 rd2))) (let (($e8 ((_ extract 7 6) inst_id))) (let (($e9 (= #b10 $e8))) (let (($e10 (= #b01 $e8))) (let (($e11 (= #b11 $e8))) (let (($e12 (and (not $e10) (not $e9) (not $e11)))) (let (($e13 ((_ extract 1 0) inst_id))) (let (($e14 (= #b01 $e13))) (let (($e15 (= #b00 $e13))) (let (($e16 (= #b10 $e13))) (let (($e17 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e18 ((_ extract 5 4) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e25 (ite $e9 $e17 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e24))))) (let (($e26 ((_ extract 3 2) inst_id))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 (ite $e27 s3 (ite $e28 s2 (ite $e29 s1 (ite $e30 s0 #b00)))))) (let (($e32 (ite (= #b00 $e31) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e31) ex_val $e24)))) (let (($e33 ((_ extract 5 4) inst))) (let (($e34 ((_ extract 3 2) inst))) (let (($e35 (ite $e10 (bvadd $e25 $e32) (ite $e9 $e17 (ite $e11 (bvnot (bvand $e25 $e32)) #b00000000))))) (let (($e36 (ite (and $e15 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite $e1 #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite $e3 #b1 #b0))) ex_val reg0))))) (let (($e37 (ite (and (not $e15) $e14 (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e4 (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e5 (not $e3)) #b1 #b0))) ex_val reg1))))) (let (($e38 (ite (and $e16 (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and $e6 (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and $e7 (not $e5) (not $e3)) #b1 #b0))) ex_val reg2))))) (let (($e39 (ite (and (= #b11 $e13) (not $e16) (not $e14) (not $e15) (not $e12)) $e35 (ite (= #b1 (bvand w1 (ite (and (= #b11 rd1) (not $e6) (not $e4) (not $e1)) #b1 #b0))) $e24 (ite (= #b1 (bvand $e2 (ite (and (= #b11 rd2) (not $e7) (not $e5) (not $e3)) #b1 #b0))) ex_val reg3))))) (bvadd (ite (= #b11 $e33) $e39 (ite (= #b10 $e33) $e38 (ite (= #b01 $e33) $e37 (ite (= #b00 $e33) $e36 #b00000000)))) (ite (= #b11 $e34) $e39 (ite (= #b10 $e34) $e38 (ite (= #b01 $e34) $e37 (ite (= #b00 $e34) $e36 #b00000000))))))))))))))))))))))))))))))))))))))))))))
| __START__           | #b0                 
| RTL_registers[0]    | (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e6 ((_ extract 5 4) inst_id))) (let (($e7 (= #b11 $e6))) (let (($e8 (= #b10 $e6))) (let (($e9 (= #b01 $e6))) (let (($e10 (= #b00 $e6))) (let (($e11 (ite $e7 s3 (ite $e8 s2 (ite $e9 s1 (ite $e10 s0 #b00)))))) (let (($e12 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e13 (ite $e2 $e5 (ite (= #b00 $e11) (ite $e7 reg3 (ite $e8 reg2 (ite $e9 reg1 (ite $e10 reg0 #b00000000)))) (ite (= #b01 $e11) ex_val $e12))))) (let (($e14 ((_ extract 3 2) inst_id))) (let (($e15 (= #b11 $e14))) (let (($e16 (= #b10 $e14))) (let (($e17 (= #b01 $e14))) (let (($e18 (= #b00 $e14))) (let (($e19 (ite $e15 s3 (ite $e16 s2 (ite $e17 s1 (ite $e18 s0 #b00)))))) (let (($e20 (ite (= #b00 $e19) (ite $e15 reg3 (ite $e16 reg2 (ite $e17 reg1 (ite $e18 reg0 #b00000000)))) (ite (= #b01 $e19) ex_val $e12)))) (ite (and (= #b00 ((_ extract 1 0) inst_id)) (not (and (not $e3) (not $e2) (not $e4)))) (ite $e3 (bvadd $e13 $e20) (ite $e2 $e5 (ite $e4 (bvnot (bvand $e13 $e20)) #b00000000))) (ite (= #b1 (bvand w1 (ite (= #b00 rd1) #b1 #b0))) $e12 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0)))))))))))))))))))))))
| stage_tracker_ex_wb_iuv| #b1                 
| stage_tracker_id_ex_iuv| #b0                 
| stage_tracker_wb_iuv| #b0                 
| stage_tracker_if_id_iuv| #b0                 
number of state wb-finish in total: 55 --> 55
Program running time: 6319 (s)
