(define-fun FunNew ((RTL_registers[2] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[2] RTL_registers[2]))
(define-fun FunNew ((rd2 (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) (oper1 (_ BitVec 8)) (v0 (_ BitVec 8)) (oper2 (_ BitVec 8)) (inst_id (_ BitVec 8)) (s3 (_ BitVec 8)) (s2 (_ BitVec 8)) (s0 (_ BitVec 8)) (reg3 (_ BitVec 8)) (reg2 (_ BitVec 8)) (reg1 (_ BitVec 8)) (ex_val (_ BitVec 8)) (inst (_ BitVec 8)) (s1 (_ BitVec 8)) (op (_ BitVec 8)) (reg0 (_ BitVec 8)) ) (_ BitVec 8) (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (= #b01 $e6))) (let (($e9 (= #b10 $e6))) (let (($e10 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e11 ((_ extract 5 4) inst_id))) (let (($e12 (= #b11 $e11))) (let (($e13 (= #b10 $e11))) (let (($e14 (= #b01 $e11))) (let (($e15 (= #b00 $e11))) (let (($e16 (ite $e12 s3 (ite $e13 s2 (ite $e14 s1 (ite $e15 s0 #b00)))))) (let (($e17 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e18 (ite $e2 $e10 (ite (= #b00 $e16) (ite $e12 reg3 (ite $e13 reg2 (ite $e14 reg1 (ite $e15 reg0 #b00000000)))) (ite (= #b01 $e16) ex_val $e17))))) (let (($e19 ((_ extract 3 2) inst_id))) (let (($e20 (= #b11 $e19))) (let (($e21 (= #b10 $e19))) (let (($e22 (= #b01 $e19))) (let (($e23 (= #b00 $e19))) (let (($e24 (ite $e20 s3 (ite $e21 s2 (ite $e22 s1 (ite $e23 s0 #b00)))))) (let (($e25 (ite (= #b00 $e24) (ite $e20 reg3 (ite $e21 reg2 (ite $e22 reg1 (ite $e23 reg0 #b00000000)))) (ite (= #b01 $e24) ex_val $e17)))) (let (($e26 ((_ extract 1 0) inst))) (let (($e27 ((_ extract 5 4) inst))) (let (($e28 (= #b11 $e27))) (let (($e29 (= #b10 $e27))) (let (($e30 (= #b01 $e27))) (let (($e31 (= #b00 $e27))) (let (($e32 ((_ extract 3 2) inst))) (let (($e33 (= #b11 $e32))) (let (($e34 (= #b10 $e32))) (let (($e35 (= #b01 $e32))) (let (($e36 (= #b00 $e32))) (let (($e37 (ite $e3 (bvadd $e18 $e25) (ite $e2 $e10 (ite $e4 (bvnot (bvand $e18 $e25)) #b00000000))))) (let (($e38 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e39 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e40 (concat (ite (and $e9 (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e41 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e42 (ite $e33 $e41 (ite $e34 $e40 (ite $e35 $e39 (ite $e36 $e38 #b00)))))) (let (($e43 (ite $e28 $e41 (ite $e29 $e40 (ite $e30 $e39 (ite $e31 $e38 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b10 $e26) (not (= #b01 $e26)) (not (= #b00 $e26))) #b1 #b0))) (bvadd (ite (= #b00 $e42) (ite $e33 reg3 (ite $e34 reg2 (ite $e35 reg1 (ite $e36 reg0 #b00000000)))) (ite (= #b01 $e42) ex_val $e37)) (ite (= #b00 $e43) (ite $e28 reg3 (ite $e29 reg2 (ite $e30 reg1 (ite $e31 reg0 #b00000000)))) (ite (= #b01 $e43) ex_val $e37))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e9 (not $e8) (not $e7)) #b1 #b0))) $e37 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2)))))))))))))))))))))))))))))))))))))))))))))))
(define-fun FunNew ((RTL_registers[0] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[0] RTL_registers[0]))
(define-fun FunNew ((rd2 (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) (oper1 (_ BitVec 8)) (v0 (_ BitVec 8)) (oper2 (_ BitVec 8)) (inst_id (_ BitVec 8)) (s3 (_ BitVec 8)) (s2 (_ BitVec 8)) (s0 (_ BitVec 8)) (reg3 (_ BitVec 8)) (reg2 (_ BitVec 8)) (reg1 (_ BitVec 8)) (ex_val (_ BitVec 8)) (inst (_ BitVec 8)) (s1 (_ BitVec 8)) (op (_ BitVec 8)) (reg0 (_ BitVec 8)) ) (_ BitVec 8) (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e9 ((_ extract 5 4) inst_id))) (let (($e10 (= #b11 $e9))) (let (($e11 (= #b10 $e9))) (let (($e12 (= #b01 $e9))) (let (($e13 (= #b00 $e9))) (let (($e14 (ite $e10 s3 (ite $e11 s2 (ite $e12 s1 (ite $e13 s0 #b00)))))) (let (($e15 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e16 (ite $e2 $e8 (ite (= #b00 $e14) (ite $e10 reg3 (ite $e11 reg2 (ite $e12 reg1 (ite $e13 reg0 #b00000000)))) (ite (= #b01 $e14) ex_val $e15))))) (let (($e17 ((_ extract 3 2) inst_id))) (let (($e18 (= #b11 $e17))) (let (($e19 (= #b10 $e17))) (let (($e20 (= #b01 $e17))) (let (($e21 (= #b00 $e17))) (let (($e22 (ite $e18 s3 (ite $e19 s2 (ite $e20 s1 (ite $e21 s0 #b00)))))) (let (($e23 (ite (= #b00 $e22) (ite $e18 reg3 (ite $e19 reg2 (ite $e20 reg1 (ite $e21 reg0 #b00000000)))) (ite (= #b01 $e22) ex_val $e15)))) (let (($e24 ((_ extract 5 4) inst))) (let (($e25 (= #b11 $e24))) (let (($e26 (= #b10 $e24))) (let (($e27 (= #b01 $e24))) (let (($e28 (= #b00 $e24))) (let (($e29 ((_ extract 3 2) inst))) (let (($e30 (= #b11 $e29))) (let (($e31 (= #b10 $e29))) (let (($e32 (= #b01 $e29))) (let (($e33 (= #b00 $e29))) (let (($e34 (ite $e3 (bvadd $e16 $e23) (ite $e2 $e8 (ite $e4 (bvnot (bvand $e16 $e23)) #b00000000))))) (let (($e35 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e36 (concat (ite (and (= #b01 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e37 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e38 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e39 (ite $e30 $e38 (ite $e31 $e37 (ite $e32 $e36 (ite $e33 $e35 #b00)))))) (let (($e40 (ite $e25 $e38 (ite $e26 $e37 (ite $e27 $e36 (ite $e28 $e35 #b00)))))) (ite (= #b1 (bvand v0 (ite (= #b00 ((_ extract 1 0) inst)) #b1 #b0))) (bvadd (ite (= #b00 $e39) (ite $e30 reg3 (ite $e31 reg2 (ite $e32 reg1 (ite $e33 reg0 #b00000000)))) (ite (= #b01 $e39) ex_val $e34)) (ite (= #b00 $e40) (ite $e25 reg3 (ite $e26 reg2 (ite $e27 reg1 (ite $e28 reg0 #b00000000)))) (ite (= #b01 $e40) ex_val $e34))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite $e7 #b1 #b0))) $e34 (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))))))))))))))))))))))))))))))))))))))))))))
(define-fun FunNew ((RTL_registers[3] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[3] RTL_registers[3]))
(define-fun FunNew ((rd2 (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) (oper1 (_ BitVec 8)) (v0 (_ BitVec 8)) (oper2 (_ BitVec 8)) (inst_id (_ BitVec 8)) (s3 (_ BitVec 8)) (s2 (_ BitVec 8)) (s0 (_ BitVec 8)) (reg3 (_ BitVec 8)) (reg2 (_ BitVec 8)) (reg1 (_ BitVec 8)) (ex_val (_ BitVec 8)) (inst (_ BitVec 8)) (s1 (_ BitVec 8)) (op (_ BitVec 8)) (reg0 (_ BitVec 8)) ) (_ BitVec 8) (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (= #b01 $e6))) (let (($e9 (= #b10 $e6))) (let (($e10 (= #b11 $e6))) (let (($e11 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e12 ((_ extract 5 4) inst_id))) (let (($e13 (= #b11 $e12))) (let (($e14 (= #b10 $e12))) (let (($e15 (= #b01 $e12))) (let (($e16 (= #b00 $e12))) (let (($e17 (ite $e13 s3 (ite $e14 s2 (ite $e15 s1 (ite $e16 s0 #b00)))))) (let (($e18 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e19 (ite $e2 $e11 (ite (= #b00 $e17) (ite $e13 reg3 (ite $e14 reg2 (ite $e15 reg1 (ite $e16 reg0 #b00000000)))) (ite (= #b01 $e17) ex_val $e18))))) (let (($e20 ((_ extract 3 2) inst_id))) (let (($e21 (= #b11 $e20))) (let (($e22 (= #b10 $e20))) (let (($e23 (= #b01 $e20))) (let (($e24 (= #b00 $e20))) (let (($e25 (ite $e21 s3 (ite $e22 s2 (ite $e23 s1 (ite $e24 s0 #b00)))))) (let (($e26 (ite (= #b00 $e25) (ite $e21 reg3 (ite $e22 reg2 (ite $e23 reg1 (ite $e24 reg0 #b00000000)))) (ite (= #b01 $e25) ex_val $e18)))) (let (($e27 ((_ extract 1 0) inst))) (let (($e28 ((_ extract 5 4) inst))) (let (($e29 (= #b11 $e28))) (let (($e30 (= #b10 $e28))) (let (($e31 (= #b01 $e28))) (let (($e32 (= #b00 $e28))) (let (($e33 ((_ extract 3 2) inst))) (let (($e34 (= #b11 $e33))) (let (($e35 (= #b10 $e33))) (let (($e36 (= #b01 $e33))) (let (($e37 (= #b00 $e33))) (let (($e38 (ite $e3 (bvadd $e19 $e26) (ite $e2 $e11 (ite $e4 (bvnot (bvand $e19 $e26)) #b00000000))))) (let (($e39 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e40 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e41 (concat (ite (and $e9 (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e42 (concat (ite (and $e10 (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e43 (ite $e34 $e42 (ite $e35 $e41 (ite $e36 $e40 (ite $e37 $e39 #b00)))))) (let (($e44 (ite $e29 $e42 (ite $e30 $e41 (ite $e31 $e40 (ite $e32 $e39 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b11 $e27) (not (= #b10 $e27)) (not (= #b01 $e27)) (not (= #b00 $e27))) #b1 #b0))) (bvadd (ite (= #b00 $e43) (ite $e34 reg3 (ite $e35 reg2 (ite $e36 reg1 (ite $e37 reg0 #b00000000)))) (ite (= #b01 $e43) ex_val $e38)) (ite (= #b00 $e44) (ite $e29 reg3 (ite $e30 reg2 (ite $e31 reg1 (ite $e32 reg0 #b00000000)))) (ite (= #b01 $e44) ex_val $e38))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e10 (not $e9) (not $e8) (not $e7)) #b1 #b0))) $e38 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun FunNew ((RTL_registers[1] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[1] RTL_registers[1]))
(define-fun FunNew ((rd2 (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) (oper1 (_ BitVec 8)) (v0 (_ BitVec 8)) (oper2 (_ BitVec 8)) (inst_id (_ BitVec 8)) (s3 (_ BitVec 8)) (s2 (_ BitVec 8)) (s0 (_ BitVec 8)) (reg3 (_ BitVec 8)) (reg2 (_ BitVec 8)) (reg1 (_ BitVec 8)) (ex_val (_ BitVec 8)) (inst (_ BitVec 8)) (s1 (_ BitVec 8)) (op (_ BitVec 8)) (reg0 (_ BitVec 8)) ) (_ BitVec 8) (let (($e1 ((_ extract 7 6) inst_id))) (let (($e2 (= #b10 $e1))) (let (($e3 (= #b01 $e1))) (let (($e4 (= #b11 $e1))) (let (($e5 (and (not $e3) (not $e2) (not $e4)))) (let (($e6 ((_ extract 1 0) inst_id))) (let (($e7 (= #b00 $e6))) (let (($e8 (= #b01 $e6))) (let (($e9 (concat #b0000 ((_ extract 5 2) inst_id)))) (let (($e10 ((_ extract 5 4) inst_id))) (let (($e11 (= #b11 $e10))) (let (($e12 (= #b10 $e10))) (let (($e13 (= #b01 $e10))) (let (($e14 (= #b00 $e10))) (let (($e15 (ite $e11 s3 (ite $e12 s2 (ite $e13 s1 (ite $e14 s0 #b00)))))) (let (($e16 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e17 (ite $e2 $e9 (ite (= #b00 $e15) (ite $e11 reg3 (ite $e12 reg2 (ite $e13 reg1 (ite $e14 reg0 #b00000000)))) (ite (= #b01 $e15) ex_val $e16))))) (let (($e18 ((_ extract 3 2) inst_id))) (let (($e19 (= #b11 $e18))) (let (($e20 (= #b10 $e18))) (let (($e21 (= #b01 $e18))) (let (($e22 (= #b00 $e18))) (let (($e23 (ite $e19 s3 (ite $e20 s2 (ite $e21 s1 (ite $e22 s0 #b00)))))) (let (($e24 (ite (= #b00 $e23) (ite $e19 reg3 (ite $e20 reg2 (ite $e21 reg1 (ite $e22 reg0 #b00000000)))) (ite (= #b01 $e23) ex_val $e16)))) (let (($e25 ((_ extract 1 0) inst))) (let (($e26 ((_ extract 5 4) inst))) (let (($e27 (= #b11 $e26))) (let (($e28 (= #b10 $e26))) (let (($e29 (= #b01 $e26))) (let (($e30 (= #b00 $e26))) (let (($e31 ((_ extract 3 2) inst))) (let (($e32 (= #b11 $e31))) (let (($e33 (= #b10 $e31))) (let (($e34 (= #b01 $e31))) (let (($e35 (= #b00 $e31))) (let (($e36 (ite $e3 (bvadd $e17 $e24) (ite $e2 $e9 (ite $e4 (bvnot (bvand $e17 $e24)) #b00000000))))) (let (($e37 (concat (ite (and $e7 (not $e5)) #b1 #b0) (ite (= #b01 s0) #b1 #b0)))) (let (($e38 (concat (ite (and $e8 (not $e5)) #b1 #b0) (ite (= #b01 s1) #b1 #b0)))) (let (($e39 (concat (ite (and (= #b10 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s2) #b1 #b0)))) (let (($e40 (concat (ite (and (= #b11 $e6) (not $e5)) #b1 #b0) (ite (= #b01 s3) #b1 #b0)))) (let (($e41 (ite $e32 $e40 (ite $e33 $e39 (ite $e34 $e38 (ite $e35 $e37 #b00)))))) (let (($e42 (ite $e27 $e40 (ite $e28 $e39 (ite $e29 $e38 (ite $e30 $e37 #b00)))))) (ite (= #b1 (bvand v0 (ite (and (= #b01 $e25) (not (= #b00 $e25))) #b1 #b0))) (bvadd (ite (= #b00 $e41) (ite $e32 reg3 (ite $e33 reg2 (ite $e34 reg1 (ite $e35 reg0 #b00000000)))) (ite (= #b01 $e41) ex_val $e36)) (ite (= #b00 $e42) (ite $e27 reg3 (ite $e28 reg2 (ite $e29 reg1 (ite $e30 reg0 #b00000000)))) (ite (= #b01 $e42) ex_val $e36))) (ite (= #b1 (bvand (bvand v0 (bvnot (ite $e5 #b1 #b0))) (ite (and $e8 (not $e7)) #b1 #b0))) $e36 (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))))))))))))))))))))))))))))))))))))))))))))))
