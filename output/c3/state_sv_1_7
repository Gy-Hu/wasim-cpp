(define-fun FunNew ((RTL_registers[1] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[1] RTL_registers[1]))
(define-fun FunNew ((rd2 (_ BitVec 8)) (reg1 (_ BitVec 8)) (ex_val (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) ) (_ BitVec 8) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b01 rd2) (not (= #b00 rd2))) #b1 #b0))) ex_val reg1))
(define-fun FunNew ((RTL_ex_wb_rd (_ BitVec 2))) (_ BitVec 2) (ite (= #b1 #b1) RTL_ex_wb_rd RTL_ex_wb_rd))
(define-fun FunNew ((inst (_ BitVec 2)) ) (_ BitVec 2) ((_ extract 1 0) inst))
(define-fun FunNew ((RTL_registers[2] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[2] RTL_registers[2]))
(define-fun FunNew ((reg2 (_ BitVec 8)) (rd2 (_ BitVec 8)) (ex_val (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) ) (_ BitVec 8) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b10 rd2) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg2))
(define-fun FunNew ((RTL_registers[3] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[3] RTL_registers[3]))
(define-fun FunNew ((reg3 (_ BitVec 8)) (rd2 (_ BitVec 8)) (ex_val (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) ) (_ BitVec 8) (ite (= #b1 (bvand (bvand w2 v2) (ite (and (= #b11 rd2) (not (= #b10 rd2)) (not (= #b01 rd2)) (not (= #b00 rd2))) #b1 #b0))) ex_val reg3))
(define-fun FunNew ((__START__ (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) __START__ __START__))
#b0
(define-fun FunNew ((RTL_ex_wb_valid (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) RTL_ex_wb_valid RTL_ex_wb_valid))
(define-fun FunNew ((v1 (_ BitVec 1)) (RTL_if_id_valid (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot RTL_if_id_valid) (bvnot v1))))
(define-fun FunNew ((RTL_ex_wb_reg_wen (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) RTL_ex_wb_reg_wen RTL_ex_wb_reg_wen))
(define-fun FunNew ((v1 (_ BitVec 1)) (w1 (_ BitVec 1)) (RTL_if_id_inst (_ BitVec 1)) (RTL_if_id_valid (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 ((_ extract 7 6) RTL_if_id_inst))) (let (($e2 (bvand (bvnot RTL_if_id_valid) (bvnot v1)))) (bvand (bvnot (bvand (bvnot $e2) (bvand (ite (and (not (= #b10 $e1)) (not (= #b01 $e1)) (not (= #b11 $e1))) #b1 #b0) (bvand RTL_if_id_valid (bvnot v1))))) (bvnot (bvand (bvnot w1) $e2))))))
(define-fun FunNew ((stage_tracker_if_id_iuv (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stage_tracker_if_id_iuv stage_tracker_if_id_iuv))
#b0
(define-fun FunNew ((RTL_ex_wb_val (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_ex_wb_val RTL_ex_wb_val))
(define-fun FunNew ((reg0 (_ BitVec 8)) (oper1 (_ BitVec 8)) (op (_ BitVec 8)) (ex_val (_ BitVec 8)) (reg1 (_ BitVec 8)) (reg2 (_ BitVec 8)) (reg3 (_ BitVec 8)) (oper2 (_ BitVec 8)) (s0 (_ BitVec 8)) (s1 (_ BitVec 8)) (s2 (_ BitVec 8)) (s3 (_ BitVec 8)) (inst (_ BitVec 8)) ) (_ BitVec 8) (let (($e1 (ite (= #b01 op) (bvadd oper1 oper2) (ite (= #b10 op) oper1 (ite (= #b11 op) (bvnot (bvand oper1 oper2)) #b00000000))))) (let (($e2 ((_ extract 5 4) inst))) (let (($e3 (= #b11 $e2))) (let (($e4 (= #b10 $e2))) (let (($e5 (= #b01 $e2))) (let (($e6 (= #b00 $e2))) (let (($e7 (ite $e3 s3 (ite $e4 s2 (ite $e5 s1 (ite $e6 s0 #b00)))))) (let (($e8 ((_ extract 3 2) inst))) (let (($e9 (= #b11 $e8))) (let (($e10 (= #b10 $e8))) (let (($e11 (= #b01 $e8))) (let (($e12 (= #b00 $e8))) (let (($e13 (ite $e9 s3 (ite $e10 s2 (ite $e11 s1 (ite $e12 s0 #b00)))))) (bvadd (ite (= #b00 $e7) (ite $e3 reg3 (ite $e4 reg2 (ite $e5 reg1 (ite $e6 reg0 #b00000000)))) (ite (= #b01 $e7) ex_val $e1)) (ite (= #b00 $e13) (ite $e9 reg3 (ite $e10 reg2 (ite $e11 reg1 (ite $e12 reg0 #b00000000)))) (ite (= #b01 $e13) ex_val $e1)))))))))))))))))
(define-fun FunNew ((RTL_registers[0] (_ BitVec 8))) (_ BitVec 8) (ite (= #b1 #b1) RTL_registers[0] RTL_registers[0]))
(define-fun FunNew ((reg0 (_ BitVec 8)) (rd2 (_ BitVec 8)) (ex_val (_ BitVec 8)) (v2 (_ BitVec 8)) (w2 (_ BitVec 8)) ) (_ BitVec 8) (ite (= #b1 (bvand (bvand w2 v2) (ite (= #b00 rd2) #b1 #b0))) ex_val reg0))
(define-fun FunNew ((stage_tracker_ex_wb_iuv (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stage_tracker_ex_wb_iuv stage_tracker_ex_wb_iuv))
#b1
(define-fun FunNew ((stage_tracker_id_ex_iuv (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stage_tracker_id_ex_iuv stage_tracker_id_ex_iuv))
#b0
(define-fun FunNew ((stage_tracker_wb_iuv (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stage_tracker_wb_iuv stage_tracker_wb_iuv))
#b0
