(define-fun FunNew ((tag31 (_ BitVec 1)) (tag21 (_ BitVec 1)) (tag01 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot tag11) (bvand tag01 (bvand (bvnot tag21) (bvnot tag31)))))
init
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (c (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand tag21 (bvnot (ite (= c reg_v1) #b1 #b0)))))
ts.asmpt @0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))
(bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) ) (_ BitVec 1) (bvand v2 (bvnot stall3inX18)))
(bvand v2 (bvnot stall3inX18))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (c (_ BitVec 1)) (b (_ BitVec 1)) (tag21 (_ BitVec 1)) (v1 (_ BitVec 1)) (v2 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))) (let (($e2 (bvand v2 (bvnot stall3inX18)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e1)) (bvnot (bvand (bvnot $e1) (bvnot (bvand tag21 (bvnot $e2)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e2) b c)) #b1 #b0)))))))
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall2inX153 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX153 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot stall1inX153) (bvnot (bvand v1 stall2inX153))))
(bvand (bvnot stall1inX153) (bvnot (bvand v1 stall2inX153)))@0
#b1
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall3inX286 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX286 (_ BitVec 1)) (stall1inX286 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX286) (bvand (bvnot stall2inX286) (bvnot (bvand v1 stall3inX286))))))
(bvnot (bvand (bvnot stall1inX286) (bvand (bvnot stall2inX286) (bvnot (bvand v1 stall3inX286)))))@0
(define-fun FunNew ((stall3inX286 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX286 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall2inX286) (bvnot (bvand v1 stall3inX286)))))
(bvnot (bvand (bvnot stall2inX286) (bvnot (bvand v1 stall3inX286))))@0
#b1
ts.asmpt @0
(define-fun FunNew ((stall3inX474 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX474 (_ BitVec 1)) (stall1inX474 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX474) (bvand (bvnot stall2inX474) (bvnot (bvand v1 stall3inX474))))))
(bvnot (bvand (bvnot stall1inX474) (bvand (bvnot stall2inX474) (bvnot (bvand v1 stall3inX474)))))@0
(define-fun FunNew ((stall3inX474 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX474 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot stall2inX474) (bvnot (bvand v1 stall3inX474))))
(bvand (bvnot stall2inX474) (bvnot (bvand v1 stall3inX474)))@0
(define-fun FunNew ((a (_ BitVec 1)) (stall3inX474 (_ BitVec 1)) (b (_ BitVec 1)) (reg_v (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX474 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvand (bvnot stall2inX474) (bvnot (bvand v1 stall3inX474))) (bvnot (ite (= reg_v (ite (= #b1 (bvand v1 (bvnot stall3inX474))) (bvadd #b0001 (bvmul #b0010 a)) b)) #b1 #b0)))))
ts.asmpt @1
(define-fun FunNew ((a (_ BitVec 1)) (b (_ BitVec 1)) (v1 (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (ite (= #b1 v1) (bvadd #b0001 (bvmul #b0010 a)) b)))
ts.asmpt @0
(define-fun FunNew ((stall1inX735 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall1inX735))
(bvnot stall1inX735)@0
#b1
#b1@0
(define-fun FunNew ((stall3inX735 (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stall3inX735 stall3inX735))
stall3inX735@0
(define-fun FunNew ((a (_ BitVec 1)) (b (_ BitVec 1)) (v1 (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall3inX735 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (ite (= #b1 v1) (bvadd #b0001 (bvmul #b0010 a)) b))) (bvnot (bvand stall3inX735 (bvnot (ite (= reg_v (ite (= #b1 stall3inX735) $e1 (bvadd #b0001 (bvmul #b0010 $e1)))) #b1 #b0))))))
ts.asmpt @1
(define-fun FunNew ((a (_ BitVec 1)) (b (_ BitVec 1)) (v1 (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (ite (= #b1 v1) (bvadd #b0001 (bvmul #b0010 a)) b)))
ts.asmpt @0
(define-fun FunNew ((stall2inX1237 (_ BitVec 1)) (stall3inX1237 (_ BitVec 1)) (stall1inX1237 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX1237) (bvand (bvnot stall3inX1237) (bvnot stall2inX1237)))))
(bvnot (bvand (bvnot stall1inX1237) (bvand (bvnot stall3inX1237) (bvnot stall2inX1237))))@0
(define-fun FunNew ((stall2inX1237 (_ BitVec 1)) (stall3inX1237 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall3inX1237) (bvnot stall2inX1237))))
(bvnot (bvand (bvnot stall3inX1237) (bvnot stall2inX1237)))@0
(define-fun FunNew ((stall3inX1237 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall3inX1237))
(bvnot stall3inX1237)@0
(define-fun FunNew ((a (_ BitVec 1)) (b (_ BitVec 1)) (v1 (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall3inX1237 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (ite (= #b1 v1) (bvadd #b0001 (bvmul #b0010 a)) b))) (bvnot (bvand stall3inX1237 (bvnot (ite (= reg_v (ite (= #b1 stall3inX1237) $e1 (bvadd #b0001 (bvmul #b0010 $e1)))) #b1 #b0))))))
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall1inX3308 (_ BitVec 1)) (stall2inX3308 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot stall2inX3308) (bvnot stall1inX3308)))
(bvand (bvnot stall2inX3308) (bvnot stall1inX3308))@0
#b1
#b1@0
#b1
ts.asmpt @1
