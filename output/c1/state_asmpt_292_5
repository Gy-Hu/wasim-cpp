(define-fun FunNew ((tag31 (_ BitVec 1)) (tag21 (_ BitVec 1)) (tag01 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot tag11) (bvand tag01 (bvand (bvnot tag21) (bvnot tag31)))))
init
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (c (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand tag21 (bvnot (ite (= c reg_v1) #b1 #b0)))))
ts.asmpt @0
(define-fun FunNew ((stall3inX84 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX84 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX84 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX84) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84)))))))))
(bvnot (bvand (bvnot stall1inX84) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84))))))))@0
(define-fun FunNew ((stall3inX84 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX84 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvand v1 (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84)))))
(bvand v1 (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84))))@0
(define-fun FunNew ((stall3inX84 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX84 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX84 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX84) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84)))))))))
(bvnot (bvand (bvnot stall1inX84) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84))))))))@0
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (stall3inX84 (_ BitVec 1)) (stall2inX84 (_ BitVec 1)) (c (_ BitVec 1)) (b (_ BitVec 1)) (tag21 (_ BitVec 1)) (v1 (_ BitVec 1)) (v2 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v1 (bvand (bvnot stall2inX84) (bvnot (bvand v2 stall3inX84)))))) (let (($e2 (bvand v2 (bvnot stall3inX84)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e1)) (bvnot (bvand (bvnot $e1) (bvnot (bvand tag21 (bvnot $e2)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e2) b c)) #b1 #b0)))))))
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall1inX194 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall1inX194))
(bvnot stall1inX194)@0
#b1
#b1@0
(define-fun FunNew ((stall3inX194 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand v1 (bvnot stall3inX194))))
(bvnot (bvand v1 (bvnot stall3inX194)))@0
(define-fun FunNew ((stall1inX194 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall1inX194))
(bvnot stall1inX194)@0
#b1
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall3inX385 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX385 (_ BitVec 1)) (stall1inX385 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX385) (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385))))))
(bvnot (bvand (bvnot stall1inX385) (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385)))))@0
(define-fun FunNew ((stall3inX385 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX385 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385)))))
(bvnot (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385))))@0
(define-fun FunNew ((stall3inX385 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvand v1 (bvnot stall3inX385)))
(bvand v1 (bvnot stall3inX385))@0
(define-fun FunNew ((stall3inX385 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX385 (_ BitVec 1)) (stall1inX385 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX385) (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385))))))
(bvnot (bvand (bvnot stall1inX385) (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385)))))@0
(define-fun FunNew ((stall3inX385 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX385 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385)))))
(bvnot (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385))))@0
(define-fun FunNew ((v2 (_ BitVec 1)) (a (_ BitVec 1)) (stall3inX385 (_ BitVec 1)) (c (_ BitVec 1)) (b (_ BitVec 1)) (reg_v (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX385 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvand (bvnot stall2inX385) (bvnot (bvand v1 stall3inX385))) (bvnot (ite (= reg_v (ite (= #b1 (bvand v1 (bvnot stall3inX385))) (bvadd #b0001 (bvmul #b0010 a)) (ite (= #b1 v2) b c))) #b1 #b0)))))
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall1inX553 (_ BitVec 1)) (stall2inX553 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot stall2inX553) (bvnot stall1inX553)))
(bvand (bvnot stall2inX553) (bvnot stall1inX553))@0
(define-fun FunNew ((stall2inX553 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall2inX553))
(bvnot stall2inX553)@0
(define-fun FunNew ((stall2inX553 (_ BitVec 1)) (a (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot (ite (= reg_v (bvadd #b0001 (bvmul #b0010 a))) #b1 #b0)) (bvnot stall2inX553))))
ts.asmpt @1
(define-fun FunNew ((a (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (bvadd #b0001 (bvmul #b0010 a))))
ts.asmpt @0
(define-fun FunNew ((stall2inX951 (_ BitVec 1)) (stall3inX951 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall3inX951) (bvnot stall2inX951))))
(bvnot (bvand (bvnot stall3inX951) (bvnot stall2inX951)))@0
(define-fun FunNew ((stall3inX951 (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stall3inX951 stall3inX951))
stall3inX951@0
(define-fun FunNew ((a (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (bvadd #b0001 (bvmul #b0010 a))))
ts.asmpt @0
(define-fun FunNew ((stall3inX1539 (_ BitVec 1)) (stall2inX1539 (_ BitVec 1)) (stall1inX1539 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX1539) (bvand (bvnot stall3inX1539) (bvnot stall2inX1539)))))
(bvnot (bvand (bvnot stall1inX1539) (bvand (bvnot stall3inX1539) (bvnot stall2inX1539))))@0
(define-fun FunNew ((stall2inX1539 (_ BitVec 1)) (stall3inX1539 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall3inX1539) (bvnot stall2inX1539))))
(bvnot (bvand (bvnot stall3inX1539) (bvnot stall2inX1539)))@0
(define-fun FunNew ((stall3inX1539 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall3inX1539))
(bvnot stall3inX1539)@0
(define-fun FunNew ((a (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall3inX1539 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand stall3inX1539 (bvnot (ite (= reg_v (ite (= #b1 stall3inX1539) (bvadd #b0001 (bvmul #b0010 a)) (bvadd (bvmul a #b0100) #b0011))) #b1 #b0)))))
ts.asmpt @1
