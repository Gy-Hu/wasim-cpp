(define-fun FunNew ((tag31 (_ BitVec 1)) (tag21 (_ BitVec 1)) (tag01 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot tag11) (bvand tag01 (bvand (bvnot tag21) (bvnot tag31)))))
init
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (c (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand tag21 (bvnot (ite (= c reg_v1) #b1 #b0)))))
ts.asmpt @0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))
(bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) ) (_ BitVec 1) (bvand v2 (bvnot stall3inX18)))
(bvand v2 (bvnot stall3inX18))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((tag21 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (reg_v1 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (c (_ BitVec 1)) (b (_ BitVec 1)) (v1 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))) (let (($e2 (bvand v2 (bvnot stall3inX18)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e1)) (bvnot (bvand (bvnot $e1) (bvnot (bvand tag21 (bvnot $e2)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e2) b c)) #b1 #b0)))))))
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall3inX153 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX153 (_ BitVec 1)) (stall1inX153 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot stall1inX153) (bvand (bvnot stall2inX153) (bvnot (bvand v1 stall3inX153)))))
(bvand (bvnot stall1inX153) (bvand (bvnot stall2inX153) (bvnot (bvand v1 stall3inX153))))@0
#b1
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall2inX272 (_ BitVec 1)) (stall3inX272 (_ BitVec 1)) (stall1inX272 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX272) (bvand (bvnot stall3inX272) (bvnot stall2inX272)))))
(bvnot (bvand (bvnot stall1inX272) (bvand (bvnot stall3inX272) (bvnot stall2inX272))))@0
(define-fun FunNew ((stall2inX272 (_ BitVec 1)) (stall3inX272 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall3inX272) (bvnot stall2inX272))))
(bvnot (bvand (bvnot stall3inX272) (bvnot stall2inX272)))@0
(define-fun FunNew ((stall3inX272 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall3inX272))
(bvnot stall3inX272)@0
(define-fun FunNew ((stall2inX272 (_ BitVec 1)) (stall3inX272 (_ BitVec 1)) (stall1inX272 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX272) (bvand (bvnot stall3inX272) (bvnot stall2inX272)))))
(bvnot (bvand (bvnot stall1inX272) (bvand (bvnot stall3inX272) (bvnot stall2inX272))))@0
(define-fun FunNew ((stall2inX272 (_ BitVec 1)) (stall3inX272 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall3inX272) (bvnot stall2inX272))))
(bvnot (bvand (bvnot stall3inX272) (bvnot stall2inX272)))@0
(define-fun FunNew ((b (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall2inX272 (_ BitVec 1)) (stall3inX272 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvand (bvnot stall3inX272) (bvnot stall2inX272)) (bvnot (ite (= reg_v (ite (= #b1 stall3inX272) b (bvadd #b0001 (bvmul #b0010 b)))) #b1 #b0)))))
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall2inX443 (_ BitVec 1)) (stall1inX443 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX443) (bvnot stall2inX443))))
(bvnot (bvand (bvnot stall1inX443) (bvnot stall2inX443)))@0
(define-fun FunNew ((stall2inX443 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall2inX443))
(bvnot stall2inX443)@0
(define-fun FunNew ((stall2inX443 (_ BitVec 1)) (b (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot (ite (= reg_v (bvadd #b0001 (bvmul #b0010 b))) #b1 #b0)) (bvnot stall2inX443))))
ts.asmpt @1
(define-fun FunNew ((b (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (bvadd #b0001 (bvmul #b0010 b))))
ts.asmpt @0
(define-fun FunNew ((stall1inX693 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall1inX693))
(bvnot stall1inX693)@0
#b1
#b1@0
(define-fun FunNew ((stall3inX693 (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stall3inX693 stall3inX693))
stall3inX693@0
(define-fun FunNew ((b (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall3inX693 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand stall3inX693 (bvnot (ite (= reg_v (ite (= #b1 stall3inX693) (bvadd #b0001 (bvmul #b0010 b)) (bvadd #b0011 (bvmul b #b0100)))) #b1 #b0)))))
ts.asmpt @1
(define-fun FunNew ((b (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (bvadd #b0001 (bvmul #b0010 b))))
ts.asmpt @0
(define-fun FunNew ((stall2inX1166 (_ BitVec 1)) (stall3inX1166 (_ BitVec 1)) (stall1inX1166 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX1166) (bvand (bvnot stall3inX1166) (bvnot stall2inX1166)))))
(bvnot (bvand (bvnot stall1inX1166) (bvand (bvnot stall3inX1166) (bvnot stall2inX1166))))@0
(define-fun FunNew ((stall2inX1166 (_ BitVec 1)) (stall3inX1166 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall3inX1166) (bvnot stall2inX1166))))
(bvnot (bvand (bvnot stall3inX1166) (bvnot stall2inX1166)))@0
(define-fun FunNew ((stall3inX1166 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall3inX1166))
(bvnot stall3inX1166)@0
(define-fun FunNew ((b (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall3inX1166 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand stall3inX1166 (bvnot (ite (= reg_v (ite (= #b1 stall3inX1166) (bvadd #b0001 (bvmul #b0010 b)) (bvadd #b0011 (bvmul b #b0100)))) #b1 #b0)))))
ts.asmpt @1
#b1
ts.asmpt @0
#b1
#b1@0
