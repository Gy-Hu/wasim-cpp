(define-fun FunNew ((tag31 (_ BitVec 1)) (tag21 (_ BitVec 1)) (tag01 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot tag11) (bvand tag01 (bvand (bvnot tag21) (bvnot tag31)))))
init
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (c (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand tag21 (bvnot (ite (= c reg_v1) #b1 #b0)))))
ts.asmpt @0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))
(bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) ) (_ BitVec 1) (bvand v2 (bvnot stall3inX18)))
(bvand v2 (bvnot stall3inX18))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (c (_ BitVec 1)) (b (_ BitVec 1)) (tag21 (_ BitVec 1)) (v1 (_ BitVec 1)) (v2 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))) (let (($e2 (bvand v2 (bvnot stall3inX18)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e1)) (bvnot (bvand (bvnot $e1) (bvnot (bvand tag21 (bvnot $e2)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e2) b c)) #b1 #b0)))))))
ts.asmpt @1
(define-fun FunNew ((stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33)))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))))))))))@1
(define-fun FunNew ((stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33)))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))))))@1
(define-fun FunNew ((stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33)))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))))))))))@1
(define-fun FunNew ((c (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (tag01 (_ BitVec 1)) (tag21 (_ BitVec 1)) (b (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (tag11 (_ BitVec 1)) (a (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (reg_v1 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand v1 (bvnot $e2)))) (let (($e4 (bvand (bvnot stall1inX18) (bvnot $e3)))) (let (($e5 (bvand v1 $e2))) (let (($e6 (bvand v2 (bvnot stall3inX18)))) (let (($e7 (bvand (bvnot $e1) (bvnot $e5)))) (let (($e8 (bvand (bvnot (bvand stall1inX18 (bvnot $e3))) (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot $e7) stall3inX33)))))) (let (($e9 (bvand (bvnot $e7) (bvnot stall3inX33)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot tag01) $e4)) (bvnot (bvand (bvnot $e4) (bvnot (bvand tag11 (bvnot $e5))))))) $e8)) (bvnot (bvand (bvnot $e8) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e5)) (bvnot (bvand (bvnot $e5) (bvnot (bvand tag21 (bvnot $e6)))))) (bvnot $e9)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e9) (ite (= #b1 $e5) (bvadd #b0001 (bvmul #b0010 a)) b) (ite (= #b1 $e6) b c))) #b1 #b0))))))))))))))
ts.asmpt @2
