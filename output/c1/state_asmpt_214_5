(define-fun FunNew ((tag31 (_ BitVec 1)) (tag21 (_ BitVec 1)) (tag01 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (bvand (bvnot tag11) (bvand tag01 (bvand (bvnot tag21) (bvnot tag31)))))
init
(define-fun FunNew ((reg_v1 (_ BitVec 1)) (c (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand tag21 (bvnot (ite (= c reg_v1) #b1 #b0)))))
ts.asmpt @0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))
(bvnot (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) ) (_ BitVec 1) (bvand v2 (bvnot stall3inX18)))
(bvand v2 (bvnot stall3inX18))@0
(define-fun FunNew ((stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))))))
(bvnot (bvand (bvnot stall1inX18) (bvnot (bvand v1 (bvnot (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18))))))))@0
(define-fun FunNew ((tag21 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (reg_v1 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (c (_ BitVec 1)) (b (_ BitVec 1)) (v1 (_ BitVec 1)) (tag11 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v1 (bvand (bvnot stall2inX18) (bvnot (bvand v2 stall3inX18)))))) (let (($e2 (bvand v2 (bvnot stall3inX18)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e1)) (bvnot (bvand (bvnot $e1) (bvnot (bvand tag21 (bvnot $e2)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e2) b c)) #b1 #b0)))))))
ts.asmpt @1
(define-fun FunNew ((stall3inX33 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33)))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))))))))))@1
(define-fun FunNew ((stall3inX33 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33)))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))))))@1
(define-fun FunNew ((stall3inX33 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33)))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (bvnot (bvand (bvnot stall1inX33) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvnot (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))))))))))@1
(define-fun FunNew ((c (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (b (_ BitVec 1)) (v2 (_ BitVec 1)) (reg_v1 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (tag01 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (a (_ BitVec 1)) (tag11 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand v1 (bvnot $e2)))) (let (($e4 (bvand (bvnot stall1inX18) (bvnot $e3)))) (let (($e5 (bvand v1 $e2))) (let (($e6 (bvand v2 (bvnot stall3inX18)))) (let (($e7 (bvand (bvnot $e1) (bvnot $e5)))) (let (($e8 (bvand (bvnot (bvand stall1inX18 (bvnot $e3))) (bvand (bvnot stall2inX33) (bvnot (bvand (bvnot $e7) stall3inX33)))))) (let (($e9 (bvand (bvnot $e7) (bvnot stall3inX33)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot tag01) $e4)) (bvnot (bvand (bvnot $e4) (bvnot (bvand tag11 (bvnot $e5))))))) $e8)) (bvnot (bvand (bvnot $e8) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e5)) (bvnot (bvand (bvnot $e5) (bvnot (bvand tag21 (bvnot $e6)))))) (bvnot $e9)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e9) (ite (= #b1 $e5) (bvadd #b0001 (bvmul #b0010 a)) b) (ite (= #b1 $e6) b c))) #b1 #b0))))))))))))))
ts.asmpt @2
(define-fun FunNew ((stall3inX51 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX51 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall1inX51 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2)))))) (let (($e4 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (let (($e5 (bvand (bvnot stall2inX33) (bvnot $e4)))) (bvnot (bvand (bvnot stall1inX51) (bvnot (bvand (bvnot (bvand stall1inX33 (bvnot (bvand (bvnot $e3) (bvnot $e5))))) (bvnot (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot (bvand (bvnot $e3) $e5)))) stall3inX51))))))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2)))))) (let (($e4 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (let (($e5 (bvand (bvnot stall2inX33) (bvnot $e4)))) (bvnot (bvand (bvnot stall1inX51) (bvnot (bvand (bvnot (bvand stall1inX33 (bvnot (bvand (bvnot $e3) (bvnot $e5))))) (bvnot (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot (bvand (bvnot $e3) $e5)))) stall3inX51)))))))))))))@2
(define-fun FunNew ((stall3inX51 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX51 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2)))))) (let (($e4 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (let (($e5 (bvand (bvnot stall2inX33) (bvnot $e4)))) (bvnot (bvand (bvnot (bvand stall1inX33 (bvnot (bvand (bvnot $e3) (bvnot $e5))))) (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot (bvand (bvnot $e3) $e5)))) stall3inX51)))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2)))))) (let (($e4 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (let (($e5 (bvand (bvnot stall2inX33) (bvnot $e4)))) (bvnot (bvand (bvnot (bvand stall1inX33 (bvnot (bvand (bvnot $e3) (bvnot $e5))))) (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot (bvand (bvnot $e3) $e5)))) stall3inX51))))))))))@2
(define-fun FunNew ((stall3inX51 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (bvand (bvnot (bvand (bvnot $e3) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvand (bvnot stall2inX33) (bvnot $e3)))))) (bvnot stall3inX51))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (bvand (bvnot (bvand (bvnot $e3) (bvnot (bvand (bvnot (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2))))) (bvand (bvnot stall2inX33) (bvnot $e3)))))) (bvnot stall3inX51)))))@2
(define-fun FunNew ((stall3inX51 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall2inX51 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (stall1inX51 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2)))))) (let (($e4 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (let (($e5 (bvand (bvnot stall2inX33) (bvnot $e4)))) (bvnot (bvand (bvnot stall1inX51) (bvnot (bvand (bvnot (bvand stall1inX33 (bvnot (bvand (bvnot $e3) (bvnot $e5))))) (bvnot (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot (bvand (bvnot $e3) $e5)))) stall3inX51))))))))))))))
(let (($e1 (bvand v2 stall3inX18))) (let (($e2 (bvand (bvnot stall2inX18) (bvnot $e1)))) (let (($e3 (bvand stall1inX18 (bvnot (bvand v1 (bvnot $e2)))))) (let (($e4 (bvand (bvnot (bvand (bvnot $e1) (bvnot (bvand v1 $e2)))) stall3inX33))) (let (($e5 (bvand (bvnot stall2inX33) (bvnot $e4)))) (bvnot (bvand (bvnot stall1inX51) (bvnot (bvand (bvnot (bvand stall1inX33 (bvnot (bvand (bvnot $e3) (bvnot $e5))))) (bvnot (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot (bvand (bvnot $e4) (bvnot (bvand (bvnot $e3) $e5)))) stall3inX51)))))))))))))@2
(define-fun FunNew ((c (_ BitVec 1)) (b (_ BitVec 1)) (reg_v1 (_ BitVec 1)) (stall3inX33 (_ BitVec 1)) (a (_ BitVec 1)) (tag01 (_ BitVec 1)) (stall1inX18 (_ BitVec 1)) (stall2inX18 (_ BitVec 1)) (stall2inX51 (_ BitVec 1)) (v2 (_ BitVec 1)) (stall3inX18 (_ BitVec 1)) (stall2inX33 (_ BitVec 1)) (tag11 (_ BitVec 1)) (v1 (_ BitVec 1)) (stall3inX51 (_ BitVec 1)) (stall1inX33 (_ BitVec 1)) (tag21 (_ BitVec 1)) ) (_ BitVec 1) (let (($e1 (bvadd #b0001 (bvmul #b0010 a)))) (let (($e2 (bvand v2 stall3inX18))) (let (($e3 (bvand (bvnot stall2inX18) (bvnot $e2)))) (let (($e4 (bvand v1 (bvnot $e3)))) (let (($e5 (bvand (bvnot stall1inX18) (bvnot $e4)))) (let (($e6 (bvand v1 $e3))) (let (($e7 (bvand v2 (bvnot stall3inX18)))) (let (($e8 (ite (= #b1 $e6) $e1 b))) (let (($e9 (bvand stall1inX18 (bvnot $e4)))) (let (($e10 (bvand (bvnot (bvand (bvnot tag01) $e5)) (bvnot (bvand (bvnot $e5) (bvnot (bvand tag11 (bvnot $e6)))))))) (let (($e11 (bvand (bvnot $e2) (bvnot $e6)))) (let (($e12 (bvand (bvnot $e11) stall3inX33))) (let (($e13 (bvand (bvnot stall2inX33) (bvnot $e12)))) (let (($e14 (bvand (bvnot $e9) (bvnot $e13)))) (let (($e15 (bvand (bvnot stall1inX33) (bvnot $e14)))) (let (($e16 (bvand (bvnot $e9) $e13))) (let (($e17 (bvand (bvnot $e12) (bvnot $e16)))) (let (($e18 (bvand (bvnot $e11) (bvnot stall3inX33)))) (let (($e19 (bvand (bvnot (bvand stall1inX33 (bvnot $e14))) (bvand (bvnot stall2inX51) (bvnot (bvand (bvnot $e17) stall3inX51)))))) (let (($e20 (bvand (bvnot $e17) (bvnot stall3inX51)))) (bvnot (bvand (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand (bvnot (bvand tag01 (bvnot $e5))) $e15)) (bvnot (bvand (bvnot $e15) (bvnot (bvand $e10 (bvnot $e16))))))) $e19)) (bvnot (bvand (bvnot $e19) (bvnot (bvand (bvand (bvnot (bvand (bvnot $e10) $e16)) (bvnot (bvand (bvnot $e16) (bvnot (bvand (bvand (bvnot (bvand (bvnot tag11) $e6)) (bvnot (bvand (bvnot $e6) (bvnot (bvand tag21 (bvnot $e7)))))) (bvnot $e18)))))) (bvnot $e20)))))) (bvnot (ite (= reg_v1 (ite (= #b1 $e20) (ite (= #b1 $e16) (bvadd #b0001 (bvmul #b0010 (ite (= #b1 $e5) (ite (= #b1 v1) $e1 (ite (= #b1 v2) b c)) a))) $e8) (ite (= #b1 $e18) $e8 (ite (= #b1 $e7) b c)))) #b1 #b0)))))))))))))))))))))))))
ts.asmpt @3
#b1
ts.asmpt @0
(define-fun FunNew ((stall1inX179 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall1inX179))
(bvnot stall1inX179)@0
#b1
ts.asmpt @1
#b1
ts.asmpt @0
(define-fun FunNew ((stall2inX332 (_ BitVec 1)) (stall1inX332 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX332) (bvnot stall2inX332))))
(bvnot (bvand (bvnot stall1inX332) (bvnot stall2inX332)))@0
(define-fun FunNew ((stall2inX332 (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stall2inX332 stall2inX332))
stall2inX332@0
#b1
ts.asmpt @0
(define-fun FunNew ((stall2inX487 (_ BitVec 1)) (stall1inX487 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot stall1inX487) (bvnot stall2inX487))))
(bvnot (bvand (bvnot stall1inX487) (bvnot stall2inX487)))@0
(define-fun FunNew ((stall2inX487 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall2inX487))
(bvnot stall2inX487)@0
(define-fun FunNew ((stall2inX487 (_ BitVec 1)) (a (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand (bvnot (ite (= reg_v (bvadd #b0001 (bvmul #b0010 a))) #b1 #b0)) (bvnot stall2inX487))))
ts.asmpt @1
(define-fun FunNew ((a (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (bvadd #b0001 (bvmul #b0010 a))))
ts.asmpt @0
#b1
#b1@0
(define-fun FunNew ((stall3inX798 (_ BitVec 1))) (_ BitVec 1) (ite (= #b1 #b1) stall3inX798 stall3inX798))
stall3inX798@0
(define-fun FunNew ((a (_ BitVec 1)) (reg_v (_ BitVec 1)) ) (_ BitVec 1) (= reg_v (bvadd #b0001 (bvmul #b0010 a))))
ts.asmpt @0
(define-fun FunNew ((stall1inX1319 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall1inX1319))
(bvnot stall1inX1319)@0
(define-fun FunNew ((stall3inX1319 (_ BitVec 1)) ) (_ BitVec 1) (bvnot stall3inX1319))
(bvnot stall3inX1319)@0
(define-fun FunNew ((a (_ BitVec 1)) (reg_v (_ BitVec 1)) (stall3inX1319 (_ BitVec 1)) ) (_ BitVec 1) (bvnot (bvand stall3inX1319 (bvnot (ite (= reg_v (ite (= #b1 stall3inX1319) (bvadd #b0001 (bvmul #b0010 a)) (bvadd (bvmul a #b0100) #b0011))) #b1 #b0)))))
ts.asmpt @1
